 102 run: assume-console {"\n    left-click 2, 3\n    press up-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {3: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {3: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {up-arrow: ()}
9992 load: after rewriting: press {up-arrow: ()}
9999 mem: storing 'left-click' event starting at 1307
9999 mem: storing 'press' event starting at 1311
9999 mem: storing console in 1315
9999 mem: storing console data in 1317
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1315
9999 mem: location 2 is 1144
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1318
9999 mem: storing 14 in location 1319
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 77 -> 78
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1322
9999 mem: incrementing refcount of 1315: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1323
9999 mem: incrementing refcount of 1144: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1274
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1277
9999 mem: incrementing refcount of 1315: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1277 is 1315
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1305
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1278
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1305
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1317 is 1305
9999 mem: storing 1305 in location 1279
9999 mem: incrementing refcount of 1305: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9999 mem: storing 2 in location 1280
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 0
9999 mem: location 1280 is 2
9999 mem: storing 0 in location 1281
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9998 run: base address is 1306
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 0
9998 run: address to copy is 1307
9998 run: its type is event
9999 mem: location 1307 is 2
9999 mem: location 1308 is 65513
9999 mem: location 1309 is 2
9999 mem: location 1310 is 3
9999 mem: storing 2 in location 1283
9999 mem: storing 65513 in location 1284
9999 mem: storing 2 in location 1285
9999 mem: storing 3 in location 1286
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 0
9999 mem: location 1278 is 1316
9999 mem: storing 1 in location 1316
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1283 is 2
9999 mem: location 1284 is 65513
9999 mem: location 1285 is 2
9999 mem: location 1286 is 3
9999 mem: location 1277 is 1315
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 3]
9998 run: result 1 is 1315
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1326
9999 mem: storing 65513 in location 1327
9999 mem: storing 2 in location 1328
9999 mem: storing 3 in location 1329
9999 mem: decrementing refcount of 1315: 2 -> 1
9999 mem: storing 1315 in location 1322
9999 mem: incrementing refcount of 1315: 1 -> 2
9999 mem: storing 1 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1326 is 2
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 2
9999 mem: location 1329 is 3
9999 mem: storing 1327 in location 1332
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 1327
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1321 is 1008
9999 mem: location 1323 is 1144
9999 mem: location 1332 is 1327
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 2
9999 mem: location 1329 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1334
9999 mem: storing 27 in location 1335
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1338
9999 mem: incrementing refcount of 1144: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1339
9999 mem: storing 2 in location 1340
9999 mem: storing 3 in location 1341
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1338 is 1144
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 3
9998 run: address to copy is 1340
9998 run: its type is "number"
9999 mem: location 1340 is 2
9999 mem: storing 2 in location 1342
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1342 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 3
9998 run: address to copy is 1341
9998 run: its type is "number"
9999 mem: location 1341 is 3
9999 mem: storing 3 in location 1343
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1344
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1343 is 3
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1345
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1346
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1343 is 3
9999 mem: location 1346 is 9
9999 mem: storing 0 in location 1347
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1348
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1349
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1350
9999 mem: incrementing refcount of 1163: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1337 is 1008
9999 mem: location 1338 is 1144
9999 mem: location 1342 is 2
9999 mem: location 1343 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1363
9999 mem: storing 26 in location 1364
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1366
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1367
9999 mem: incrementing refcount of 1144: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1368
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1369
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1367 is 1144
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1370
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1371
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1366 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 107 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1372
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1373
9999 mem: incrementing refcount of 1163: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1163
9999 mem: storing 1163 in location 1374
9999 mem: incrementing refcount of 1163: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1191
9999 mem: incrementing refcount of 1163: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1184
9999 mem: location 1166 is 0
9999 mem: location 1191 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1184
9999 mem: storing 1184 in location 1192
9999 mem: incrementing refcount of 1184: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1163: 14 -> 13
9999 mem: storing 1184 in location 1373
9999 mem: incrementing refcount of 1184: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1375
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1370 is 0
9999 mem: storing 0 in location 1376
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1377
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1368 is 2
9999 mem: location 1377 is 1152
9999 mem: storing 2 in location 1152
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1378
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1369 is 3
9999 mem: location 1378 is 1153
9999 mem: storing 3 in location 1153
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1367 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1379
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1184
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 0 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1373 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 10
9999 mem: storing 10 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 10
9999 mem: storing 1 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 0 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1375 is 1
9999 mem: storing 2 in location 1375
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1370 is 0
9999 mem: storing 0 in location 1376
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1191
9999 mem: incrementing refcount of 1184: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1184
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1186
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1186 is 1193
9999 mem: storing 1193 in location 1192
9999 mem: incrementing refcount of 1193: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1184: 15 -> 14
9999 mem: storing 1193 in location 1373
9999 mem: incrementing refcount of 1193: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1191
9999 mem: incrementing refcount of 1163: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1184
9999 mem: location 1166 is 0
9999 mem: location 1191 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1184
9999 mem: storing 1184 in location 1192
9999 mem: incrementing refcount of 1184: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1163: 14 -> 13
9999 mem: storing 1184 in location 1374
9999 mem: incrementing refcount of 1184: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1193
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 2
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 1 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1376 is 0
9999 mem: location 1378 is 1153
9999 mem: location 1153 is 3
9999 mem: storing 0 in location 1382
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1184
9999 mem: location 1373 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is "character"
9999 mem: location 1194 is 100
9999 mem: storing 100 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 100
9999 mem: storing 0 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1376 is 0
9999 mem: location 1371 is 9
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1191
9999 mem: incrementing refcount of 1193: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1184
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1192
9999 mem: incrementing refcount of 1197: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 15 -> 14
9999 mem: storing 1197 in location 1373
9999 mem: incrementing refcount of 1197: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1184
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1191
9999 mem: incrementing refcount of 1184: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1184
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1186
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1186 is 1193
9999 mem: storing 1193 in location 1192
9999 mem: incrementing refcount of 1193: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1184: 17 -> 16
9999 mem: storing 1193 in location 1374
9999 mem: incrementing refcount of 1193: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1376 is 0
9999 mem: storing 1 in location 1376
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1197
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 2
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 1 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1376 is 1
9999 mem: location 1378 is 1153
9999 mem: location 1153 is 3
9999 mem: storing 0 in location 1382
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1373 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 101
9999 mem: storing 0 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1376 is 1
9999 mem: location 1371 is 9
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1191
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1192
9999 mem: incrementing refcount of 1201: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 15 -> 14
9999 mem: storing 1201 in location 1373
9999 mem: incrementing refcount of 1201: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1191
9999 mem: incrementing refcount of 1193: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1193
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1184
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1195
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1192
9999 mem: incrementing refcount of 1197: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1193: 17 -> 16
9999 mem: storing 1197 in location 1374
9999 mem: incrementing refcount of 1197: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1376 is 1
9999 mem: storing 2 in location 1376
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1201
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 2
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 1 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1376 is 2
9999 mem: location 1378 is 1153
9999 mem: location 1153 is 3
9999 mem: storing 0 in location 1382
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1373 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 102
9999 mem: storing 102 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 102
9999 mem: storing 0 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1376 is 2
9999 mem: location 1371 is 9
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1191
9999 mem: incrementing refcount of 1201: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1201
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1191 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1192
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1201: 14 -> 13
9999 mem: storing 0 in location 1373
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1191
9999 mem: incrementing refcount of 1197: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1197
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1199
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1192
9999 mem: incrementing refcount of 1201: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1197: 17 -> 16
9999 mem: storing 1201 in location 1374
9999 mem: incrementing refcount of 1201: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1376 is 2
9999 mem: storing 3 in location 1376
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 2
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 1 in location 1381
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1376 is 3
9999 mem: location 1378 is 1153
9999 mem: location 1153 is 3
9999 mem: storing 1 in location 1387
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1381 is 1
9999 mem: location 1387 is 1
9999 mem: storing 1 in location 1388
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 2
9999 mem: location 1377 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 0 in location 1389
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1388 is 1
9999 mem: location 1389 is 0
9999 mem: storing 1 in location 1390
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1375 is 2
9999 mem: location 1377 is 1152
9999 mem: storing 2 in location 1152
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1376 is 3
9999 mem: location 1378 is 1153
9999 mem: storing 3 in location 1153
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1201
9999 mem: location 1379 is 1148
9999 mem: decrementing refcount of 1163: 13 -> 12
9999 mem: storing 1201 in location 1148
9999 mem: incrementing refcount of 1201: 15 -> 16
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1367 is 1144
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1144
9999 mem: decrementing refcount of 1144: 9 -> 8
9999 mem: storing 1144 in location 1338
9999 mem: incrementing refcount of 1144: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1351
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 2
9999 mem: storing 2 in location 1352
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1353
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1338 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1354
9999 mem: incrementing refcount of 1163: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1235
9999 mem: storing 1235 in location 1356
9999 mem: incrementing refcount of 1235: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1348 is 1
9999 mem: location 1349 is 0
9999 mem: location 1350 is 1163
9999 mem: location 1352 is 2
9999 mem: location 1353 is 3
9999 mem: location 1354 is 1163
9999 mem: location 1351 is 0
9999 mem: location 1356 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1356 is 1235
9999 mem: skipping refcount at 1235
9999 mem: storing 1 in location 1236
9999 mem: storing 1 in location 1237
9999 mem: storing 0 in location 1238
9999 mem: storing 1163 in location 1239
9999 mem: storing 2 in location 1240
9999 mem: storing 3 in location 1241
9999 mem: storing 1163 in location 1242
9999 mem: storing 0 in location 1243
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1338 is 1144
9999 mem: location 1356 is 1235
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1177
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1180
9999 mem: incrementing refcount of 1144: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1181
9999 mem: incrementing refcount of 1235: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1182
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1181 is 1235
9999 mem: location 1182 is 1155
9999 mem: location 1155 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1157
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1160
9999 mem: incrementing refcount of 1235: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1161
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1391
9999 mem: storing 1391 in location 1162
9999 mem: incrementing refcount of 1391: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1160 is 1235
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1162 is 1391
9999 mem: skipping refcount at 1391
9999 mem: storing 1235 in location 1392
9999 mem: storing 0 in location 1393
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1162 is 1391
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1391
9999 mem: location 1182 is 1155
9999 mem: storing 1391 in location 1155
9999 mem: incrementing refcount of 1391: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1183 is 1156
9999 mem: storing 0 in location 1156
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1180 is 1144
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1144
9999 mem: decrementing refcount of 1144: 10 -> 9
9999 mem: storing 1144 in location 1338
9999 mem: incrementing refcount of 1144: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1338 is 1144
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 2
9999 mem: storing 2 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 2
9999 mem: location 1325 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1274
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1277
9999 mem: incrementing refcount of 1315: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1277 is 1315
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 1
9999 mem: location 1317 is 1305
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1278
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 1
9999 mem: location 1317 is 1305
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1317 is 1305
9999 mem: storing 1305 in location 1279
9999 mem: incrementing refcount of 1305: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9999 mem: storing 2 in location 1280
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 1
9999 mem: location 1280 is 2
9999 mem: storing 0 in location 1281
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9998 run: base address is 1306
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 1
9998 run: address to copy is 1311
9998 run: its type is event
9999 mem: location 1311 is 1
9999 mem: location 1312 is 65517
9999 mem: location 1313 is 0
9999 mem: location 1314 is 0
9999 mem: storing 1 in location 1283
9999 mem: storing 65517 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 1
9999 mem: location 1278 is 1316
9999 mem: storing 2 in location 1316
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1283 is 1
9999 mem: location 1284 is 65517
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1277 is 1315
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1315
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1326
9999 mem: storing 65517 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1315: 3 -> 2
9999 mem: storing 1315 in location 1322
9999 mem: incrementing refcount of 1315: 2 -> 3
9999 mem: storing 1 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65517
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1332
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1321 is 1008
9999 mem: location 1323 is 1144
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65517
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1394
9999 mem: storing 85 in location 1395
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1398
9999 mem: incrementing refcount of 1144: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1399
9999 mem: storing 65517 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1403
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1398 is 1144
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1192
 106 run: return {width: "number"}
9999 mem: location 1192 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1404
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1191
9999 mem: incrementing refcount of 1008: 85 -> 86
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1191 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1191 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1192
 106 run: return {height: "number"}
9999 mem: location 1192 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1405
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1406
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1407
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1408
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1409
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 2 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1153
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1412
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1399 is 1
9999 mem: location 1400 is 65517
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: storing 0 in location 1413
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1399 is 1
9999 mem: location 1400 is 65517
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: storing 1400 in location 1467
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1467 is 1400
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65517
9999 mem: storing 0 in location 1430
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65517
9999 mem: storing 0 in location 1446
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65517
9999 mem: storing 0 in location 1453
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65517
9999 mem: storing 0 in location 1454
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65517
9999 mem: storing 0 in location 1468
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65517
9999 mem: storing 1 in location 1469
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 2
9999 mem: storing 2 in location 1433
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1434
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1435
9999 mem: incrementing refcount of 1163: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-previous-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1398 is 1144
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1481
9999 mem: storing 20 in location 1482
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1484
9999 mem: incrementing refcount of 1144: 11 -> 12
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1485
9990 schedule: move-to-previous-line/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-adjusts-column-at-empty-line
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1486
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1487
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1488
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1484 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1489
 106 run: {already-at-top?: "boolean"} <- lesser-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal", "top": ()}
9999 mem: location 1485 is 1152
9999 mem: location 1152 is 2
9999 mem: storing 0 in location 1490
 106 run: jump-if {already-at-top?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1487 is 1148
9999 mem: location 1148 is 1201
9999 mem: storing 1201 in location 1491
9999 mem: incrementing refcount of 1201: 16 -> 17
 106 run: {old: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1491 is 1201
9999 mem: storing 1201 in location 1492
9999 mem: incrementing refcount of 1201: 17 -> 18
 106 run: {c2: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1491 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1491 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 102
9999 mem: storing 102 in location 1493
 106 run: {at-newline?: "boolean"} <- equal {c2: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1493 is 102
9999 mem: storing 0 in location 1494
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- before-previous-line {curr: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1491 is 1201
9999 mem: location 1484 is 1144
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1503
9999 mem: storing 14 in location 1504
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1506
9999 mem: incrementing refcount of 1201: 18 -> 19
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1507
9999 mem: incrementing refcount of 1144: 12 -> 13
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1506 is 1201
9999 mem: storing 1201 in location 1508
9999 mem: incrementing refcount of 1201: 19 -> 20
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1508 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1508 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 102
9999 mem: storing 102 in location 1509
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1510
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1511
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1511 is 9
9999 mem: location 1510 is 0
9999 mem: storing 9 in location 1512
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1163
9999 mem: storing 1163 in location 1513
9999 mem: incrementing refcount of 1163: 14 -> 15
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1201
9999 mem: location 1513 is 1163
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1119
9999 mem: incrementing refcount of 1201: 20 -> 21
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1120
9999 mem: incrementing refcount of 1163: 15 -> 16
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1201
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1201
9999 mem: location 1120 is 1163
9999 mem: storing 0 in location 1122
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1201
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1191
9999 mem: incrementing refcount of 1201: 21 -> 22
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1201
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1191 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1197
9999 mem: storing 1197 in location 1192
9999 mem: incrementing refcount of 1197: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1197
9999 mem: decrementing refcount of 1201: 22 -> 21
9999 mem: storing 1197 in location 1119
9999 mem: incrementing refcount of 1197: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1197
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1197
9999 mem: location 1120 is 1163
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1119 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is "character"
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 101
9999 mem: storing 0 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1197
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1191
9999 mem: incrementing refcount of 1197: 18 -> 19
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1197
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1193
9999 mem: storing 1193 in location 1192
9999 mem: incrementing refcount of 1193: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1197: 19 -> 18
9999 mem: storing 1193 in location 1119
9999 mem: incrementing refcount of 1193: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1193
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1193
9999 mem: location 1120 is 1163
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1184
9999 mem: location 1119 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is "character"
9999 mem: location 1194 is 100
9999 mem: storing 100 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 100
9999 mem: storing 0 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1193
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1191
9999 mem: incrementing refcount of 1193: 18 -> 19
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1193
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1184
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1184
9999 mem: storing 1184 in location 1192
9999 mem: incrementing refcount of 1184: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1193: 19 -> 18
9999 mem: storing 1184 in location 1119
9999 mem: incrementing refcount of 1184: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1184
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1184
9999 mem: location 1120 is 1163
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1119 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 10
9999 mem: storing 10 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 10
9999 mem: storing 1 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1121 is 2
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 2
9999 mem: storing 2 in location 1514
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1514 is 2
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1514 is 2
9999 mem: location 1512 is 9
9999 mem: storing 2 in location 1516
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1516 is 2
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1516 is 2
9999 mem: storing 3 in location 1516
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1517
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1517 is 0
9999 mem: location 1516 is 3
9999 mem: storing 0 in location 1518
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1201
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1191
9999 mem: incrementing refcount of 1201: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1201
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1191 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1197
9999 mem: storing 1197 in location 1192
9999 mem: incrementing refcount of 1197: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1197
9999 mem: storing 1197 in location 1515
9999 mem: incrementing refcount of 1197: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1197
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1197
9999 mem: decrementing refcount of 1201: 22 -> 21
9999 mem: storing 1197 in location 1508
9999 mem: incrementing refcount of 1197: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1517 is 0
9999 mem: storing 1 in location 1517
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1517 is 1
9999 mem: location 1516 is 3
9999 mem: storing 0 in location 1518
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1197
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1191
9999 mem: incrementing refcount of 1197: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1197
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1191 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1193
9999 mem: storing 1193 in location 1192
9999 mem: incrementing refcount of 1193: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1193
9999 mem: decrementing refcount of 1197: 22 -> 21
9999 mem: storing 1193 in location 1515
9999 mem: incrementing refcount of 1193: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1193
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1193
9999 mem: decrementing refcount of 1197: 21 -> 20
9999 mem: storing 1193 in location 1508
9999 mem: incrementing refcount of 1193: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1517 is 1
9999 mem: storing 2 in location 1517
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1517 is 2
9999 mem: location 1516 is 3
9999 mem: storing 0 in location 1518
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1193
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1191
9999 mem: incrementing refcount of 1193: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1193
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1184
9999 mem: location 1191 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1184
9999 mem: storing 1184 in location 1192
9999 mem: incrementing refcount of 1184: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1193: 22 -> 21
9999 mem: storing 1184 in location 1515
9999 mem: incrementing refcount of 1184: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1184
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1184
9999 mem: decrementing refcount of 1193: 21 -> 20
9999 mem: storing 1184 in location 1508
9999 mem: incrementing refcount of 1184: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1517 is 2
9999 mem: storing 3 in location 1517
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1517 is 3
9999 mem: location 1516 is 3
9999 mem: storing 1 in location 1518
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1184
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1201: 21 -> 20
9999 mem: storing 1184 in location 1491
9999 mem: incrementing refcount of 1184: 21 -> 22
 106 run: {no-motion?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {old: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1491 is 1184
9999 mem: location 1492 is 1201
9999 mem: storing 0 in location 1495
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1496
 106 run: jump-unless {no-motion?: "boolean"}, {1: "offset"}
9999 mem: location 1495 is 0
9998 run: jumping to instruction 21
 106 run: {old: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1491 is 1184
9999 mem: decrementing refcount of 1201: 20 -> 19
9999 mem: storing 1184 in location 1492
9999 mem: incrementing refcount of 1184: 22 -> 23
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- before-previous-line {curr: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1491 is 1184
9999 mem: location 1484 is 1144
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1503
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1506
9999 mem: incrementing refcount of 1184: 23 -> 24
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1507
9999 mem: incrementing refcount of 1144: 13 -> 14
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1506 is 1184
9999 mem: storing 1184 in location 1508
9999 mem: incrementing refcount of 1184: 24 -> 25
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1508 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1508 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 10
9999 mem: storing 10 in location 1509
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1510
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1511
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1511 is 9
9999 mem: location 1510 is 0
9999 mem: storing 9 in location 1512
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1201
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 2
9999 mem: location 1153 is 3
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1507 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1163
9999 mem: storing 1163 in location 1513
9999 mem: incrementing refcount of 1163: 16 -> 17
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1184
9999 mem: location 1513 is 1163
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1119
9999 mem: incrementing refcount of 1184: 25 -> 26
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1120
9999 mem: incrementing refcount of 1163: 17 -> 18
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1184
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1184
9999 mem: location 1120 is 1163
9999 mem: storing 0 in location 1122
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1184
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1191
9999 mem: incrementing refcount of 1184: 26 -> 27
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1184
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1163
9999 mem: storing 1163 in location 1192
9999 mem: incrementing refcount of 1163: 18 -> 19
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1184: 27 -> 26
9999 mem: storing 1163 in location 1119
9999 mem: incrementing refcount of 1163: 19 -> 20
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1163
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1163
9999 mem: location 1120 is 1163
9999 mem: storing 1 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1121 is 0
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1514
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1514 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1508 is 1184
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1184 in location 1191
9999 mem: incrementing refcount of 1184: 26 -> 27
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1184
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1191 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1187
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1187 is 1163
9999 mem: storing 1163 in location 1192
9999 mem: incrementing refcount of 1163: 20 -> 21
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1163
9999 mem: storing 1163 in location 1515
9999 mem: incrementing refcount of 1163: 21 -> 22
 107 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1515 is 1163
9998 run: jumping to instruction 15
 107 run: return {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1163
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1184: 27 -> 26
9999 mem: storing 1163 in location 1491
9999 mem: incrementing refcount of 1163: 22 -> 23
 106 run: {no-motion?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {old: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1491 is 1163
9999 mem: location 1492 is 1184
9999 mem: storing 0 in location 1495
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1496
 106 run: jump-unless {no-motion?: "boolean"}, {1: "offset"}
9999 mem: location 1495 is 0
9998 run: jumping to instruction 29
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1491 is 1163
9999 mem: location 1487 is 1148
9999 mem: decrementing refcount of 1201: 19 -> 18
9999 mem: storing 1163 in location 1148
9999 mem: incrementing refcount of 1163: 23 -> 24
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1485 is 1152
9999 mem: location 1152 is 2
9999 mem: location 1485 is 1152
9999 mem: storing 1 in location 1152
 106 run: {target-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1486 is 1153
9999 mem: location 1153 is 3
9999 mem: storing 3 in location 1497
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1488 is 0
9999 mem: location 1486 is 1153
9999 mem: storing 0 in location 1153
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1486 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1497 is 3
9999 mem: storing 0 in location 1498
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1498 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1487 is 1148
9999 mem: location 1148 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1191
9999 mem: incrementing refcount of 1163: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1184
9999 mem: location 1166 is 0
9999 mem: location 1191 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1184
9999 mem: storing 1184 in location 1192
9999 mem: incrementing refcount of 1184: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1192 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1163: 25 -> 24
9999 mem: storing 1184 in location 1491
9999 mem: incrementing refcount of 1184: 27 -> 28
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1491 is 1184
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1491 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1491 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 10
9999 mem: storing 10 in location 1499
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1499 is 10
9999 mem: storing 1 in location 1494
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 1
9998 run: jumping to instruction 45
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1496
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1484 is 1144
9999 mem: location 1496 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1144
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1144: 14 -> 13
9999 mem: storing 1144 in location 1398
9999 mem: incrementing refcount of 1144: 13 -> 14
9999 mem: storing 0 in location 1403
 105 run: {undo-coalesce-tag: "number"} <- copy {3: "literal", "up-arrow": ()}
9999 mem: storing 3 in location 1436
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1437
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1438
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1439
9999 mem: incrementing refcount of 1163: 24 -> 25
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1436 is 3
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1417
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1417 is 1155
9999 mem: location 1155 is 1391
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1417 is 1155
9999 mem: location 1155 is 1391
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1191
9999 mem: incrementing refcount of 1391: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1191 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 1235
9999 mem: location 1393 is 0
9999 mem: location 1191 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1392
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1392 is 1235
9999 mem: storing 1235 in location 1192
9999 mem: incrementing refcount of 1235: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1192 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1235
9999 mem: storing 1235 in location 1416
9999 mem: incrementing refcount of 1235: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1416 is 1235
9999 mem: skipping refcount at 1235
9999 mem: location 1236 is 1
9999 mem: location 1237 is 1
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1163
9999 mem: location 1240 is 2
9999 mem: location 1241 is 3
9999 mem: location 1242 is 1163
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1416 is 1235
9999 mem: skipping refcount at 1235
9999 mem: storing 1237 in location 1422
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1422 is 1237
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1422 is 1237
9999 mem: location 1237 is 1
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1163
9999 mem: location 1240 is 2
9999 mem: location 1241 is 3
9999 mem: location 1242 is 1163
9999 mem: location 1243 is 0
9999 mem: location 1422 is 1237
9998 run: address to copy is 1243
9998 run: its type is "number"
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1440
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1436 is 3
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1441
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1441 is 0
9998 run: jumping to instruction 666
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1519
9999 mem: decrementing refcount of 1235: 5 -> 4
9999 mem: storing 1519 in location 1416
9999 mem: incrementing refcount of 1519: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1433 is 2
9999 mem: location 1434 is 3
9999 mem: location 1435 is 1163
9999 mem: location 1437 is 1
9999 mem: location 1438 is 0
9999 mem: location 1439 is 1163
9999 mem: location 1436 is 3
9999 mem: location 1416 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1416 is 1519
9999 mem: skipping refcount at 1519
9999 mem: storing 1 in location 1520
9999 mem: storing 2 in location 1521
9999 mem: storing 3 in location 1522
9999 mem: storing 1163 in location 1523
9999 mem: storing 1 in location 1524
9999 mem: storing 0 in location 1525
9999 mem: storing 1163 in location 1526
9999 mem: storing 3 in location 1527
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1398 is 1144
9999 mem: location 1416 is 1519
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1177
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1180
9999 mem: incrementing refcount of 1144: 14 -> 15
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1181
9999 mem: incrementing refcount of 1519: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1391
9999 mem: location 1156 is 0
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1182
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1181 is 1519
9999 mem: location 1182 is 1155
9999 mem: location 1155 is 1391
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1157
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1160
9999 mem: incrementing refcount of 1519: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1161
9999 mem: incrementing refcount of 1391: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1531
9999 mem: storing 1531 in location 1162
9999 mem: incrementing refcount of 1531: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1160 is 1519
9999 mem: location 1161 is 1391
9999 mem: location 1162 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1162 is 1531
9999 mem: skipping refcount at 1531
9999 mem: storing 1519 in location 1532
9999 mem: storing 1391 in location 1533
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1162 is 1531
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1531
9999 mem: location 1182 is 1155
9999 mem: decrementing refcount of 1391: 4 -> 3
9999 mem: storing 1531 in location 1155
9999 mem: incrementing refcount of 1531: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1183 is 1156
9999 mem: storing 0 in location 1156
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1180 is 1144
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1144
9999 mem: decrementing refcount of 1144: 15 -> 14
9999 mem: storing 1144 in location 1398
9999 mem: incrementing refcount of 1144: 14 -> 15
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1008
9999 mem: location 1398 is 1144
9999 mem: location 1403 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1144
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: decrementing refcount of 1144: 15 -> 14
9999 mem: storing 1144 in location 1323
9999 mem: incrementing refcount of 1144: 14 -> 15
9999 mem: storing 0 in location 1333
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 87 -> 86
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1315
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1274
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1315 in location 1277
9999 mem: incrementing refcount of 1315: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1277 is 1315
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 2
9999 mem: location 1317 is 1305
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1316
9999 mem: storing 1316 in location 1278
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9999 mem: location 1316 is 2
9999 mem: location 1317 is 1305
9999 mem: location 1277 is 1315
9999 mem: skipping refcount at 1315
9998 run: address to copy is 1317
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1317 is 1305
9999 mem: storing 1305 in location 1279
9999 mem: incrementing refcount of 1305: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1279 is 1305
9999 mem: skipping refcount at 1305
9999 mem: storing 2 in location 1280
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1278 is 1316
9999 mem: location 1316 is 2
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1281
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1188
9999 mem: storing 1188 in location 1282
9999 mem: incrementing refcount of 1188: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1282 is 1188
9999 mem: skipping refcount at 1188
9999 mem: location 1189 is 0
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1277 is 1315
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1315
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1315: 4 -> 3
9999 mem: storing 1315 in location 1322
9999 mem: incrementing refcount of 1315: 3 -> 4
9999 mem: storing 1 in location 1330
9999 mem: storing 1 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1321 is 1008
9999 mem: location 1322 is 1315
9999 mem: location 1323 is 1144
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 2 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 2 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1536
9999 mem: storing 'text' tag at 1536
9999 mem: storing character 48 at 1537
9999 mem: storing console in 1540
9999 mem: storing console data in 1542
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1540
9999 mem: location 2 is 1144
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1318
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 87 -> 88
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1540 in location 1322
9999 mem: incrementing refcount of 1540: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1323
9999 mem: incrementing refcount of 1144: 15 -> 16
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 88 -> 89
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 89 -> 88
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 88 -> 89
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1540
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1274
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1540 in location 1277
9999 mem: incrementing refcount of 1540: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1277 is 1540
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9999 mem: location 1541 is 0
9999 mem: location 1542 is 1534
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9998 run: address to copy is 1541
9999 mem: storing 1541 in location 1278
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9999 mem: location 1541 is 0
9999 mem: location 1542 is 1534
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9998 run: address to copy is 1542
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1542 is 1534
9999 mem: storing 1534 in location 1279
9999 mem: incrementing refcount of 1534: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1279 is 1534
9999 mem: skipping refcount at 1534
9999 mem: storing 1 in location 1280
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1278 is 1541
9999 mem: location 1541 is 0
9999 mem: location 1280 is 1
9999 mem: storing 0 in location 1281
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1279 is 1534
9999 mem: skipping refcount at 1534
9998 run: base address is 1535
9999 mem: location 1278 is 1541
9999 mem: location 1541 is 0
9998 run: address to copy is 1536
9998 run: its type is event
9999 mem: location 1536 is 0
9999 mem: location 1537 is 48
9999 mem: location 1538 is 0
9999 mem: location 1539 is 0
9999 mem: storing 0 in location 1283
9999 mem: storing 48 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1541
9999 mem: location 1541 is 0
9999 mem: location 1278 is 1541
9999 mem: storing 1 in location 1541
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1283 is 0
9999 mem: location 1284 is 48
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1277 is 1540
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1540
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1326
9999 mem: storing 48 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1540: 2 -> 1
9999 mem: storing 1540 in location 1322
9999 mem: incrementing refcount of 1540: 1 -> 2
9999 mem: storing 1 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1326 is 0
9999 mem: location 1327 is 48
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1332
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1321 is 1008
9999 mem: location 1323 is 1144
9999 mem: location 1326 is 0
9999 mem: location 1327 is 48
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1394
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 89 -> 90
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1398
9999 mem: incrementing refcount of 1144: 16 -> 17
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1399
9999 mem: storing 48 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1403
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1398 is 1144
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1543
9999 mem: storing 3 in location 1544
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1546
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1546 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1547
 106 run: return {width: "number"}
9999 mem: location 1547 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1404
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1546
9999 mem: incrementing refcount of 1008: 91 -> 92
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1546 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1547
 106 run: return {height: "number"}
9999 mem: location 1547 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1405
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1406
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1407
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1408
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1409
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1152
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1153
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1412
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1399 is 0
9999 mem: location 1400 is 48
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: storing 1400 in location 1413
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1413 is 1400
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1414
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1425
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1430
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1446
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1447
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1452
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1453
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1454
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1455
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1459
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1459 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 0 in location 1463
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: storing 1 in location 1466
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1403
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1448
9999 mem: incrementing refcount of 1163: 25 -> 26
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1408 is 1148
9999 mem: location 1148 is 1163
9999 mem: storing 1163 in location 1460
9999 mem: incrementing refcount of 1163: 26 -> 27
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1398 is 1144
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 48
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1548
9999 mem: storing 31 in location 1549
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1551
9999 mem: incrementing refcount of 1144: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1552
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1553
9999 mem: incrementing refcount of 1008: 92 -> 93
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1163
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1554
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1552 is 48
9999 mem: location 1554 is 1148
9999 mem: location 1148 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1177
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1180
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1181
9999 mem: incrementing refcount of 1163: 27 -> 28
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1581
9999 mem: storing 1581 in location 1182
9999 mem: incrementing refcount of 1581: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1182 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 0
9999 mem: location 1583 is 0
9999 mem: location 1584 is 0
9999 mem: location 1180 is 48
9999 mem: location 1182 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy to is 1582
9999 mem: storing 48 in location 1582
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1181 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1184
9999 mem: location 1166 is 0
9999 mem: location 1181 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1184
9999 mem: storing 1184 in location 1183
9999 mem: incrementing refcount of 1184: 28 -> 29
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1184
9999 mem: location 1166 is 0
9999 mem: location 1182 is 1581
9999 mem: location 1181 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy to is 1165
9999 mem: storing 1581 in location 1165
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 48
9999 mem: location 1583 is 0
9999 mem: location 1584 is 0
9999 mem: location 1181 is 1163
9999 mem: location 1182 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy to is 1584
9999 mem: storing 1163 in location 1584
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 48
9999 mem: location 1583 is 0
9999 mem: location 1584 is 1163
9999 mem: location 1183 is 1184
9999 mem: location 1182 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy to is 1583
9999 mem: storing 1184 in location 1583
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1184
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1163
9999 mem: location 1182 is 1581
9999 mem: location 1183 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy to is 1187
9999 mem: storing 1581 in location 1187
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1181 is 1163
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1554 is 1148
9999 mem: location 1148 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1546
9999 mem: incrementing refcount of 1163: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1546 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1546 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1581
9999 mem: location 1166 is 0
9999 mem: location 1546 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1581
9999 mem: storing 1581 in location 1547
9999 mem: incrementing refcount of 1581: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1547 is 1581
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1581
9999 mem: location 1554 is 1148
9999 mem: decrementing refcount of 1163: 29 -> 28
9999 mem: storing 1581 in location 1148
9999 mem: incrementing refcount of 1581: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1555
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1556
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1557
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1551 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1150
9998 run: its type is "number"
9999 mem: location 1150 is 9
9999 mem: storing 9 in location 1558
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1555 is 1152
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1559
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1556 is 1153
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1560
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1553 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1546
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1546 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1547
 107 run: return {width: "number"}
9999 mem: location 1547 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1561
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1553 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1546
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1546 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1546 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1547
 107 run: return {height: "number"}
9999 mem: location 1547 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1562
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1558 is 9
9999 mem: storing 8 in location 1563
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1556 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1563 is 8
9999 mem: storing 0 in location 1564
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1564 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1556 is 1153
9999 mem: location 1153 is 0
9999 mem: location 1556 is 1153
9999 mem: storing 1 in location 1153
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1554 is 1148
9999 mem: location 1148 is 1581
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1581 in location 1546
9999 mem: incrementing refcount of 1581: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1546 is 1581
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1546 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 48
9999 mem: location 1583 is 1184
9999 mem: location 1584 is 1163
9999 mem: location 1546 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy is 1583
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1583 is 1184
9999 mem: storing 1184 in location 1547
9999 mem: incrementing refcount of 1184: 29 -> 30
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1547 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1571
9999 mem: incrementing refcount of 1184: 30 -> 31
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1571 is 1184
9999 mem: storing 0 in location 1572
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1571 is 1184
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1556 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1561 is 10
9999 mem: storing 0 in location 1575
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1554 is 1148
9999 mem: location 1148 is 1581
9999 mem: storing 1581 in location 1577
9999 mem: incrementing refcount of 1581: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1553 is 1008
9999 mem: location 1559 is 1
9999 mem: location 1560 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1560 is 0
9999 mem: storing 0 in location 1578
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1570
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1578 is 0
9999 mem: location 1558 is 9
9999 mem: storing 0 in location 1575
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1577 is 1581
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1577 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 48
9999 mem: location 1583 is 1184
9999 mem: location 1584 is 1163
9999 mem: location 1577 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy is 1582
9998 run: its type is "character"
9999 mem: location 1582 is 48
9999 mem: storing 48 in location 1579
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1579 is 48
9999 mem: storing 0 in location 1580
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1553 is 1008
9999 mem: location 1579 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1247
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1250
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1251
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1253 is 0
9998 run: jump-if fell through
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-adjusts-column-at-empty-line
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1252
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1255 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1254
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1251 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1250 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1256
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1257
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1258
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1258 is 1
9999 mem: storing 1 in location 1259
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1259 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1257 is 5
9999 mem: storing 1 in location 1259
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1259 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1260
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1260 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1259
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1259 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1260 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1256 is 10
9999 mem: storing 1 in location 1259
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1259 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1251 is 48
9999 mem: storing 0 in location 1261
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1261 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1258 is 1
9999 mem: location 1256 is 10
9999 mem: storing 10 in location 1264
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1264 is 10
9999 mem: location 1260 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1264
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1250 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1265
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1265 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1266
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1251 is 48
9999 mem: storing 0 in location 1267
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1265 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1264 is 10
9999 mem: storing 1036 in location 1269
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1269 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1269 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1270
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1251 is 48
9999 mem: location 1270 is 1036
9999 mem: storing 48 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1269 is 1036
9999 mem: location 1036 is 48
9999 mem: location 1037 is 7
9999 mem: location 1269 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1271
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1252 is 7
9999 mem: location 1271 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1256 is 10
9999 mem: storing 9 in location 1272
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1260 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1272 is 9
9999 mem: storing 0 in location 1273
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1260 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1260 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1250 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1578 is 0
9999 mem: storing 1 in location 1578
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1577 is 1581
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1581 in location 1546
9999 mem: incrementing refcount of 1581: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1546 is 1581
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1546 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 48
9999 mem: location 1583 is 1184
9999 mem: location 1584 is 1163
9999 mem: location 1546 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy is 1583
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1583 is 1184
9999 mem: storing 1184 in location 1547
9999 mem: incrementing refcount of 1184: 31 -> 32
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1547 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1184
9999 mem: decrementing refcount of 1581: 6 -> 5
9999 mem: storing 1184 in location 1577
9999 mem: incrementing refcount of 1184: 32 -> 33
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1570
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1578 is 1
9999 mem: location 1558 is 9
9999 mem: storing 0 in location 1575
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1577 is 1184
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1577 is 1184
9999 mem: skipping refcount at 1184
9999 mem: location 1185 is 10
9999 mem: location 1186 is 1193
9999 mem: location 1187 is 1581
9999 mem: location 1577 is 1184
9999 mem: skipping refcount at 1184
9998 run: address to copy is 1185
9998 run: its type is "character"
9999 mem: location 1185 is 10
9999 mem: storing 10 in location 1579
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1579 is 10
9999 mem: storing 1 in location 1580
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1580 is 1
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1570
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1551 is 1144
9999 mem: location 1553 is 1008
9999 mem: location 1570 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1144
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1144: 18 -> 17
9999 mem: storing 1144 in location 1398
9999 mem: incrementing refcount of 1144: 17 -> 18
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 96 -> 97
9999 mem: storing 0 in location 1403
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1146
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1146 is 1163
9999 mem: storing 1163 in location 1450
9999 mem: incrementing refcount of 1163: 28 -> 29
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1398 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1417
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1417 is 1155
9999 mem: location 1155 is 1531
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1417 is 1155
9999 mem: location 1155 is 1531
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1531 in location 1546
9999 mem: incrementing refcount of 1531: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1546 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1532 is 1519
9999 mem: location 1533 is 1391
9999 mem: location 1546 is 1531
9999 mem: skipping refcount at 1531
9998 run: address to copy is 1532
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1532 is 1519
9999 mem: storing 1519 in location 1547
9999 mem: incrementing refcount of 1519: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1547 is 1519
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1519
9999 mem: storing 1519 in location 1416
9999 mem: incrementing refcount of 1519: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1416 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 1
9999 mem: location 1521 is 2
9999 mem: location 1522 is 3
9999 mem: location 1523 is 1163
9999 mem: location 1524 is 1
9999 mem: location 1525 is 0
9999 mem: location 1526 is 1163
9999 mem: location 1527 is 3
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1416 is 1519
9999 mem: skipping refcount at 1519
9999 mem: storing 0 in location 1423
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1460 is 1163
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1546
9999 mem: incrementing refcount of 1163: 29 -> 30
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1546 is 1163
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1546 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 167
9999 mem: location 1165 is 1581
9999 mem: location 1166 is 0
9999 mem: location 1546 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1581
9999 mem: storing 1581 in location 1547
9999 mem: incrementing refcount of 1581: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1547 is 1581
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1581
9999 mem: storing 1581 in location 1424
9999 mem: incrementing refcount of 1581: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1424 is 1581
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1581 in location 1546
9999 mem: incrementing refcount of 1581: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1546 is 1581
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1546 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 48
9999 mem: location 1583 is 1184
9999 mem: location 1584 is 1163
9999 mem: location 1546 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy is 1583
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1583 is 1184
9999 mem: storing 1184 in location 1547
9999 mem: incrementing refcount of 1184: 33 -> 34
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1547 is 1184
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1184
9999 mem: storing 1184 in location 1462
9999 mem: incrementing refcount of 1184: 34 -> 35
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1585
9999 mem: decrementing refcount of 1519: 5 -> 4
9999 mem: storing 1585 in location 1416
9999 mem: incrementing refcount of 1585: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1411 is 1
9999 mem: location 1412 is 0
9999 mem: location 1448 is 1163
9999 mem: location 1409 is 1152
9999 mem: location 1152 is 1
9999 mem: location 1410 is 1153
9999 mem: location 1153 is 1
9999 mem: location 1450 is 1163
9999 mem: location 1424 is 1581
9999 mem: location 1462 is 1184
9999 mem: location 1416 is 1585
9999 mem: skipping refcount at 1585
9999 mem: location 1416 is 1585
9999 mem: skipping refcount at 1585
9999 mem: storing 0 in location 1586
9999 mem: storing 1 in location 1587
9999 mem: storing 0 in location 1588
9999 mem: storing 1163 in location 1589
9999 mem: storing 1 in location 1590
9999 mem: storing 1 in location 1591
9999 mem: storing 1163 in location 1592
9999 mem: storing 1581 in location 1593
9999 mem: storing 1184 in location 1594
9999 mem: storing 1 in location 1595
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1398 is 1144
9999 mem: location 1416 is 1585
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1177
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1144 in location 1180
9999 mem: incrementing refcount of 1144: 18 -> 19
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1585 in location 1181
9999 mem: incrementing refcount of 1585: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1531
9999 mem: location 1156 is 0
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1182
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1181 is 1585
9999 mem: location 1182 is 1155
9999 mem: location 1155 is 1531
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1157
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1585 in location 1160
9999 mem: incrementing refcount of 1585: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1531 in location 1161
9999 mem: incrementing refcount of 1531: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1597
9999 mem: storing 1597 in location 1162
9999 mem: incrementing refcount of 1597: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1160 is 1585
9999 mem: location 1161 is 1531
9999 mem: location 1162 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1162 is 1597
9999 mem: skipping refcount at 1597
9999 mem: storing 1585 in location 1598
9999 mem: storing 1531 in location 1599
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1162 is 1597
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1597
9999 mem: location 1182 is 1155
9999 mem: decrementing refcount of 1531: 4 -> 3
9999 mem: storing 1597 in location 1155
9999 mem: incrementing refcount of 1597: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1597
9999 mem: location 1156 is 0
9999 mem: location 1180 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1183
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1183 is 1156
9999 mem: storing 0 in location 1156
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1180 is 1144
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1144
9999 mem: decrementing refcount of 1144: 19 -> 18
9999 mem: storing 1144 in location 1398
9999 mem: incrementing refcount of 1144: 18 -> 19
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1008
9999 mem: location 1398 is 1144
9999 mem: location 1403 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1144
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 96 -> 97
9999 mem: decrementing refcount of 1144: 19 -> 18
9999 mem: storing 1144 in location 1323
9999 mem: incrementing refcount of 1144: 18 -> 19
9999 mem: storing 0 in location 1333
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1597
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9999 mem: location 1145 is 1163
9999 mem: location 1146 is 1163
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1581
9999 mem: location 1149 is 0
9999 mem: location 1150 is 9
9999 mem: location 1151 is 2
9999 mem: location 1152 is 1
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1597
9999 mem: location 1156 is 0
9999 mem: location 1323 is 1144
9999 mem: skipping refcount at 1144
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 1
9999 mem: storing 1 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 97 -> 98
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 98 -> 97
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 97 -> 98
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1540
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1274
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1540 in location 1277
9999 mem: incrementing refcount of 1540: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1277 is 1540
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9999 mem: location 1541 is 1
9999 mem: location 1542 is 1534
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9998 run: address to copy is 1541
9999 mem: storing 1541 in location 1278
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9999 mem: location 1541 is 1
9999 mem: location 1542 is 1534
9999 mem: location 1277 is 1540
9999 mem: skipping refcount at 1540
9998 run: address to copy is 1542
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1542 is 1534
9999 mem: storing 1534 in location 1279
9999 mem: incrementing refcount of 1534: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1279 is 1534
9999 mem: skipping refcount at 1534
9999 mem: storing 1 in location 1280
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1278 is 1541
9999 mem: location 1541 is 1
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1281
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1543
9999 mem: storing 1543 in location 1282
9999 mem: incrementing refcount of 1543: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1282 is 1543
9999 mem: skipping refcount at 1543
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: location 1546 is 0
9999 mem: location 1547 is 0
9999 mem: location 1277 is 1540
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1540
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1540: 3 -> 2
9999 mem: storing 1540 in location 1322
9999 mem: incrementing refcount of 1540: 2 -> 3
9999 mem: storing 1 in location 1330
9999 mem: storing 1 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1321 is 1008
9999 mem: location 1322 is 1540
9999 mem: location 1323 is 1144
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .0         .\n    .def       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
