 102 run: assume-console {"\n    left-click 1, 3\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {3: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {3: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'left-click' event starting at 1317
9999 mem: storing 'press' event starting at 1321
9999 mem: storing console in 1325
9999 mem: storing console data in 1327
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1325
9999 mem: location 2 is 1146
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1328
9999 mem: storing 14 in location 1329
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 76 -> 77
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1333
9999 mem: incrementing refcount of 1146: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 1
9999 mem: location 1335 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 77 -> 78
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 77 -> 78
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1325
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1284
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1287
9999 mem: incrementing refcount of 1325: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1287 is 1325
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 0
9999 mem: location 1327 is 1315
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9999 mem: storing 1326 in location 1288
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 0
9999 mem: location 1327 is 1315
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1327
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1327 is 1315
9999 mem: storing 1315 in location 1289
9999 mem: incrementing refcount of 1315: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 2 in location 1290
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 0
9999 mem: location 1290 is 2
9999 mem: storing 0 in location 1291
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 0
9998 run: address to copy is 1317
9998 run: its type is event
9999 mem: location 1317 is 2
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 1
9999 mem: location 1320 is 3
9999 mem: storing 2 in location 1293
9999 mem: storing 65513 in location 1294
9999 mem: storing 1 in location 1295
9999 mem: storing 3 in location 1296
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 0
9999 mem: location 1288 is 1326
9999 mem: storing 1 in location 1326
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1293 is 2
9999 mem: location 1294 is 65513
9999 mem: location 1295 is 1
9999 mem: location 1296 is 3
9999 mem: location 1287 is 1325
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 3]
9998 run: result 1 is 1325
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1336
9999 mem: storing 65513 in location 1337
9999 mem: storing 1 in location 1338
9999 mem: storing 3 in location 1339
9999 mem: decrementing refcount of 1325: 2 -> 1
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 1 -> 2
9999 mem: storing 1 in location 1340
9999 mem: storing 0 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1336 is 2
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 1
9999 mem: location 1339 is 3
9999 mem: storing 1337 in location 1342
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 1337
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1331 is 1008
9999 mem: location 1333 is 1146
9999 mem: location 1342 is 1337
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 1
9999 mem: location 1339 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1344
9999 mem: storing 27 in location 1345
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1347
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1348
9999 mem: incrementing refcount of 1146: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1349
9999 mem: storing 1 in location 1350
9999 mem: storing 3 in location 1351
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1348 is 1146
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1349 is 65513
9999 mem: location 1350 is 1
9999 mem: location 1351 is 3
9998 run: address to copy is 1350
9998 run: its type is "number"
9999 mem: location 1350 is 1
9999 mem: storing 1 in location 1352
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1352 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1349 is 65513
9999 mem: location 1350 is 1
9999 mem: location 1351 is 3
9998 run: address to copy is 1351
9998 run: its type is "number"
9999 mem: location 1351 is 3
9999 mem: storing 3 in location 1353
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1354
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1353 is 3
9999 mem: location 1354 is 0
9999 mem: storing 0 in location 1355
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1356
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1353 is 3
9999 mem: location 1356 is 9
9999 mem: storing 0 in location 1357
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1357 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1358
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1359
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1360
9999 mem: incrementing refcount of 1165: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1347 is 1008
9999 mem: location 1348 is 1146
9999 mem: location 1352 is 1
9999 mem: location 1353 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1373
9999 mem: storing 26 in location 1374
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1376
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1377
9999 mem: incrementing refcount of 1146: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1378
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1379
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1377 is 1146
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1380
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1381
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1376 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 80 -> 81
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1193 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1193 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1193 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1194
 107 run: return {height: "number"}
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1382
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1383
9999 mem: incrementing refcount of 1165: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1165
9999 mem: storing 1165 in location 1384
9999 mem: incrementing refcount of 1165: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1193
9999 mem: incrementing refcount of 1165: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1165
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1165
9999 mem: skipping refcount at 1165
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1186
9999 mem: location 1168 is 0
9999 mem: location 1193 is 1165
9999 mem: skipping refcount at 1165
9998 run: address to copy is 1167
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1167 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1165: 14 -> 13
9999 mem: storing 1186 in location 1383
9999 mem: incrementing refcount of 1186: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1385
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1386
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1387
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1387 is 1154
9999 mem: storing 1 in location 1154
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1388
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1379 is 3
9999 mem: location 1388 is 1155
9999 mem: storing 3 in location 1155
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1165
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1377 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1389
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1186
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 0
9999 mem: location 1388 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 0 in location 1392
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1165
9999 mem: location 1383 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1187
9998 run: its type is "character"
9999 mem: location 1187 is 97
9999 mem: storing 97 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 97
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 0
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1165
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 15 -> 14
9999 mem: storing 1195 in location 1383
9999 mem: incrementing refcount of 1195: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1165
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1165 in location 1193
9999 mem: incrementing refcount of 1165: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1165
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1165
9999 mem: skipping refcount at 1165
9999 mem: location 1166 is 167
9999 mem: location 1167 is 1186
9999 mem: location 1168 is 0
9999 mem: location 1193 is 1165
9999 mem: skipping refcount at 1165
9998 run: address to copy is 1167
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1167 is 1186
9999 mem: storing 1186 in location 1194
9999 mem: incrementing refcount of 1186: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1186
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1186
9999 mem: decrementing refcount of 1165: 14 -> 13
9999 mem: storing 1186 in location 1384
9999 mem: incrementing refcount of 1186: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 0
9999 mem: storing 1 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1195
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 1
9999 mem: location 1388 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 0 in location 1392
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1383 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 98
9999 mem: storing 98 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 98
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 12 -> 13
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-adjusts-column-at-next-line
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 15 -> 14
9999 mem: storing 1199 in location 1383
9999 mem: incrementing refcount of 1199: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1186
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1186 in location 1193
9999 mem: incrementing refcount of 1186: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1186
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9999 mem: location 1187 is 97
9999 mem: location 1188 is 1195
9999 mem: location 1189 is 1165
9999 mem: location 1193 is 1186
9999 mem: skipping refcount at 1186
9998 run: address to copy is 1188
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1188 is 1195
9999 mem: storing 1195 in location 1194
9999 mem: incrementing refcount of 1195: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1195
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: decrementing refcount of 1186: 17 -> 16
9999 mem: storing 1195 in location 1384
9999 mem: incrementing refcount of 1195: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 1
9999 mem: storing 2 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1199
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 2
9999 mem: location 1388 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 0 in location 1392
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1383 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 99
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 2
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1194
9999 mem: incrementing refcount of 1203: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 15 -> 14
9999 mem: storing 1203 in location 1383
9999 mem: incrementing refcount of 1203: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1195 in location 1193
9999 mem: incrementing refcount of 1195: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1195
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 98
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1186
9999 mem: location 1193 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: storing 1199 in location 1194
9999 mem: incrementing refcount of 1199: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1199
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: decrementing refcount of 1195: 17 -> 16
9999 mem: storing 1199 in location 1384
9999 mem: incrementing refcount of 1199: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 2
9999 mem: storing 3 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1203
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 3
9999 mem: location 1388 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 1 in location 1392
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1199
9999 mem: location 1389 is 1150
9999 mem: decrementing refcount of 1165: 13 -> 12
9999 mem: storing 1199 in location 1150
9999 mem: incrementing refcount of 1199: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1383 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 10
9999 mem: storing 10 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 10
9999 mem: storing 1 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 3
9999 mem: location 1388 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 0 in location 1395
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1385 is 1
9999 mem: storing 2 in location 1385
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1386
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1193
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1193 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1194
9999 mem: incrementing refcount of 1207: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 15 -> 14
9999 mem: storing 1207 in location 1383
9999 mem: incrementing refcount of 1207: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1194
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 18 -> 17
9999 mem: storing 1203 in location 1384
9999 mem: incrementing refcount of 1203: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1207
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 2
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1383 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 100
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 0
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1193
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1193 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1194
9999 mem: incrementing refcount of 1211: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 15 -> 14
9999 mem: storing 1211 in location 1383
9999 mem: incrementing refcount of 1211: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1193
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1193 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1194
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 17 -> 16
9999 mem: storing 1207 in location 1384
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 0
9999 mem: storing 1 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 1211
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1385 is 2
9999 mem: location 1382 is 5
9999 mem: storing 0 in location 1390
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1383 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1383 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 101
9999 mem: storing 101 in location 1393
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1393 is 101
9999 mem: storing 0 in location 1394
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1386 is 1
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1396
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1193
9999 mem: incrementing refcount of 1211: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1193 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1194
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1211: 14 -> 13
9999 mem: storing 0 in location 1383
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1384 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1193
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1193 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1194
9999 mem: incrementing refcount of 1211: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 17 -> 16
9999 mem: storing 1211 in location 1384
9999 mem: incrementing refcount of 1211: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1386 is 1
9999 mem: storing 2 in location 1386
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1391
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1386 is 2
9999 mem: location 1388 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 1 in location 1397
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1391 is 0
9999 mem: location 1397 is 1
9999 mem: storing 0 in location 1398
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1399
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: storing 0 in location 1400
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1377 is 1146
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 9 -> 8
9999 mem: storing 1146 in location 1348
9999 mem: incrementing refcount of 1146: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1361
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1362
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1363
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1348 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1364
9999 mem: incrementing refcount of 1165: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1245
9999 mem: storing 1245 in location 1366
9999 mem: incrementing refcount of 1245: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1358 is 1
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1165
9999 mem: location 1362 is 1
9999 mem: location 1363 is 3
9999 mem: location 1364 is 1165
9999 mem: location 1361 is 0
9999 mem: location 1366 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1366 is 1245
9999 mem: skipping refcount at 1245
9999 mem: storing 1 in location 1246
9999 mem: storing 1 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 1165 in location 1249
9999 mem: storing 1 in location 1250
9999 mem: storing 3 in location 1251
9999 mem: storing 1165 in location 1252
9999 mem: storing 0 in location 1253
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1348 is 1146
9999 mem: location 1366 is 1245
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1182
9999 mem: incrementing refcount of 1146: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1183
9999 mem: incrementing refcount of 1245: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1183 is 1245
9999 mem: location 1184 is 1157
9999 mem: location 1157 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1162
9999 mem: incrementing refcount of 1245: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1163
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1401
9999 mem: storing 1401 in location 1164
9999 mem: incrementing refcount of 1401: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1162 is 1245
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1401
9999 mem: skipping refcount at 1401
9999 mem: location 1164 is 1401
9999 mem: skipping refcount at 1401
9999 mem: storing 1245 in location 1402
9999 mem: storing 0 in location 1403
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1164 is 1401
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1401
9999 mem: location 1184 is 1157
9999 mem: storing 1401 in location 1157
9999 mem: incrementing refcount of 1401: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1185 is 1158
9999 mem: storing 0 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1182 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 10 -> 9
9999 mem: storing 1146 in location 1348
9999 mem: incrementing refcount of 1146: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1348 is 1146
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 1
9999 mem: location 1335 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 81 -> 82
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 81 -> 82
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1325
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1284
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1287
9999 mem: incrementing refcount of 1325: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1287 is 1325
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 1
9999 mem: location 1327 is 1315
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9999 mem: storing 1326 in location 1288
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 1
9999 mem: location 1327 is 1315
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1327
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1327 is 1315
9999 mem: storing 1315 in location 1289
9999 mem: incrementing refcount of 1315: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 2 in location 1290
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 1
9999 mem: location 1290 is 2
9999 mem: storing 0 in location 1291
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9998 run: base address is 1316
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 1
9998 run: address to copy is 1321
9998 run: its type is event
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65516
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1293
9999 mem: storing 65516 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 1
9999 mem: location 1288 is 1326
9999 mem: storing 2 in location 1326
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1293 is 1
9999 mem: location 1294 is 65516
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1287 is 1325
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1325
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1336
9999 mem: storing 65516 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1325: 3 -> 2
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 2 -> 3
9999 mem: storing 1 in location 1340
9999 mem: storing 0 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1336 is 1
9999 mem: location 1337 is 65516
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 0 in location 1342
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1331 is 1008
9999 mem: location 1333 is 1146
9999 mem: location 1336 is 1
9999 mem: location 1337 is 65516
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1404
9999 mem: storing 85 in location 1405
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1408
9999 mem: incrementing refcount of 1146: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1409
9999 mem: storing 65516 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1413
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1408 is 1146
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 83 -> 84
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1193 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1193 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1193 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1194
 106 run: return {width: "number"}
9999 mem: location 1194 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1414
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1193
9999 mem: incrementing refcount of 1008: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1193 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1193 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1193 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1194
 106 run: return {height: "number"}
9999 mem: location 1194 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1415
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1416
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1417
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1418
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1419
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1420
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1419 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1421
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1420 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1422
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 65516
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 0 in location 1423
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 65516
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 1410 in location 1477
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1477 is 1410
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65516
9999 mem: storing 0 in location 1440
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1440 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65516
9999 mem: storing 0 in location 1456
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1456 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65516
9999 mem: storing 0 in location 1463
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65516
9999 mem: storing 0 in location 1464
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1477 is 1410
9999 mem: location 1410 is 65516
9999 mem: storing 1 in location 1478
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1443
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1444
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1445
9999 mem: incrementing refcount of 1165: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1408 is 1146
9999 mem: location 1415 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1491
9999 mem: storing 23 in location 1492
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1494
9999 mem: incrementing refcount of 1146: 11 -> 12
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1495
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1496
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1497
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1498
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1499
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1199
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1494 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1500
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1495 is 5
9999 mem: storing 4 in location 1501
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {last-line: "number"}
9999 mem: location 1496 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1501 is 4
9999 mem: storing 0 in location 1502
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1502 is 0
9998 run: jump-if fell through
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1500 is 9
9999 mem: location 1499 is 0
9999 mem: storing 9 in location 1503
 106 run: {next-line: ("address" "shared" "duplex-list" "character")} <- before-start-of-next-line {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {max: "number"}
9999 mem: location 1498 is 1150
9999 mem: location 1150 is 1199
9999 mem: location 1503 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1169
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1172
9999 mem: incrementing refcount of 1199: 17 -> 18
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1173
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1174
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1172 is 1199
9999 mem: storing 1199 in location 1175
9999 mem: incrementing refcount of 1199: 18 -> 19
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1176
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1177
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jumping to instruction 11
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1175 is 1199
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1178
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1175 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 99
9999 mem: storing 99 in location 1176
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1176 is 99
9999 mem: storing 0 in location 1177
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1199
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1199 in location 1193
9999 mem: incrementing refcount of 1199: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1199
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 99
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1193 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: storing 1203 in location 1194
9999 mem: incrementing refcount of 1203: 16 -> 17
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1199: 20 -> 19
9999 mem: storing 1203 in location 1175
9999 mem: incrementing refcount of 1203: 17 -> 18
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1175 is 1203
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1178
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1175 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 10
9999 mem: storing 10 in location 1176
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1176 is 10
9999 mem: storing 1 in location 1177
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 1
9998 run: jumping to instruction 23
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1175 is 1203
9998 run: jumping to instruction 26
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1203
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1504
9999 mem: incrementing refcount of 1203: 18 -> 19
 106 run: {no-motion?: "boolean"} <- equal {next-line: ("address" "shared" "duplex-list" "character")}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1504 is 1203
9999 mem: location 1498 is 1150
9999 mem: location 1150 is 1199
9999 mem: storing 0 in location 1505
 106 run: jump-unless {no-motion?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 0
9998 run: jumping to instruction 21
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1496 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1496 is 1154
9999 mem: storing 2 in location 1154
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-line: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1504 is 1203
9999 mem: location 1498 is 1150
9999 mem: decrementing refcount of 1199: 19 -> 18
9999 mem: storing 1203 in location 1150
9999 mem: incrementing refcount of 1203: 19 -> 20
 106 run: {target-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1497 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1508
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1499 is 0
9999 mem: location 1497 is 1155
9999 mem: storing 0 in location 1155
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1497 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1508 is 3
9999 mem: storing 0 in location 1509
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1498 is 1150
9999 mem: location 1150 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1193
9999 mem: incrementing refcount of 1203: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1193 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1194
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1510
9999 mem: incrementing refcount of 1207: 17 -> 18
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1510 is 1207
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1510 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1510 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1511
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1511 is 100
9999 mem: storing 0 in location 1512
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1512 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1510 is 1207
9999 mem: location 1498 is 1150
9999 mem: decrementing refcount of 1203: 21 -> 20
9999 mem: storing 1207 in location 1150
9999 mem: incrementing refcount of 1207: 18 -> 19
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1497 is 1155
9999 mem: location 1155 is 0
9999 mem: location 1497 is 1155
9999 mem: storing 1 in location 1155
 106 run: jump {: "offset"}
9998 run: jumping to instruction 27
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1497 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1508 is 3
9999 mem: storing 0 in location 1509
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1498 is 1150
9999 mem: location 1150 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1193
9999 mem: incrementing refcount of 1207: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1193 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1194
9999 mem: incrementing refcount of 1211: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 20 -> 19
9999 mem: storing 1211 in location 1510
9999 mem: incrementing refcount of 1211: 16 -> 17
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1510 is 1211
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1510 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1510 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 101
9999 mem: storing 101 in location 1511
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1511 is 101
9999 mem: storing 0 in location 1512
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1512 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1510 is 1211
9999 mem: location 1498 is 1150
9999 mem: decrementing refcount of 1207: 19 -> 18
9999 mem: storing 1211 in location 1150
9999 mem: incrementing refcount of 1211: 17 -> 18
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1497 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1497 is 1155
9999 mem: storing 2 in location 1155
 106 run: jump {: "offset"}
9998 run: jumping to instruction 27
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1497 is 1155
9999 mem: location 1155 is 2
9999 mem: location 1508 is 3
9999 mem: storing 0 in location 1509
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1498 is 1150
9999 mem: location 1150 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1193
9999 mem: incrementing refcount of 1211: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1193 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1193 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1194
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1194 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1211: 19 -> 18
9999 mem: storing 0 in location 1510
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 37
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1507
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1494 is 1146
9999 mem: location 1507 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1146: 12 -> 11
9999 mem: storing 1146 in location 1408
9999 mem: incrementing refcount of 1146: 11 -> 12
9999 mem: storing 0 in location 1413
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1446
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1447
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1448
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1449
9999 mem: incrementing refcount of 1165: 14 -> 15
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1446 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1427
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1427 is 1157
9999 mem: location 1157 is 1401
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1427 is 1157
9999 mem: location 1157 is 1401
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1401 in location 1193
9999 mem: incrementing refcount of 1401: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1193 is 1401
9999 mem: skipping refcount at 1401
9999 mem: location 1402 is 1245
9999 mem: location 1403 is 0
9999 mem: location 1193 is 1401
9999 mem: skipping refcount at 1401
9998 run: address to copy is 1402
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1402 is 1245
9999 mem: storing 1245 in location 1194
9999 mem: incrementing refcount of 1245: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1194 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1245
9999 mem: storing 1245 in location 1426
9999 mem: incrementing refcount of 1245: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1426 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1
9999 mem: location 1248 is 0
9999 mem: location 1249 is 1165
9999 mem: location 1250 is 1
9999 mem: location 1251 is 3
9999 mem: location 1252 is 1165
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1426 is 1245
9999 mem: skipping refcount at 1245
9999 mem: storing 1247 in location 1432
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1432 is 1247
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1432 is 1247
9999 mem: location 1247 is 1
9999 mem: location 1248 is 0
9999 mem: location 1249 is 1165
9999 mem: location 1250 is 1
9999 mem: location 1251 is 3
9999 mem: location 1252 is 1165
9999 mem: location 1253 is 0
9999 mem: location 1432 is 1247
9998 run: address to copy is 1253
9998 run: its type is "number"
9999 mem: location 1253 is 0
9999 mem: storing 0 in location 1450
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1446 is 4
9999 mem: location 1450 is 0
9999 mem: storing 0 in location 1451
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 629
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1516
9999 mem: decrementing refcount of 1245: 5 -> 4
9999 mem: storing 1516 in location 1426
9999 mem: incrementing refcount of 1516: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1165
9999 mem: location 1447 is 2
9999 mem: location 1448 is 2
9999 mem: location 1449 is 1165
9999 mem: location 1446 is 4
9999 mem: location 1426 is 1516
9999 mem: skipping refcount at 1516
9999 mem: location 1426 is 1516
9999 mem: skipping refcount at 1516
9999 mem: storing 1 in location 1517
9999 mem: storing 1 in location 1518
9999 mem: storing 3 in location 1519
9999 mem: storing 1165 in location 1520
9999 mem: storing 2 in location 1521
9999 mem: storing 2 in location 1522
9999 mem: storing 1165 in location 1523
9999 mem: storing 4 in location 1524
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1408 is 1146
9999 mem: location 1426 is 1516
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1182
9999 mem: incrementing refcount of 1146: 12 -> 13
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1183
9999 mem: incrementing refcount of 1516: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1401
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1183 is 1516
9999 mem: location 1184 is 1157
9999 mem: location 1157 is 1401
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1162
9999 mem: incrementing refcount of 1516: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1401 in location 1163
9999 mem: incrementing refcount of 1401: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1528
9999 mem: storing 1528 in location 1164
9999 mem: incrementing refcount of 1528: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1162 is 1516
9999 mem: location 1163 is 1401
9999 mem: location 1164 is 1528
9999 mem: skipping refcount at 1528
9999 mem: location 1164 is 1528
9999 mem: skipping refcount at 1528
9999 mem: storing 1516 in location 1529
9999 mem: storing 1401 in location 1530
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1164 is 1528
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1528
9999 mem: location 1184 is 1157
9999 mem: decrementing refcount of 1401: 4 -> 3
9999 mem: storing 1528 in location 1157
9999 mem: incrementing refcount of 1528: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1185 is 1158
9999 mem: storing 0 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1182 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 13 -> 12
9999 mem: storing 1146 in location 1408
9999 mem: incrementing refcount of 1146: 12 -> 13
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1407 is 1008
9999 mem: location 1408 is 1146
9999 mem: location 1413 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1146
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 85 -> 84
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 84 -> 85
9999 mem: decrementing refcount of 1146: 13 -> 12
9999 mem: storing 1146 in location 1333
9999 mem: incrementing refcount of 1146: 12 -> 13
9999 mem: storing 0 in location 1343
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1335 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 85 -> 86
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 86 -> 85
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 85 -> 86
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1325
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1284
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1325 in location 1287
9999 mem: incrementing refcount of 1325: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1287 is 1325
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 2
9999 mem: location 1327 is 1315
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1326
9999 mem: storing 1326 in location 1288
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9999 mem: location 1326 is 2
9999 mem: location 1327 is 1315
9999 mem: location 1287 is 1325
9999 mem: skipping refcount at 1325
9998 run: address to copy is 1327
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1327 is 1315
9999 mem: storing 1315 in location 1289
9999 mem: incrementing refcount of 1315: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1289 is 1315
9999 mem: skipping refcount at 1315
9999 mem: storing 2 in location 1290
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1288 is 1326
9999 mem: location 1326 is 2
9999 mem: location 1290 is 2
9999 mem: storing 1 in location 1291
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1190
9999 mem: storing 1190 in location 1292
9999 mem: incrementing refcount of 1190: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1292 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1287 is 1325
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1325
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1325: 4 -> 3
9999 mem: storing 1325 in location 1332
9999 mem: incrementing refcount of 1325: 3 -> 4
9999 mem: storing 1 in location 1340
9999 mem: storing 1 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1331 is 1008
9999 mem: location 1332 is 1325
9999 mem: location 1333 is 1146
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 2\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1533
9999 mem: storing 'text' tag at 1533
9999 mem: storing character 48 at 1534
9999 mem: storing console in 1537
9999 mem: storing console data in 1539
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1537
9999 mem: location 2 is 1146
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1328
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 86 -> 87
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1332
9999 mem: incrementing refcount of 1537: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1333
9999 mem: incrementing refcount of 1146: 13 -> 14
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1335 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 87 -> 88
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 88 -> 87
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 87 -> 88
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1537
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1284
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1287
9999 mem: incrementing refcount of 1537: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1287 is 1537
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1531
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1538
9999 mem: storing 1538 in location 1288
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1531
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1539
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1539 is 1531
9999 mem: storing 1531 in location 1289
9999 mem: incrementing refcount of 1531: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1289 is 1531
9999 mem: skipping refcount at 1531
9999 mem: storing 1 in location 1290
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1288 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1290 is 1
9999 mem: storing 0 in location 1291
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1289 is 1531
9999 mem: skipping refcount at 1531
9998 run: base address is 1532
9999 mem: location 1288 is 1538
9999 mem: location 1538 is 0
9998 run: address to copy is 1533
9998 run: its type is event
9999 mem: location 1533 is 0
9999 mem: location 1534 is 48
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: storing 0 in location 1293
9999 mem: storing 48 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1288 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1288 is 1538
9999 mem: storing 1 in location 1538
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1293 is 0
9999 mem: location 1294 is 48
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1287 is 1537
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1537
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1336
9999 mem: storing 48 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1537: 2 -> 1
9999 mem: storing 1537 in location 1332
9999 mem: incrementing refcount of 1537: 1 -> 2
9999 mem: storing 1 in location 1340
9999 mem: storing 0 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 48
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 0 in location 1342
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 18
9990 schedule: editor-event-loop/run_1002/scenario_editor-adjusts-column-at-next-line
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1331 is 1008
9999 mem: location 1333 is 1146
9999 mem: location 1336 is 0
9999 mem: location 1337 is 48
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1404
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 88 -> 89
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1408
9999 mem: incrementing refcount of 1146: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1409
9999 mem: storing 48 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1413
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1408 is 1146
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1540
9999 mem: storing 3 in location 1541
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1543
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1543 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1544
 106 run: return {width: "number"}
9999 mem: location 1544 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1414
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1543
9999 mem: incrementing refcount of 1008: 90 -> 91
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1543 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1544
 106 run: return {height: "number"}
9999 mem: location 1544 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1415
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1416
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1417
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1418
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1419
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1420
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1419 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1421
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1420 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1422
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1409 is 0
9999 mem: location 1410 is 48
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: storing 1410 in location 1423
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1423 is 1410
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1424
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1435
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1440
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1440 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1456
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1456 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1457
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1457 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1462
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1462 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1463
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1464
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1465
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1469
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 0 in location 1473
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: storing 1 in location 1476
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1413
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1476 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1458
9999 mem: incrementing refcount of 1165: 15 -> 16
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1418 is 1150
9999 mem: location 1150 is 1211
9999 mem: storing 1211 in location 1470
9999 mem: incrementing refcount of 1211: 18 -> 19
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1408 is 1146
9999 mem: location 1423 is 1410
9999 mem: location 1410 is 48
9999 mem: location 1407 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1545
9999 mem: storing 31 in location 1546
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1548
9999 mem: incrementing refcount of 1146: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1549
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1550
9999 mem: incrementing refcount of 1008: 91 -> 92
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1211
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1551
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1549 is 48
9999 mem: location 1551 is 1150
9999 mem: location 1150 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1182
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1183
9999 mem: incrementing refcount of 1211: 19 -> 20
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1578
9999 mem: storing 1578 in location 1184
9999 mem: incrementing refcount of 1578: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1184 is 1578
9999 mem: skipping refcount at 1578
9999 mem: location 1579 is 0
9999 mem: location 1580 is 0
9999 mem: location 1581 is 0
9999 mem: location 1182 is 48
9999 mem: location 1184 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy to is 1579
9999 mem: storing 48 in location 1579
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1183 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1183 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1185
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1207
9999 mem: location 1184 is 1578
9999 mem: location 1183 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: storing 1578 in location 1213
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1578
9999 mem: skipping refcount at 1578
9999 mem: location 1579 is 48
9999 mem: location 1580 is 0
9999 mem: location 1581 is 0
9999 mem: location 1183 is 1211
9999 mem: location 1184 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy to is 1581
9999 mem: storing 1211 in location 1581
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1578
9999 mem: skipping refcount at 1578
9999 mem: location 1579 is 48
9999 mem: location 1580 is 0
9999 mem: location 1581 is 1211
9999 mem: location 1185 is 0
9999 mem: location 1184 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy to is 1580
9999 mem: storing 0 in location 1580
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1183 is 1211
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1551 is 1150
9999 mem: location 1150 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1543
9999 mem: incrementing refcount of 1211: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1543 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1543 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 1578
9999 mem: location 1214 is 1207
9999 mem: location 1543 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1578
9999 mem: storing 1578 in location 1544
9999 mem: incrementing refcount of 1578: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1544 is 1578
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1578
9999 mem: location 1551 is 1150
9999 mem: decrementing refcount of 1211: 21 -> 20
9999 mem: storing 1578 in location 1150
9999 mem: incrementing refcount of 1578: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1552
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1553
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1554
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1548 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1555
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1552 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1556
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1553 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1557
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1550 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1543
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1543 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1544
 107 run: return {width: "number"}
9999 mem: location 1544 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1558
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1550 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1543
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1543 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1543 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1544
 107 run: return {height: "number"}
9999 mem: location 1544 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1559
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1555 is 9
9999 mem: storing 8 in location 1560
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1553 is 1155
9999 mem: location 1155 is 2
9999 mem: location 1560 is 8
9999 mem: storing 0 in location 1561
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1561 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1553 is 1155
9999 mem: location 1155 is 2
9999 mem: location 1553 is 1155
9999 mem: storing 3 in location 1155
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1551 is 1150
9999 mem: location 1150 is 1578
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1578 in location 1543
9999 mem: incrementing refcount of 1578: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1543 is 1578
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 mem: location 1579 is 48
9999 mem: location 1580 is 0
9999 mem: location 1581 is 1211
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy is 1580
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1580 is 0
9999 mem: storing 0 in location 1544
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1544 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1568
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1568 is 0
9999 mem: storing 1 in location 1569
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1569 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1559 is 5
9999 mem: storing 4 in location 1570
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1556 is 2
9999 mem: location 1570 is 4
9999 mem: storing 0 in location 1571
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1557 is 2
9999 mem: location 1555 is 9
9999 mem: storing 0 in location 1572
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1571 is 0
9999 mem: location 1572 is 0
9999 mem: storing 0 in location 1573
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1573 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1550 is 1008
9999 mem: location 1556 is 2
9999 mem: location 1557 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1550 is 1008
9999 mem: location 1549 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1262
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 2
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1267 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1270 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1270 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 48
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 2
9999 mem: location 1266 is 10
9999 mem: storing 20 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1274 is 20
9999 mem: location 1270 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 48
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 22
9999 mem: storing 1060 in location 1279
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1279 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1279 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1280
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1261 is 48
9999 mem: location 1280 is 1060
9999 mem: storing 48 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1279 is 1060
9999 mem: location 1060 is 48
9999 mem: location 1061 is 7
9999 mem: location 1279 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1281
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1262 is 7
9999 mem: location 1281 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1282
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1270 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1282 is 9
9999 mem: storing 0 in location 1283
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1270 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1270 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1567
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1548 is 1146
9999 mem: location 1550 is 1008
9999 mem: location 1567 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1146: 16 -> 15
9999 mem: storing 1146 in location 1408
9999 mem: incrementing refcount of 1146: 15 -> 16
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: storing 0 in location 1413
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1165
9999 mem: storing 1165 in location 1460
9999 mem: incrementing refcount of 1165: 16 -> 17
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1408 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1427
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1427 is 1157
9999 mem: location 1157 is 1528
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1427 is 1157
9999 mem: location 1157 is 1528
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1528 in location 1543
9999 mem: incrementing refcount of 1528: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1543 is 1528
9999 mem: skipping refcount at 1528
9999 mem: location 1529 is 1516
9999 mem: location 1530 is 1401
9999 mem: location 1543 is 1528
9999 mem: skipping refcount at 1528
9998 run: address to copy is 1529
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1529 is 1516
9999 mem: storing 1516 in location 1544
9999 mem: incrementing refcount of 1516: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1544 is 1516
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1516
9999 mem: storing 1516 in location 1426
9999 mem: incrementing refcount of 1516: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1426 is 1516
9999 mem: skipping refcount at 1516
9999 mem: location 1517 is 1
9999 mem: location 1518 is 1
9999 mem: location 1519 is 3
9999 mem: location 1520 is 1165
9999 mem: location 1521 is 2
9999 mem: location 1522 is 2
9999 mem: location 1523 is 1165
9999 mem: location 1524 is 4
9999 mem: location 1525 is 0
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1426 is 1516
9999 mem: skipping refcount at 1516
9999 mem: storing 0 in location 1433
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1470 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1543
9999 mem: incrementing refcount of 1211: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1543 is 1211
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1543 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 1578
9999 mem: location 1214 is 1207
9999 mem: location 1543 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1578
9999 mem: storing 1578 in location 1544
9999 mem: incrementing refcount of 1578: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1544 is 1578
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1578
9999 mem: storing 1578 in location 1434
9999 mem: incrementing refcount of 1578: 5 -> 6
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1434 is 1578
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1578 in location 1543
9999 mem: incrementing refcount of 1578: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1543 is 1578
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 mem: location 1579 is 48
9999 mem: location 1580 is 0
9999 mem: location 1581 is 1211
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy is 1580
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1580 is 0
9999 mem: storing 0 in location 1544
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1544 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1472
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1582
9999 mem: decrementing refcount of 1516: 5 -> 4
9999 mem: storing 1582 in location 1426
9999 mem: incrementing refcount of 1582: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1421 is 2
9999 mem: location 1422 is 2
9999 mem: location 1458 is 1165
9999 mem: location 1419 is 1154
9999 mem: location 1154 is 2
9999 mem: location 1420 is 1155
9999 mem: location 1155 is 3
9999 mem: location 1460 is 1165
9999 mem: location 1434 is 1578
9999 mem: location 1472 is 0
9999 mem: location 1426 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1426 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 0 in location 1583
9999 mem: storing 2 in location 1584
9999 mem: storing 2 in location 1585
9999 mem: storing 1165 in location 1586
9999 mem: storing 2 in location 1587
9999 mem: storing 3 in location 1588
9999 mem: storing 1165 in location 1589
9999 mem: storing 1578 in location 1590
9999 mem: storing 0 in location 1591
9999 mem: storing 1 in location 1592
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1408 is 1146
9999 mem: location 1426 is 1582
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1182
9999 mem: incrementing refcount of 1146: 16 -> 17
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1183
9999 mem: incrementing refcount of 1582: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1528
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1183 is 1582
9999 mem: location 1184 is 1157
9999 mem: location 1157 is 1528
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1162
9999 mem: incrementing refcount of 1582: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1528 in location 1163
9999 mem: incrementing refcount of 1528: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1594
9999 mem: storing 1594 in location 1164
9999 mem: incrementing refcount of 1594: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1162 is 1582
9999 mem: location 1163 is 1528
9999 mem: location 1164 is 1594
9999 mem: skipping refcount at 1594
9999 mem: location 1164 is 1594
9999 mem: skipping refcount at 1594
9999 mem: storing 1582 in location 1595
9999 mem: storing 1528 in location 1596
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1164 is 1594
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1594
9999 mem: location 1184 is 1157
9999 mem: decrementing refcount of 1528: 4 -> 3
9999 mem: storing 1594 in location 1157
9999 mem: incrementing refcount of 1594: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1594
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1185 is 1158
9999 mem: storing 0 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1182 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 17 -> 16
9999 mem: storing 1146 in location 1408
9999 mem: incrementing refcount of 1146: 16 -> 17
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1407 is 1008
9999 mem: location 1408 is 1146
9999 mem: location 1413 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1146
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: decrementing refcount of 1146: 17 -> 16
9999 mem: storing 1146 in location 1333
9999 mem: incrementing refcount of 1146: 16 -> 17
9999 mem: storing 0 in location 1343
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1594
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 2
9999 mem: storing 2 in location 1334
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1165
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1578
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 2
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1594
9999 mem: location 1158 is 0
9999 mem: location 1333 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1335
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1331 is 1008
9999 mem: location 1334 is 2
9999 mem: location 1335 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1331
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1332 is 1537
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1284
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1287
9999 mem: incrementing refcount of 1537: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1287 is 1537
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 1
9999 mem: location 1539 is 1531
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1538
9999 mem: storing 1538 in location 1288
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 1
9999 mem: location 1539 is 1531
9999 mem: location 1287 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1539
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1539 is 1531
9999 mem: storing 1531 in location 1289
9999 mem: incrementing refcount of 1531: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1289 is 1531
9999 mem: skipping refcount at 1531
9999 mem: storing 1 in location 1290
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1288 is 1538
9999 mem: location 1538 is 1
9999 mem: location 1290 is 1
9999 mem: storing 1 in location 1291
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1540
9999 mem: storing 1540 in location 1292
9999 mem: incrementing refcount of 1540: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1292 is 1540
9999 mem: skipping refcount at 1540
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1287 is 1537
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1537
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: decrementing refcount of 1537: 3 -> 2
9999 mem: storing 1537 in location 1332
9999 mem: incrementing refcount of 1537: 2 -> 3
9999 mem: storing 1 in location 1340
9999 mem: storing 1 in location 1341
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1331 is 1008
9999 mem: location 1332 is 1537
9999 mem: location 1333 is 1146
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .de0       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
