 102 run: assume-console {"\n    left-click 2, 3\n    press up-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {3: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {3: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {up-arrow: ()}
9992 load: after rewriting: press {up-arrow: ()}
9999 mem: storing 'left-click' event starting at 1316
9999 mem: storing 'press' event starting at 1320
9999 mem: storing console in 1324
9999 mem: storing console data in 1326
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1324
9999 mem: location 2 is 1153
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1327
9999 mem: storing 14 in location 1328
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1333
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 1
9999 mem: location 1334 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1248
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1253
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1253 is 0
9999 mem: location 1255 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1331 is 1324
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1283
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1286
9999 mem: incrementing refcount of 1324: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1286 is 1324
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1287
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 0
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1326
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1326 is 1314
9999 mem: storing 1314 in location 1288
9999 mem: incrementing refcount of 1314: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9999 mem: storing 2 in location 1289
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1289 is 2
9999 mem: storing 0 in location 1290
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9998 run: base address is 1315
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 0
9998 run: address to copy is 1316
9998 run: its type is event
9999 mem: location 1316 is 2
9999 mem: location 1317 is 65513
9999 mem: location 1318 is 2
9999 mem: location 1319 is 3
9999 mem: storing 2 in location 1292
9999 mem: storing 65513 in location 1293
9999 mem: storing 2 in location 1294
9999 mem: storing 3 in location 1295
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 0
9999 mem: location 1287 is 1325
9999 mem: storing 1 in location 1325
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1292 is 2
9999 mem: location 1293 is 65513
9999 mem: location 1294 is 2
9999 mem: location 1295 is 3
9999 mem: location 1286 is 1324
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 3]
9998 run: result 1 is 1324
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1335
9999 mem: storing 65513 in location 1336
9999 mem: storing 2 in location 1337
9999 mem: storing 3 in location 1338
9999 mem: decrementing refcount of 1324: 2 -> 1
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 1 -> 2
9999 mem: storing 1 in location 1339
9999 mem: storing 0 in location 1340
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1335 is 2
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 2
9999 mem: location 1338 is 3
9999 mem: storing 1336 in location 1341
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1341 is 1336
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1330 is 1012
9999 mem: location 1332 is 1153
9999 mem: location 1341 is 1336
9999 mem: location 1336 is 65513
9999 mem: location 1337 is 2
9999 mem: location 1338 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1343
9999 mem: storing 27 in location 1344
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1346
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1347
9999 mem: incrementing refcount of 1153: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1348
9999 mem: storing 2 in location 1349
9999 mem: storing 3 in location 1350
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1347 is 1153
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 2
9999 mem: location 1350 is 3
9998 run: address to copy is 1349
9998 run: its type is "number"
9999 mem: location 1349 is 2
9999 mem: storing 2 in location 1351
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1351 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1348 is 65513
9999 mem: location 1349 is 2
9999 mem: location 1350 is 3
9998 run: address to copy is 1350
9998 run: its type is "number"
9999 mem: location 1350 is 3
9999 mem: storing 3 in location 1352
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1353
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1352 is 3
9999 mem: location 1353 is 0
9999 mem: storing 0 in location 1354
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1355
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1352 is 3
9999 mem: location 1355 is 9
9999 mem: storing 0 in location 1356
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1357
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1358
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1359
9999 mem: incrementing refcount of 1175: 11 -> 12
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1346 is 1012
9999 mem: location 1347 is 1153
9999 mem: location 1351 is 2
9999 mem: location 1352 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1372
9999 mem: storing 26 in location 1373
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1375
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1376
9999 mem: incrementing refcount of 1153: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1377
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1378
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1376 is 1153
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1379
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1380
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1375 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1196
9999 mem: incrementing refcount of 1012: 81 -> 82
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1197
 107 run: return {height: "number"}
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1381
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1382
9999 mem: incrementing refcount of 1175: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1175
9999 mem: storing 1175 in location 1383
9999 mem: incrementing refcount of 1175: 13 -> 14
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1196
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1189
9999 mem: location 1178 is 0
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1175: 15 -> 14
9999 mem: storing 1189 in location 1382
9999 mem: incrementing refcount of 1189: 15 -> 16
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1384
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1385
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1386
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1377 is 2
9999 mem: location 1386 is 1161
9999 mem: storing 2 in location 1161
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 0
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1387
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1387 is 1162
9999 mem: storing 3 in location 1162
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1175
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1376 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1388
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 1189
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1382 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1382 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 97
9999 mem: storing 97 in location 1392
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1392 is 97
9999 mem: storing 0 in location 1393
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1385 is 0
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 17 -> 16
9999 mem: storing 1198 in location 1382
9999 mem: incrementing refcount of 1198: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1196
9999 mem: incrementing refcount of 1175: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1189
9999 mem: location 1178 is 0
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1175: 15 -> 14
9999 mem: storing 1189 in location 1383
9999 mem: incrementing refcount of 1189: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1385 is 0
9999 mem: storing 1 in location 1385
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 1198
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1382 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1382 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 98
9999 mem: storing 98 in location 1392
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1392 is 98
9999 mem: storing 0 in location 1393
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 17 -> 16
9999 mem: storing 1202 in location 1382
9999 mem: incrementing refcount of 1202: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 19 -> 18
9999 mem: storing 1198 in location 1383
9999 mem: incrementing refcount of 1198: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1385 is 1
9999 mem: storing 2 in location 1385
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 1202
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1384 is 1
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1382 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1382 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1392
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1392 is 10
9999 mem: storing 1 in location 1393
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 1
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1384 is 1
9999 mem: storing 2 in location 1384
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1385
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 17 -> 16
9999 mem: storing 1206 in location 1382
9999 mem: incrementing refcount of 1206: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 19 -> 18
9999 mem: storing 1202 in location 1383
9999 mem: incrementing refcount of 1202: 17 -> 18
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 1206
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1384 is 2
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 1 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 0
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1382 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1382 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1392
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1392 is 100
9999 mem: storing 0 in location 1393
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1385 is 0
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 17 -> 16
9999 mem: storing 1210 in location 1382
9999 mem: incrementing refcount of 1210: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 19 -> 18
9999 mem: storing 1206 in location 1383
9999 mem: incrementing refcount of 1206: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1385 is 0
9999 mem: storing 1 in location 1385
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 1210
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1384 is 2
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 1 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 1
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1382 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 101
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1382 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is "character"
9999 mem: location 1211 is 101
9999 mem: storing 101 in location 1392
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1392 is 101
9999 mem: storing 0 in location 1393
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1385 is 1
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 101
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 17 -> 16
9999 mem: storing 1214 in location 1382
9999 mem: incrementing refcount of 1214: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 19 -> 18
9999 mem: storing 1210 in location 1383
9999 mem: incrementing refcount of 1210: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1385 is 1
9999 mem: storing 2 in location 1385
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 1214
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1384 is 2
9999 mem: location 1381 is 5
9999 mem: storing 0 in location 1389
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 1 in location 1390
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 2
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 0 in location 1391
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1382 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 102
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1382 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is "character"
9999 mem: location 1215 is 102
9999 mem: storing 102 in location 1392
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1392 is 102
9999 mem: storing 0 in location 1393
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1385 is 2
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1395
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1382 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 102
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1197
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1214: 15 -> 14
9999 mem: storing 0 in location 1382
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 101
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 19 -> 18
9999 mem: storing 1214 in location 1383
9999 mem: incrementing refcount of 1214: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1385 is 2
9999 mem: storing 3 in location 1385
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 1 in location 1390
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 1 in location 1396
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1390 is 1
9999 mem: location 1396 is 1
9999 mem: storing 1 in location 1397
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1398
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1397 is 1
9999 mem: location 1398 is 0
9999 mem: storing 1 in location 1399
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1384 is 2
9999 mem: location 1386 is 1161
9999 mem: storing 2 in location 1161
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1385 is 3
9999 mem: location 1387 is 1162
9999 mem: storing 3 in location 1162
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1383 is 1214
9999 mem: location 1388 is 1157
9999 mem: decrementing refcount of 1175: 14 -> 13
9999 mem: storing 1214 in location 1157
9999 mem: incrementing refcount of 1214: 16 -> 17
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1376 is 1153
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 9 -> 8
9999 mem: storing 1153 in location 1347
9999 mem: incrementing refcount of 1153: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1360
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1361
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1362
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1347 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1363
9999 mem: incrementing refcount of 1175: 13 -> 14
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1365
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1357 is 1
9999 mem: location 1358 is 0
9999 mem: location 1359 is 1175
9999 mem: location 1361 is 2
9999 mem: location 1362 is 3
9999 mem: location 1363 is 1175
9999 mem: location 1360 is 0
9999 mem: location 1365 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1365 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1175 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 3 in location 1006
9999 mem: storing 1175 in location 1007
9999 mem: storing 0 in location 1008
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1347 is 1153
9999 mem: location 1365 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1400
9999 mem: storing 5 in location 1401
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1403
9999 mem: incrementing refcount of 1153: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1404
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1405
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1404 is 1000
9999 mem: location 1405 is 1164
9999 mem: location 1164 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1407
9999 mem: storing 4 in location 1408
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1410
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1411
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1413
9999 mem: storing 1413 in location 1412
9999 mem: incrementing refcount of 1413: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1410 is 1000
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1412 is 1413
9999 mem: skipping refcount at 1413
9999 mem: storing 1000 in location 1414
9999 mem: storing 0 in location 1415
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1412 is 1413
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1413
9999 mem: location 1405 is 1164
9999 mem: storing 1413 in location 1164
9999 mem: incrementing refcount of 1413: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1406
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1406 is 1165
9999 mem: storing 0 in location 1165
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1403 is 1153
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 10 -> 9
9999 mem: storing 1153 in location 1347
9999 mem: incrementing refcount of 1153: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1347 is 1153
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1333
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 2
9999 mem: location 1334 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1248
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1252
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1252 is 2
9999 mem: location 1254 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1016
9999 mem: storing 3 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1331 is 1324
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1283
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1286
9999 mem: incrementing refcount of 1324: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1286 is 1324
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 1
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1287
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 1
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1326
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1326 is 1314
9999 mem: storing 1314 in location 1288
9999 mem: incrementing refcount of 1314: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9999 mem: storing 2 in location 1289
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 1
9999 mem: location 1289 is 2
9999 mem: storing 0 in location 1290
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9998 run: base address is 1315
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 1
9998 run: address to copy is 1320
9998 run: its type is event
9999 mem: location 1320 is 1
9999 mem: location 1321 is 65517
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: storing 1 in location 1292
9999 mem: storing 65517 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 1
9999 mem: location 1287 is 1325
9999 mem: storing 2 in location 1325
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1292 is 1
9999 mem: location 1293 is 65517
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1286 is 1324
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1324
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1335
9999 mem: storing 65517 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1324: 3 -> 2
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 2 -> 3
9999 mem: storing 1 in location 1339
9999 mem: storing 0 in location 1340
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65517
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1341
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1330 is 1012
9999 mem: location 1332 is 1153
9999 mem: location 1335 is 1
9999 mem: location 1336 is 65517
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1416
9999 mem: storing 85 in location 1417
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1419
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1420
9999 mem: incrementing refcount of 1153: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1421
9999 mem: storing 65517 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1425
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1420 is 1153
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1419 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1196
9999 mem: incrementing refcount of 1012: 84 -> 85
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1197
 106 run: return {width: "number"}
9999 mem: location 1197 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1426
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1419 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1196
9999 mem: incrementing refcount of 1012: 85 -> 86
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1196 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1197
 106 run: return {height: "number"}
9999 mem: location 1197 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1427
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1428
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1429
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1430
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1431
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1432
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1433
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1432 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1434
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1421 is 1
9999 mem: location 1422 is 65517
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: storing 0 in location 1435
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1435 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1421 is 1
9999 mem: location 1422 is 65517
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: storing 1422 in location 1489
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1489 is 1422
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1489 is 1422
9999 mem: location 1422 is 65517
9999 mem: storing 0 in location 1452
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1489 is 1422
9999 mem: location 1422 is 65517
9999 mem: storing 0 in location 1468
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1489 is 1422
9999 mem: location 1422 is 65517
9999 mem: storing 0 in location 1475
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 561
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-adjusts-column-at-previous-line
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1489 is 1422
9999 mem: location 1422 is 65517
9999 mem: storing 0 in location 1476
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1489 is 1422
9999 mem: location 1422 is 65517
9999 mem: storing 0 in location 1490
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1489 is 1422
9999 mem: location 1422 is 65517
9999 mem: storing 1 in location 1491
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1491 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 2
9999 mem: storing 2 in location 1455
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1456
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1457
9999 mem: incrementing refcount of 1175: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-previous-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1420 is 1153
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1503
9999 mem: storing 20 in location 1504
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1506
9999 mem: incrementing refcount of 1153: 11 -> 12
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1507
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1508
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1509
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1510
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1506 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1511
 106 run: {already-at-top?: "boolean"} <- lesser-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal", "top": ()}
9999 mem: location 1507 is 1161
9999 mem: location 1161 is 2
9999 mem: storing 0 in location 1512
 106 run: jump-if {already-at-top?: "boolean"}, {: "offset"}
9999 mem: location 1512 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1509 is 1157
9999 mem: location 1157 is 1214
9999 mem: storing 1214 in location 1513
9999 mem: incrementing refcount of 1214: 17 -> 18
 106 run: {old: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1214
9999 mem: storing 1214 in location 1514
9999 mem: incrementing refcount of 1214: 18 -> 19
 106 run: {c2: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1513 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 102
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1513 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is "character"
9999 mem: location 1215 is 102
9999 mem: storing 102 in location 1515
 106 run: {at-newline?: "boolean"} <- equal {c2: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1515 is 102
9999 mem: storing 0 in location 1516
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1516 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- before-previous-line {curr: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1513 is 1214
9999 mem: location 1506 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1525
9999 mem: storing 14 in location 1526
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1528
9999 mem: incrementing refcount of 1214: 19 -> 20
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1529
9999 mem: incrementing refcount of 1153: 12 -> 13
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1528 is 1214
9999 mem: storing 1214 in location 1530
9999 mem: incrementing refcount of 1214: 20 -> 21
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1530 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 102
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1530 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is "character"
9999 mem: location 1215 is 102
9999 mem: storing 102 in location 1531
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1532
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1533
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1533 is 9
9999 mem: location 1532 is 0
9999 mem: storing 9 in location 1534
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1175
9999 mem: storing 1175 in location 1535
9999 mem: incrementing refcount of 1175: 15 -> 16
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1214
9999 mem: location 1535 is 1175
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1166
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1169
9999 mem: incrementing refcount of 1214: 21 -> 22
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1170
9999 mem: incrementing refcount of 1175: 16 -> 17
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1171
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 1214
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1214
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1172 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1214
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 22 -> 23
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 102
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 18 -> 19
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1214: 23 -> 22
9999 mem: storing 1210 in location 1169
9999 mem: incrementing refcount of 1210: 19 -> 20
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 1210
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1210
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1169 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 101
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1169 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is "character"
9999 mem: location 1211 is 101
9999 mem: storing 101 in location 1173
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1173 is 101
9999 mem: storing 0 in location 1174
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1171 is 0
9999 mem: storing 1 in location 1171
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1210
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 20 -> 21
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 101
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 18 -> 19
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1210: 21 -> 20
9999 mem: storing 1206 in location 1169
9999 mem: incrementing refcount of 1206: 19 -> 20
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 1206
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1206
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1169 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1169 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 100
9999 mem: storing 100 in location 1173
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1173 is 100
9999 mem: storing 0 in location 1174
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1171 is 1
9999 mem: storing 2 in location 1171
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1206
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 20 -> 21
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 18 -> 19
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1206: 21 -> 20
9999 mem: storing 1202 in location 1169
9999 mem: incrementing refcount of 1202: 19 -> 20
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 1202
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1202
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1169 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1169 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1173
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1173 is 10
9999 mem: storing 1 in location 1174
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1174 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1171 is 2
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 2
9999 mem: storing 2 in location 1536
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1536 is 2
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1536 is 2
9999 mem: location 1534 is 9
9999 mem: storing 2 in location 1538
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1538 is 2
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1538 is 2
9999 mem: storing 3 in location 1538
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1539
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 0
9999 mem: location 1538 is 3
9999 mem: storing 0 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1214
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 22 -> 23
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 102
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 20 -> 21
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1537
9999 mem: incrementing refcount of 1210: 21 -> 22
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1537 is 1210
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1537 is 1210
9999 mem: decrementing refcount of 1214: 23 -> 22
9999 mem: storing 1210 in location 1530
9999 mem: incrementing refcount of 1210: 22 -> 23
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1539 is 0
9999 mem: storing 1 in location 1539
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 1
9999 mem: location 1538 is 3
9999 mem: storing 0 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1210
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 101
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 20 -> 21
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1210: 24 -> 23
9999 mem: storing 1206 in location 1537
9999 mem: incrementing refcount of 1206: 21 -> 22
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1537 is 1206
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1537 is 1206
9999 mem: decrementing refcount of 1210: 23 -> 22
9999 mem: storing 1206 in location 1530
9999 mem: incrementing refcount of 1206: 22 -> 23
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1539 is 1
9999 mem: storing 2 in location 1539
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 2
9999 mem: location 1538 is 3
9999 mem: storing 0 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1206
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 100
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 20 -> 21
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1206: 24 -> 23
9999 mem: storing 1202 in location 1537
9999 mem: incrementing refcount of 1202: 21 -> 22
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1537 is 1202
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1537 is 1202
9999 mem: decrementing refcount of 1206: 23 -> 22
9999 mem: storing 1202 in location 1530
9999 mem: incrementing refcount of 1202: 22 -> 23
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1539 is 2
9999 mem: storing 3 in location 1539
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 3
9999 mem: location 1538 is 3
9999 mem: storing 1 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1202
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1214: 22 -> 21
9999 mem: storing 1202 in location 1513
9999 mem: incrementing refcount of 1202: 23 -> 24
 106 run: {no-motion?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {old: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1202
9999 mem: location 1514 is 1214
9999 mem: storing 0 in location 1517
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1518
 106 run: jump-unless {no-motion?: "boolean"}, {1: "offset"}
9999 mem: location 1517 is 0
9998 run: jumping to instruction 21
 106 run: {old: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1202
9999 mem: decrementing refcount of 1214: 21 -> 20
9999 mem: storing 1202 in location 1514
9999 mem: incrementing refcount of 1202: 24 -> 25
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- before-previous-line {curr: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1513 is 1202
9999 mem: location 1506 is 1153
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1525
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1528
9999 mem: incrementing refcount of 1202: 25 -> 26
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1529
9999 mem: incrementing refcount of 1153: 13 -> 14
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1528 is 1202
9999 mem: storing 1202 in location 1530
9999 mem: incrementing refcount of 1202: 26 -> 27
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1530 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1530 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1531
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1532
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1533
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1533 is 9
9999 mem: location 1532 is 0
9999 mem: storing 9 in location 1534
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1214
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 2
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1529 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1175
9999 mem: storing 1175 in location 1535
9999 mem: incrementing refcount of 1175: 17 -> 18
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1202
9999 mem: location 1535 is 1175
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1166
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1169
9999 mem: incrementing refcount of 1202: 27 -> 28
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1170
9999 mem: incrementing refcount of 1175: 18 -> 19
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1171
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 1202
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1202
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1172 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1202
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 28 -> 29
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 18 -> 19
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1202: 29 -> 28
9999 mem: storing 1198 in location 1169
9999 mem: incrementing refcount of 1198: 19 -> 20
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 1198
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1198
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1169 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1169 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 98
9999 mem: storing 98 in location 1173
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1173 is 98
9999 mem: storing 0 in location 1174
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1171 is 0
9999 mem: storing 1 in location 1171
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1198
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 20 -> 21
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 18 -> 19
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1198: 21 -> 20
9999 mem: storing 1189 in location 1169
9999 mem: incrementing refcount of 1189: 19 -> 20
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 1189
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1189
9999 mem: location 1170 is 1175
9999 mem: storing 0 in location 1172
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1169 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1169 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 97
9999 mem: storing 97 in location 1173
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1173 is 97
9999 mem: storing 0 in location 1174
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1174 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1171 is 1
9999 mem: storing 2 in location 1171
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1189
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 20 -> 21
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1175
9999 mem: storing 1175 in location 1197
9999 mem: incrementing refcount of 1175: 19 -> 20
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1189: 21 -> 20
9999 mem: storing 1175 in location 1169
9999 mem: incrementing refcount of 1175: 20 -> 21
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 1175
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1175
9999 mem: location 1170 is 1175
9999 mem: storing 1 in location 1172
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1171 is 2
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 2
9999 mem: storing 2 in location 1536
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1536 is 2
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1536 is 2
9999 mem: location 1534 is 9
9999 mem: storing 2 in location 1538
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1538 is 2
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1538 is 2
9999 mem: storing 3 in location 1538
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1539
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 0
9999 mem: location 1538 is 3
9999 mem: storing 0 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1202
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 28 -> 29
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 20 -> 21
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1537
9999 mem: incrementing refcount of 1198: 21 -> 22
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1537 is 1198
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1537 is 1198
9999 mem: decrementing refcount of 1202: 29 -> 28
9999 mem: storing 1198 in location 1530
9999 mem: incrementing refcount of 1198: 22 -> 23
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1539 is 0
9999 mem: storing 1 in location 1539
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 1
9999 mem: location 1538 is 3
9999 mem: storing 0 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1198
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1201
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1201 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 20 -> 21
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1198: 24 -> 23
9999 mem: storing 1189 in location 1537
9999 mem: incrementing refcount of 1189: 21 -> 22
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1537 is 1189
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1537 is 1189
9999 mem: decrementing refcount of 1198: 23 -> 22
9999 mem: storing 1189 in location 1530
9999 mem: incrementing refcount of 1189: 22 -> 23
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1539 is 1
9999 mem: storing 2 in location 1539
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 2
9999 mem: location 1538 is 3
9999 mem: storing 0 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1189
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1175
9999 mem: storing 1175 in location 1197
9999 mem: incrementing refcount of 1175: 21 -> 22
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1175
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1189: 24 -> 23
9999 mem: storing 1175 in location 1537
9999 mem: incrementing refcount of 1175: 22 -> 23
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1537 is 1175
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1537 is 1175
9999 mem: decrementing refcount of 1189: 23 -> 22
9999 mem: storing 1175 in location 1530
9999 mem: incrementing refcount of 1175: 23 -> 24
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1539 is 2
9999 mem: storing 3 in location 1539
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1539 is 3
9999 mem: location 1538 is 3
9999 mem: storing 1 in location 1540
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1530 is 1175
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1175
9999 mem: decrementing refcount of 1202: 28 -> 27
9999 mem: storing 1175 in location 1513
9999 mem: incrementing refcount of 1175: 24 -> 25
 106 run: {no-motion?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {old: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1175
9999 mem: location 1514 is 1202
9999 mem: storing 0 in location 1517
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1518
 106 run: jump-unless {no-motion?: "boolean"}, {1: "offset"}
9999 mem: location 1517 is 0
9998 run: jumping to instruction 29
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1175
9999 mem: location 1509 is 1157
9999 mem: decrementing refcount of 1214: 20 -> 19
9999 mem: storing 1175 in location 1157
9999 mem: incrementing refcount of 1175: 25 -> 26
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1507 is 1161
9999 mem: location 1161 is 2
9999 mem: location 1507 is 1161
9999 mem: storing 1 in location 1161
 106 run: {target-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1508 is 1162
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1519
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1510 is 0
9999 mem: location 1508 is 1162
9999 mem: storing 0 in location 1162
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1508 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1519 is 3
9999 mem: storing 0 in location 1520
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1509 is 1157
9999 mem: location 1157 is 1175
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1175 in location 1196
9999 mem: incrementing refcount of 1175: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1175
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9999 mem: location 1176 is 167
9999 mem: location 1177 is 1189
9999 mem: location 1178 is 0
9999 mem: location 1196 is 1175
9999 mem: skipping refcount at 1175
9998 run: address to copy is 1177
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1177 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1175: 27 -> 26
9999 mem: storing 1189 in location 1513
9999 mem: incrementing refcount of 1189: 23 -> 24
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1513 is 1189
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1513 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1513 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 97
9999 mem: storing 97 in location 1521
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1521 is 97
9999 mem: storing 0 in location 1516
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1516 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1189
9999 mem: location 1509 is 1157
9999 mem: decrementing refcount of 1175: 26 -> 25
9999 mem: storing 1189 in location 1157
9999 mem: incrementing refcount of 1189: 24 -> 25
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1508 is 1162
9999 mem: location 1162 is 0
9999 mem: location 1508 is 1162
9999 mem: storing 1 in location 1162
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1508 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1519 is 3
9999 mem: storing 0 in location 1520
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1509 is 1157
9999 mem: location 1157 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1175
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 26 -> 25
9999 mem: storing 1198 in location 1513
9999 mem: incrementing refcount of 1198: 23 -> 24
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1513 is 1198
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1513 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1513 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 98
9999 mem: storing 98 in location 1521
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1521 is 98
9999 mem: storing 0 in location 1516
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1516 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1513 is 1198
9999 mem: location 1509 is 1157
9999 mem: decrementing refcount of 1189: 25 -> 24
9999 mem: storing 1198 in location 1157
9999 mem: incrementing refcount of 1198: 24 -> 25
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1508 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1508 is 1162
9999 mem: storing 2 in location 1162
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1508 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1519 is 3
9999 mem: storing 0 in location 1520
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1509 is 1157
9999 mem: location 1157 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 27 -> 28
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 26 -> 25
9999 mem: storing 1202 in location 1513
9999 mem: incrementing refcount of 1202: 28 -> 29
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1513 is 1202
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1513 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1513 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1521
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1521 is 10
9999 mem: storing 1 in location 1516
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1516 is 1
9998 run: jumping to instruction 45
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1518
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1506 is 1153
9999 mem: location 1518 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1153: 14 -> 13
9999 mem: storing 1153 in location 1420
9999 mem: incrementing refcount of 1153: 13 -> 14
9999 mem: storing 0 in location 1425
 105 run: {undo-coalesce-tag: "number"} <- copy {3: "literal", "up-arrow": ()}
9999 mem: storing 3 in location 1458
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1459
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1460
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1461
9999 mem: incrementing refcount of 1175: 25 -> 26
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1458 is 3
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1439
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1439 is 1164
9999 mem: location 1164 is 1413
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1439 is 1164
9999 mem: location 1164 is 1413
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1413 in location 1196
9999 mem: incrementing refcount of 1413: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1196 is 1413
9999 mem: skipping refcount at 1413
9999 mem: location 1414 is 1000
9999 mem: location 1415 is 0
9999 mem: location 1196 is 1413
9999 mem: skipping refcount at 1413
9998 run: address to copy is 1414
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1414 is 1000
9999 mem: storing 1000 in location 1197
9999 mem: incrementing refcount of 1000: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1197 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1438
9999 mem: incrementing refcount of 1000: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1438 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1175
9999 mem: location 1005 is 2
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1175
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1438 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1444
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1444 is 1002
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1444 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1175
9999 mem: location 1005 is 2
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1175
9999 mem: location 1008 is 0
9999 mem: location 1444 is 1002
9998 run: address to copy is 1008
9998 run: its type is "number"
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1462
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1458 is 3
9999 mem: location 1462 is 0
9999 mem: storing 0 in location 1463
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 666
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: decrementing refcount of 1000: 5 -> 4
9999 mem: storing 1120 in location 1438
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1455 is 2
9999 mem: location 1456 is 3
9999 mem: location 1457 is 1175
9999 mem: location 1459 is 1
9999 mem: location 1460 is 2
9999 mem: location 1461 is 1175
9999 mem: location 1458 is 3
9999 mem: location 1438 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1438 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 3 in location 1123
9999 mem: storing 1175 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 2 in location 1126
9999 mem: storing 1175 in location 1127
9999 mem: storing 3 in location 1128
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1420 is 1153
9999 mem: location 1438 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1400
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1403
9999 mem: incrementing refcount of 1153: 14 -> 15
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1404
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1413
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1405
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1404 is 1120
9999 mem: location 1405 is 1164
9999 mem: location 1164 is 1413
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1407
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1410
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1413 in location 1411
9999 mem: incrementing refcount of 1413: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1541
9999 mem: storing 1541 in location 1412
9999 mem: incrementing refcount of 1541: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1410 is 1120
9999 mem: location 1411 is 1413
9999 mem: location 1412 is 1541
9999 mem: skipping refcount at 1541
9999 mem: location 1412 is 1541
9999 mem: skipping refcount at 1541
9999 mem: storing 1120 in location 1542
9999 mem: storing 1413 in location 1543
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1412 is 1541
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1541
9999 mem: location 1405 is 1164
9999 mem: decrementing refcount of 1413: 4 -> 3
9999 mem: storing 1541 in location 1164
9999 mem: incrementing refcount of 1541: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1406
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1406 is 1165
9999 mem: storing 0 in location 1165
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1403 is 1153
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 15 -> 14
9999 mem: storing 1153 in location 1420
9999 mem: incrementing refcount of 1153: 14 -> 15
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1419 is 1012
9999 mem: location 1420 is 1153
9999 mem: location 1425 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1153
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 86 -> 85
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 85 -> 86
9999 mem: decrementing refcount of 1153: 15 -> 14
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 14 -> 15
9999 mem: storing 0 in location 1342
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1333
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 1
9999 mem: location 1334 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1248
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 86 -> 87
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1253
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1253 is 2
9999 mem: location 1255 is 1016
9999 mem: storing 2 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 87 -> 86
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 86 -> 87
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1331 is 1324
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1283
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1324 in location 1286
9999 mem: incrementing refcount of 1324: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1286 is 1324
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 2
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1325
9999 mem: storing 1325 in location 1287
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9999 mem: location 1325 is 2
9999 mem: location 1326 is 1314
9999 mem: location 1286 is 1324
9999 mem: skipping refcount at 1324
9998 run: address to copy is 1326
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1326 is 1314
9999 mem: storing 1314 in location 1288
9999 mem: incrementing refcount of 1314: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1288 is 1314
9999 mem: skipping refcount at 1314
9999 mem: storing 2 in location 1289
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1287 is 1325
9999 mem: location 1325 is 2
9999 mem: location 1289 is 2
9999 mem: storing 1 in location 1290
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
9999 mem: storing 1193 in location 1291
9999 mem: incrementing refcount of 1193: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1291 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1286 is 1324
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1324
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1324: 4 -> 3
9999 mem: storing 1324 in location 1331
9999 mem: incrementing refcount of 1324: 3 -> 4
9999 mem: storing 1 in location 1339
9999 mem: storing 1 in location 1340
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1330 is 1012
9999 mem: location 1331 is 1324
9999 mem: location 1332 is 1153
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 2 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1546
9999 mem: storing 'text' tag at 1546
9999 mem: storing character 48 at 1547
9999 mem: storing console in 1550
9999 mem: storing console data in 1552
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1550
9999 mem: location 2 is 1153
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1327
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 87 -> 88
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1550 in location 1331
9999 mem: incrementing refcount of 1550: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 15 -> 16
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1333
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 1
9999 mem: location 1334 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1248
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 88 -> 89
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1253
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1253 is 2
9999 mem: location 1255 is 1016
9999 mem: storing 2 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 89 -> 88
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 88 -> 89
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1331 is 1550
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1283
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1550 in location 1286
9999 mem: incrementing refcount of 1550: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1286 is 1550
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9999 mem: location 1551 is 0
9999 mem: location 1552 is 1544
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9998 run: address to copy is 1551
9999 mem: storing 1551 in location 1287
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9999 mem: location 1551 is 0
9999 mem: location 1552 is 1544
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9998 run: address to copy is 1552
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1552 is 1544
9999 mem: storing 1544 in location 1288
9999 mem: incrementing refcount of 1544: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1288 is 1544
9999 mem: skipping refcount at 1544
9999 mem: storing 1 in location 1289
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1287 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1289 is 1
9999 mem: storing 0 in location 1290
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1288 is 1544
9999 mem: skipping refcount at 1544
9998 run: base address is 1545
9999 mem: location 1287 is 1551
9999 mem: location 1551 is 0
9998 run: address to copy is 1546
9998 run: its type is event
9999 mem: location 1546 is 0
9999 mem: location 1547 is 48
9999 mem: location 1548 is 0
9999 mem: location 1549 is 0
9999 mem: storing 0 in location 1292
9999 mem: storing 48 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1287 is 1551
9999 mem: location 1551 is 0
9999 mem: location 1287 is 1551
9999 mem: storing 1 in location 1551
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1292 is 0
9999 mem: location 1293 is 48
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1286 is 1550
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1550
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1335
9999 mem: storing 48 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1550: 2 -> 1
9999 mem: storing 1550 in location 1331
9999 mem: incrementing refcount of 1550: 1 -> 2
9999 mem: storing 1 in location 1339
9999 mem: storing 0 in location 1340
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1335 is 0
9999 mem: location 1336 is 48
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1341
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1330 is 1012
9999 mem: location 1332 is 1153
9999 mem: location 1335 is 0
9999 mem: location 1336 is 48
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1416
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1419
9999 mem: incrementing refcount of 1012: 89 -> 90
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1420
9999 mem: incrementing refcount of 1153: 16 -> 17
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1421
9999 mem: storing 48 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1425
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1420 is 1153
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1419 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1553
9999 mem: storing 3 in location 1554
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1556
9999 mem: incrementing refcount of 1012: 90 -> 91
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1556 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1557
 106 run: return {width: "number"}
9999 mem: location 1557 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1426
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1419 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1556
9999 mem: incrementing refcount of 1012: 91 -> 92
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1556 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1557
 106 run: return {height: "number"}
9999 mem: location 1557 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1427
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1428
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1429
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1430
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1431
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1432
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1433
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1432 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1434
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1421 is 0
9999 mem: location 1422 is 48
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: storing 1422 in location 1435
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1435 is 1422
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1436
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1436 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1447
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1452
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1468
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1469
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1474
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1475
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 268
9990 schedule: handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-adjusts-column-at-previous-line
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1476
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1477
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1481
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 0 in location 1485
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: storing 1 in location 1488
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1425
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1488 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1470
9999 mem: incrementing refcount of 1175: 26 -> 27
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1430 is 1157
9999 mem: location 1157 is 1198
9999 mem: storing 1198 in location 1482
9999 mem: incrementing refcount of 1198: 25 -> 26
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1420 is 1153
9999 mem: location 1435 is 1422
9999 mem: location 1422 is 48
9999 mem: location 1419 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1558
9999 mem: storing 31 in location 1559
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1561
9999 mem: incrementing refcount of 1153: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1562
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1563
9999 mem: incrementing refcount of 1012: 92 -> 93
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1198
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1564
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1562 is 48
9999 mem: location 1564 is 1157
9999 mem: location 1157 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1166
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1169
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1170
9999 mem: incrementing refcount of 1198: 26 -> 27
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1591
9999 mem: storing 1591 in location 1171
9999 mem: incrementing refcount of 1591: 0 -> 1
 107 run: {val: ("address" "character")} <- get-address {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1171 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 0
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1171 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1592
9999 mem: storing 1592 in location 1172
 107 run: {val: ("address" "character"), "lookup": ()} <- copy {x: "character"}
9999 mem: location 1169 is 48
9999 mem: location 1172 is 1592
9999 mem: storing 48 in location 1592
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1170 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1170 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1173
9999 mem: incrementing refcount of 1202: 29 -> 30
 107 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1170 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1170 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1174
 107 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1171 is 1591
9999 mem: location 1174 is 1200
9999 mem: decrementing refcount of 1202: 30 -> 29
9999 mem: storing 1591 in location 1200
9999 mem: incrementing refcount of 1591: 1 -> 2
 107 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1171 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 48
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1171 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1594
9999 mem: storing 1594 in location 1174
 107 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1170 is 1198
9999 mem: location 1174 is 1594
9999 mem: storing 1198 in location 1594
9999 mem: incrementing refcount of 1198: 27 -> 28
 107 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1171 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 48
9999 mem: location 1593 is 0
9999 mem: location 1594 is 1198
9999 mem: location 1171 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1593
9999 mem: storing 1593 in location 1174
 107 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1173 is 1202
9999 mem: location 1174 is 1593
9999 mem: storing 1202 in location 1593
9999 mem: incrementing refcount of 1202: 29 -> 30
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1173 is 1202
9998 run: jumping to instruction 15
 107 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1173 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1173 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1174
 107 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1171 is 1591
9999 mem: location 1174 is 1205
9999 mem: decrementing refcount of 1198: 28 -> 27
9999 mem: storing 1591 in location 1205
9999 mem: incrementing refcount of 1591: 2 -> 3
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1198
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1564 is 1157
9999 mem: location 1157 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1556
9999 mem: incrementing refcount of 1198: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1556 is 1198
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1556 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1591
9999 mem: location 1201 is 1189
9999 mem: location 1556 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1591
9999 mem: storing 1591 in location 1557
9999 mem: incrementing refcount of 1591: 3 -> 4
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1557 is 1591
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1591
9999 mem: location 1564 is 1157
9999 mem: decrementing refcount of 1198: 28 -> 27
9999 mem: storing 1591 in location 1157
9999 mem: incrementing refcount of 1591: 4 -> 5
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1565
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1566
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1567
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1561 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 9
9999 mem: storing 9 in location 1568
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1565 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1569
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1566 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1570
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1563 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1556
9999 mem: incrementing refcount of 1012: 93 -> 94
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1556 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1557
 107 run: return {width: "number"}
9999 mem: location 1557 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1571
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1563 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1556
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1556 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1556 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1557
 107 run: return {height: "number"}
9999 mem: location 1557 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1572
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1568 is 9
9999 mem: storing 8 in location 1573
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1566 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1573 is 8
9999 mem: storing 0 in location 1574
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1566 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1566 is 1162
9999 mem: storing 3 in location 1162
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1564 is 1157
9999 mem: location 1157 is 1591
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1591 in location 1556
9999 mem: incrementing refcount of 1591: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1556 is 1591
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1556 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 48
9999 mem: location 1593 is 1202
9999 mem: location 1594 is 1198
9999 mem: location 1556 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1593
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1593 is 1202
9999 mem: storing 1202 in location 1557
9999 mem: incrementing refcount of 1202: 30 -> 31
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1557 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1581
9999 mem: incrementing refcount of 1202: 31 -> 32
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1581 is 1202
9999 mem: storing 0 in location 1582
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1582 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1581 is 1202
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1566 is 1162
9999 mem: location 1162 is 3
9999 mem: location 1571 is 10
9999 mem: storing 0 in location 1585
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1564 is 1157
9999 mem: location 1157 is 1591
9999 mem: storing 1591 in location 1587
9999 mem: incrementing refcount of 1591: 6 -> 7
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1563 is 1012
9999 mem: location 1569 is 1
9999 mem: location 1570 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1248
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1253
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1253 is 2
9999 mem: location 1255 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1570 is 2
9999 mem: storing 2 in location 1588
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1580
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1588 is 2
9999 mem: location 1568 is 9
9999 mem: storing 0 in location 1585
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1587 is 1591
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1587 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 48
9999 mem: location 1593 is 1202
9999 mem: location 1594 is 1198
9999 mem: location 1587 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1592
9998 run: its type is "character"
9999 mem: location 1592 is 48
9999 mem: storing 48 in location 1589
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1589 is 48
9999 mem: storing 0 in location 1590
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1563 is 1012
9999 mem: location 1589 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1256
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1259
9999 mem: incrementing refcount of 1012: 96 -> 97
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1260
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1261
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1264 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1263
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1260 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1259 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1265
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1266
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1267
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1267 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1268
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1268 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1267 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1266 is 5
9999 mem: storing 1 in location 1268
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1268 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1269
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1268
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1268 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1265 is 10
9999 mem: storing 1 in location 1268
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1268 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1260 is 48
9999 mem: storing 0 in location 1270
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1267 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1273
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1273 is 10
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1273
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1259 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1274
9999 mem: incrementing refcount of 1018: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1274 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1275
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1260 is 48
9999 mem: storing 0 in location 1276
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1274 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1273 is 12
9999 mem: storing 1044 in location 1278
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1278 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1278 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1279
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1260 is 48
9999 mem: location 1279 is 1044
9999 mem: storing 48 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1278 is 1044
9999 mem: location 1044 is 48
9999 mem: location 1045 is 7
9999 mem: location 1278 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1280
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1261 is 7
9999 mem: location 1280 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1265 is 10
9999 mem: storing 9 in location 1281
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1281 is 9
9999 mem: storing 0 in location 1282
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1269 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1269 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1259 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1588 is 2
9999 mem: storing 3 in location 1588
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1587 is 1591
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1591 in location 1556
9999 mem: incrementing refcount of 1591: 7 -> 8
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1556 is 1591
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1556 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 48
9999 mem: location 1593 is 1202
9999 mem: location 1594 is 1198
9999 mem: location 1556 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1593
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1593 is 1202
9999 mem: storing 1202 in location 1557
9999 mem: incrementing refcount of 1202: 32 -> 33
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1557 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1591: 8 -> 7
9999 mem: storing 1202 in location 1587
9999 mem: incrementing refcount of 1202: 33 -> 34
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1580
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1588 is 3
9999 mem: location 1568 is 9
9999 mem: storing 0 in location 1585
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1587 is 1202
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1587 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 10
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1591
9999 mem: location 1587 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 10
9999 mem: storing 10 in location 1589
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1589 is 10
9999 mem: storing 1 in location 1590
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 1
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1580
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1561 is 1153
9999 mem: location 1563 is 1012
9999 mem: location 1580 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1153: 18 -> 17
9999 mem: storing 1153 in location 1420
9999 mem: incrementing refcount of 1153: 17 -> 18
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1419
9999 mem: incrementing refcount of 1012: 96 -> 97
9999 mem: storing 0 in location 1425
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1175
9999 mem: storing 1175 in location 1472
9999 mem: incrementing refcount of 1175: 27 -> 28
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1420 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1439
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1439 is 1164
9999 mem: location 1164 is 1541
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1439 is 1164
9999 mem: location 1164 is 1541
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1541 in location 1556
9999 mem: incrementing refcount of 1541: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1556 is 1541
9999 mem: skipping refcount at 1541
9999 mem: location 1542 is 1120
9999 mem: location 1543 is 1413
9999 mem: location 1556 is 1541
9999 mem: skipping refcount at 1541
9998 run: address to copy is 1542
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1542 is 1120
9999 mem: storing 1120 in location 1557
9999 mem: incrementing refcount of 1120: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1557 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1438
9999 mem: incrementing refcount of 1120: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1438 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 2
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1175
9999 mem: location 1125 is 1
9999 mem: location 1126 is 2
9999 mem: location 1127 is 1175
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1438 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1445
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1445 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1482 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1556
9999 mem: incrementing refcount of 1198: 27 -> 28
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1556 is 1198
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1556 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 98
9999 mem: location 1200 is 1591
9999 mem: location 1201 is 1189
9999 mem: location 1556 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1591
9999 mem: storing 1591 in location 1557
9999 mem: incrementing refcount of 1591: 7 -> 8
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1557 is 1591
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1591
9999 mem: storing 1591 in location 1446
9999 mem: incrementing refcount of 1591: 8 -> 9
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1446 is 1591
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1591 in location 1556
9999 mem: incrementing refcount of 1591: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1556 is 1591
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1556 is 1591
9999 mem: skipping refcount at 1591
9999 mem: location 1592 is 48
9999 mem: location 1593 is 1202
9999 mem: location 1594 is 1198
9999 mem: location 1556 is 1591
9999 mem: skipping refcount at 1591
9998 run: address to copy is 1593
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1593 is 1202
9999 mem: storing 1202 in location 1557
9999 mem: incrementing refcount of 1202: 34 -> 35
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1557 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1484
9999 mem: incrementing refcount of 1202: 35 -> 36
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1595
9999 mem: decrementing refcount of 1120: 5 -> 4
9999 mem: storing 1595 in location 1438
9999 mem: incrementing refcount of 1595: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1433 is 1
9999 mem: location 1434 is 2
9999 mem: location 1470 is 1175
9999 mem: location 1431 is 1161
9999 mem: location 1161 is 1
9999 mem: location 1432 is 1162
9999 mem: location 1162 is 3
9999 mem: location 1472 is 1175
9999 mem: location 1446 is 1591
9999 mem: location 1484 is 1202
9999 mem: location 1438 is 1595
9999 mem: skipping refcount at 1595
9999 mem: location 1438 is 1595
9999 mem: skipping refcount at 1595
9999 mem: storing 0 in location 1596
9999 mem: storing 1 in location 1597
9999 mem: storing 2 in location 1598
9999 mem: storing 1175 in location 1599
9999 mem: storing 1 in location 1600
9999 mem: storing 3 in location 1601
9999 mem: storing 1175 in location 1602
9999 mem: storing 1591 in location 1603
9999 mem: storing 1202 in location 1604
9999 mem: storing 1 in location 1605
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1420 is 1153
9999 mem: location 1438 is 1595
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1400
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1153 in location 1403
9999 mem: incrementing refcount of 1153: 18 -> 19
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1404
9999 mem: incrementing refcount of 1595: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1541
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1405
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1404 is 1595
9999 mem: location 1405 is 1164
9999 mem: location 1164 is 1541
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1407
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1410
9999 mem: incrementing refcount of 1595: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1541 in location 1411
9999 mem: incrementing refcount of 1541: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1607
9999 mem: storing 1607 in location 1412
9999 mem: incrementing refcount of 1607: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1410 is 1595
9999 mem: location 1411 is 1541
9999 mem: location 1412 is 1607
9999 mem: skipping refcount at 1607
9999 mem: location 1412 is 1607
9999 mem: skipping refcount at 1607
9999 mem: storing 1595 in location 1608
9999 mem: storing 1541 in location 1609
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1412 is 1607
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1607
9999 mem: location 1405 is 1164
9999 mem: decrementing refcount of 1541: 4 -> 3
9999 mem: storing 1607 in location 1164
9999 mem: incrementing refcount of 1607: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1607
9999 mem: location 1165 is 0
9999 mem: location 1403 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1406
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1406 is 1165
9999 mem: storing 0 in location 1165
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1403 is 1153
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1153
9999 mem: decrementing refcount of 1153: 19 -> 18
9999 mem: storing 1153 in location 1420
9999 mem: incrementing refcount of 1153: 18 -> 19
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1419 is 1012
9999 mem: location 1420 is 1153
9999 mem: location 1425 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1153
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 96 -> 97
9999 mem: decrementing refcount of 1153: 19 -> 18
9999 mem: storing 1153 in location 1332
9999 mem: incrementing refcount of 1153: 18 -> 19
9999 mem: storing 0 in location 1342
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1607
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1333
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9999 mem: location 1154 is 1175
9999 mem: location 1155 is 1175
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1591
9999 mem: location 1158 is 0
9999 mem: location 1159 is 9
9999 mem: location 1160 is 2
9999 mem: location 1161 is 1
9999 mem: location 1162 is 3
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1607
9999 mem: location 1165 is 0
9999 mem: location 1332 is 1153
9999 mem: skipping refcount at 1153
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 3
9999 mem: storing 3 in location 1334
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1330 is 1012
9999 mem: location 1333 is 1
9999 mem: location 1334 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1248
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1251
9999 mem: incrementing refcount of 1012: 97 -> 98
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1252
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1251 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1254
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1252 is 1
9999 mem: location 1254 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1251 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1255
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1016
9999 mem: storing 3 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1251 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1330
9999 mem: incrementing refcount of 1012: 97 -> 98
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1331 is 1550
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1283
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1550 in location 1286
9999 mem: incrementing refcount of 1550: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1286 is 1550
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9999 mem: location 1551 is 1
9999 mem: location 1552 is 1544
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9998 run: address to copy is 1551
9999 mem: storing 1551 in location 1287
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9999 mem: location 1551 is 1
9999 mem: location 1552 is 1544
9999 mem: location 1286 is 1550
9999 mem: skipping refcount at 1550
9998 run: address to copy is 1552
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1552 is 1544
9999 mem: storing 1544 in location 1288
9999 mem: incrementing refcount of 1544: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1288 is 1544
9999 mem: skipping refcount at 1544
9999 mem: storing 1 in location 1289
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1287 is 1551
9999 mem: location 1551 is 1
9999 mem: location 1289 is 1
9999 mem: storing 1 in location 1290
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1553
9999 mem: storing 1553 in location 1291
9999 mem: incrementing refcount of 1553: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1291 is 1553
9999 mem: skipping refcount at 1553
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: location 1286 is 1550
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1550
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: decrementing refcount of 1550: 3 -> 2
9999 mem: storing 1550 in location 1331
9999 mem: incrementing refcount of 1550: 2 -> 3
9999 mem: storing 1 in location 1339
9999 mem: storing 1 in location 1340
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1340 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1330 is 1012
9999 mem: location 1331 is 1550
9999 mem: location 1332 is 1153
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .ab0       .\n    .def       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
