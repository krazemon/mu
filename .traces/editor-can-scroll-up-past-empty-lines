9991 parse: --- defining scenario_editor-can-scroll-up-past-empty-lines
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {4: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"axy\nbxy\ncxy\n\ndxy\nexy\nfxy\ngxy\n": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"axy\nbxy\ncxy\n\ndxy\nexy\nfxy\ngxy\n": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {4: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .axy       .\n    .bxy       .\n    .cxy       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .axy       .\n    .bxy       .\n    .cxy       .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .cxy       .\n    .          .\n    .dxy       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .cxy       .\n    .          .\n    .dxy       .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .dxy       .\n    .exy       .\n    .fxy       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .dxy       .\n    .exy       .\n    .fxy       .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-up\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .cxy       .\n    .          .\n    .dxy       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .cxy       .\n    .          .\n    .dxy       .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-scroll-up-past-empty-lines has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- deduce types for recipe scenario_editor-can-scroll-up-past-empty-lines
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- transform names for recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-scroll-up-past-empty-lines
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- transform braces for recipe scenario_editor-can-scroll-up-past-empty-lines
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- perform checks for recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- type-check calls inside recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- checking reply instructions against header for scenario_editor-can-scroll-up-past-empty-lines
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-scroll-up-past-empty-lines
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 4
9999 mem: storing 40 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 40
9999 mem: array size is 40
9999 mem: allocating size 82
9999 mem: new alloc: 1014
9999 mem: storing 40 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 4
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 4 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1096
9999 mem: storing 7 in location 1097
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1099 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1100
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1101
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1102
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 0
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 0
9999 mem: storing 1016 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1016
9999 mem: location 1104 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 1
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 1
9999 mem: storing 1018 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1018
9999 mem: location 1104 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 1
9999 mem: storing 2 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 2
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 2
9999 mem: storing 1020 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1020
9999 mem: location 1104 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 2
9999 mem: storing 3 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 3
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 3
9999 mem: storing 1022 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1022
9999 mem: location 1104 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 3
9999 mem: storing 4 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 4
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 4
9999 mem: storing 1024 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1024
9999 mem: location 1104 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 4
9999 mem: storing 5 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 5
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 5
9999 mem: storing 1026 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1026
9999 mem: location 1104 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 5
9999 mem: storing 6 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 6
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 6
9999 mem: storing 1028 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1028
9999 mem: location 1104 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 6
9999 mem: storing 7 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 7
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 7
9999 mem: storing 1030 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1030
9999 mem: location 1104 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 7
9999 mem: storing 8 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 8
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 8
9999 mem: storing 1032 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1032
9999 mem: location 1104 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 8
9999 mem: storing 9 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 9
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 9
9999 mem: storing 1034 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1034
9999 mem: location 1104 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 9
9999 mem: storing 10 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 10
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 10
9999 mem: storing 1036 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1036
9999 mem: location 1104 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 10
9999 mem: storing 11 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 11
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 11
9999 mem: storing 1038 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1038
9999 mem: location 1104 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 11
9999 mem: storing 12 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 12
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 12
9999 mem: storing 1040 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1040
9999 mem: location 1104 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 12
9999 mem: storing 13 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 13
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 13
9999 mem: storing 1042 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1042
9999 mem: location 1104 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 13
9999 mem: storing 14 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 14
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 14
9999 mem: storing 1044 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1044
9999 mem: location 1104 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 14
9999 mem: storing 15 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 15
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 15
9999 mem: storing 1046 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1046
9999 mem: location 1104 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 15
9999 mem: storing 16 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 16
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 16
9999 mem: storing 1048 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1048
9999 mem: location 1104 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 16
9999 mem: storing 17 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 17
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 17
9999 mem: storing 1050 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1050
9999 mem: location 1104 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 17
9999 mem: storing 18 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 18
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 18
9999 mem: storing 1052 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1052
9999 mem: location 1104 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 18
9999 mem: storing 19 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 19
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 19
9999 mem: storing 1054 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1054
9999 mem: location 1104 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 19
9999 mem: storing 20 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 20
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 20
9999 mem: storing 1056 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1056
9999 mem: location 1104 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 20
9999 mem: storing 21 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 21
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 21
9999 mem: storing 1058 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1058
9999 mem: location 1104 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 21
9999 mem: storing 22 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 22
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 22
9999 mem: storing 1060 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1060
9999 mem: location 1104 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 22
9999 mem: storing 23 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 23
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 23
9999 mem: storing 1062 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1062
9999 mem: location 1104 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 23
9999 mem: storing 24 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 24
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 24
9999 mem: storing 1064 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1064
9999 mem: location 1104 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 24
9999 mem: storing 25 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 25
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 25
9999 mem: storing 1066 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1066
9999 mem: location 1104 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 25
9999 mem: storing 26 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 26
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 26
9999 mem: storing 1068 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1068
9999 mem: location 1104 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 26
9999 mem: storing 27 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 27
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 27
9999 mem: storing 1070 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1070
9999 mem: location 1104 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 27
9999 mem: storing 28 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 28
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 28
9999 mem: storing 1072 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1072
9999 mem: location 1104 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 28
9999 mem: storing 29 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 29
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 29
9999 mem: storing 1074 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1074
9999 mem: location 1104 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 29
9999 mem: storing 30 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 30
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 30
9999 mem: storing 1076 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1076
9999 mem: location 1104 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 30
9999 mem: storing 31 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 31
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 31
9999 mem: storing 1078 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1078
9999 mem: location 1104 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 31
9999 mem: storing 32 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 32
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 32
9999 mem: storing 1080 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1080
9999 mem: location 1104 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 32
9999 mem: storing 33 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 33
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 33
9999 mem: storing 1082 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1082
9999 mem: location 1104 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 33
9999 mem: storing 34 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 34
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 34
9999 mem: storing 1084 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1084
9999 mem: location 1104 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 34
9999 mem: storing 35 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 35
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 35
9999 mem: storing 1086 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1086
9999 mem: location 1104 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 35
9999 mem: storing 36 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 36
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 36
9999 mem: storing 1088 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1088
9999 mem: location 1104 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 36
9999 mem: storing 37 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 37
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 37
9999 mem: storing 1090 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1090
9999 mem: location 1104 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 37
9999 mem: storing 38 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 38
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 38
9999 mem: storing 1092 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1092
9999 mem: location 1104 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 38
9999 mem: storing 39 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 39
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 39
9999 mem: storing 1094 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1094
9999 mem: location 1104 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 39
9999 mem: storing 40 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 40
9999 mem: location 1101 is 40
9999 mem: storing 1 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"axy\nbxy\ncxy\n\ndxy\nexy\nfxy\ngxy\n": "literal-string"}
9999 mem: new string alloc: 1105
9999 mem: storing 1105 in location 1
9999 mem: incrementing refcount of 1105: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9999 mem: location 1 is 1105
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1136
9999 mem: storing 11 in location 1137
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1105 in location 1139
9999 mem: incrementing refcount of 1105: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1140
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1141
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1142
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1142 is 4
9999 mem: storing 3 in location 1142
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1149
9999 mem: storing 1149 in location 1143
9999 mem: incrementing refcount of 1149: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1144
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1141 is 0
9999 mem: location 1144 is 1154
9999 mem: storing 0 in location 1154
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1144
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1142 is 3
9999 mem: location 1144 is 1155
9999 mem: storing 3 in location 1155
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1144
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1144 is 1157
9999 mem: storing 1 in location 1157
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1144
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1141 is 0
9999 mem: location 1144 is 1158
9999 mem: storing 0 in location 1158
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1145
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1162
9999 mem: storing 4 in location 1163
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1165
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1168
9999 mem: storing 1168 in location 1167
9999 mem: incrementing refcount of 1168: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1165 is 167
9999 mem: location 1166 is 0
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1167 is 1168
9999 mem: skipping refcount at 1168
9999 mem: storing 167 in location 1169
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1166 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1168
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1168
9999 mem: location 1145 is 1150
9999 mem: storing 1168 in location 1150
9999 mem: incrementing refcount of 1168: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1146
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1145 is 1150
9999 mem: location 1150 is 1168
9999 mem: location 1146 is 1151
9999 mem: storing 1168 in location 1151
9999 mem: incrementing refcount of 1168: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1147
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1145 is 1150
9999 mem: location 1150 is 1168
9999 mem: location 1147 is 1153
9999 mem: storing 1168 in location 1153
9999 mem: incrementing refcount of 1168: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1143 is 1149
9999 mem: location 1139 is 1105
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1172
9999 mem: storing 8 in location 1173
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1175
9999 mem: incrementing refcount of 1149: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1105 in location 1176
9999 mem: incrementing refcount of 1105: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1176 is 1105
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9999 mem: storing 29 in location 1177
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1177 is 29
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1178
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1179
9999 mem: incrementing refcount of 1168: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 0
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 0
9998 run: address to copy is 1107
9998 run: its type is character
9999 mem: location 1107 is 97
9999 mem: storing 97 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 97
9999 mem: location 1179 is 1168
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1182
9999 mem: storing 5 in location 1183
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1186
9999 mem: incrementing refcount of 1168: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1189
9999 mem: storing 1189 in location 1187
9999 mem: incrementing refcount of 1189: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 0
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1185 is 97
9999 mem: location 1187 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1190
9999 mem: storing 97 in location 1190
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1170 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 0
9999 mem: location 1171 is 0
9999 mem: location 1187 is 1189
9999 mem: location 1186 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy to is 1170
9999 mem: storing 1189 in location 1170
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 0
9999 mem: location 1192 is 0
9999 mem: location 1186 is 1168
9999 mem: location 1187 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1192
9999 mem: storing 1168 in location 1192
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 0
9999 mem: location 1192 is 1168
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1191
9999 mem: storing 0 in location 1191
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1168
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1168
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1193
9999 mem: storing 3 in location 1194
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1196
9999 mem: incrementing refcount of 1168: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1168
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1189
9999 mem: location 1171 is 0
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1170 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1168: 7 -> 6
9999 mem: storing 1189 in location 1179
9999 mem: incrementing refcount of 1189: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 0
9999 mem: storing 1 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 1
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 1
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1189
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1186
9999 mem: incrementing refcount of 1189: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1198
9999 mem: storing 1198 in location 1187
9999 mem: incrementing refcount of 1198: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1199
9999 mem: storing 120 in location 1199
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 0
9999 mem: location 1192 is 1168
9999 mem: location 1186 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 0
9999 mem: location 1192 is 1168
9999 mem: location 1187 is 1198
9999 mem: location 1186 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy to is 1191
9999 mem: storing 1198 in location 1191
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1186 is 1189
9999 mem: location 1187 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1201
9999 mem: storing 1189 in location 1201
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1189
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1200
9999 mem: storing 0 in location 1200
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1189
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1189
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 5 -> 4
9999 mem: storing 1198 in location 1179
9999 mem: incrementing refcount of 1198: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 1
9999 mem: storing 2 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 2
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 2
9998 run: address to copy is 1109
9998 run: its type is character
9999 mem: location 1109 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1186
9999 mem: incrementing refcount of 1198: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1202
9999 mem: storing 1202 in location 1187
9999 mem: incrementing refcount of 1202: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1203
9999 mem: storing 121 in location 1203
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1189
9999 mem: location 1186 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 0
9999 mem: location 1201 is 1189
9999 mem: location 1187 is 1202
9999 mem: location 1186 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy to is 1200
9999 mem: storing 1202 in location 1200
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1186 is 1198
9999 mem: location 1187 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1205
9999 mem: storing 1198 in location 1205
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1198
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1204
9999 mem: storing 0 in location 1204
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1198
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 5 -> 4
9999 mem: storing 1202 in location 1179
9999 mem: incrementing refcount of 1202: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 2
9999 mem: storing 3 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 3
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 3
9998 run: address to copy is 1110
9998 run: its type is character
9999 mem: location 1110 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1186
9999 mem: incrementing refcount of 1202: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1206
9999 mem: storing 1206 in location 1187
9999 mem: incrementing refcount of 1206: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1207
9999 mem: storing 10 in location 1207
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1198
9999 mem: location 1186 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 0
9999 mem: location 1205 is 1198
9999 mem: location 1187 is 1206
9999 mem: location 1186 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy to is 1204
9999 mem: storing 1206 in location 1204
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 0
9999 mem: location 1209 is 0
9999 mem: location 1186 is 1202
9999 mem: location 1187 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1209
9999 mem: storing 1202 in location 1209
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1208
9999 mem: storing 0 in location 1208
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1202
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 5 -> 4
9999 mem: storing 1206 in location 1179
9999 mem: incrementing refcount of 1206: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 3
9999 mem: storing 4 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 4
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 4
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 98
9999 mem: storing 98 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 98
9999 mem: location 1179 is 1206
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1186
9999 mem: incrementing refcount of 1206: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1210
9999 mem: storing 1210 in location 1187
9999 mem: incrementing refcount of 1210: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1185 is 98
9999 mem: location 1187 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy to is 1211
9999 mem: storing 98 in location 1211
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1186 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1202
9999 mem: location 1187 is 1210
9999 mem: location 1186 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy to is 1208
9999 mem: storing 1210 in location 1208
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1186 is 1206
9999 mem: location 1187 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy to is 1213
9999 mem: storing 1206 in location 1213
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1206
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy to is 1212
9999 mem: storing 0 in location 1212
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1206
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1206
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 5 -> 4
9999 mem: storing 1210 in location 1179
9999 mem: incrementing refcount of 1210: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 4
9999 mem: storing 5 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 5
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 5
9998 run: address to copy is 1112
9998 run: its type is character
9999 mem: location 1112 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1210
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1186
9999 mem: incrementing refcount of 1210: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1214
9999 mem: storing 1214 in location 1187
9999 mem: incrementing refcount of 1214: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy to is 1215
9999 mem: storing 120 in location 1215
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1206
9999 mem: location 1186 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1206
9999 mem: location 1187 is 1214
9999 mem: location 1186 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy to is 1212
9999 mem: storing 1214 in location 1212
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1186 is 1210
9999 mem: location 1187 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy to is 1217
9999 mem: storing 1210 in location 1217
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy to is 1216
9999 mem: storing 0 in location 1216
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1210
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1210
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 5 -> 4
9999 mem: storing 1214 in location 1179
9999 mem: incrementing refcount of 1214: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 5
9999 mem: storing 6 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 6
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 6
9998 run: address to copy is 1113
9998 run: its type is character
9999 mem: location 1113 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1214
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1186
9999 mem: incrementing refcount of 1214: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1218
9999 mem: storing 1218 in location 1187
9999 mem: incrementing refcount of 1218: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy to is 1219
9999 mem: storing 121 in location 1219
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1186 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1210
9999 mem: location 1187 is 1218
9999 mem: location 1186 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy to is 1216
9999 mem: storing 1218 in location 1216
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 0
9999 mem: location 1221 is 0
9999 mem: location 1186 is 1214
9999 mem: location 1187 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy to is 1221
9999 mem: storing 1214 in location 1221
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 0
9999 mem: location 1221 is 1214
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy to is 1220
9999 mem: storing 0 in location 1220
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1214
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1214
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1218
9999 mem: decrementing refcount of 1214: 5 -> 4
9999 mem: storing 1218 in location 1179
9999 mem: incrementing refcount of 1218: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 6
9999 mem: storing 7 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 7
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 7
9998 run: address to copy is 1114
9998 run: its type is character
9999 mem: location 1114 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1218
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1186
9999 mem: incrementing refcount of 1218: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1222
9999 mem: storing 1222 in location 1187
9999 mem: incrementing refcount of 1222: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy to is 1223
9999 mem: storing 10 in location 1223
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 0
9999 mem: location 1221 is 1214
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 0
9999 mem: location 1221 is 1214
9999 mem: location 1187 is 1222
9999 mem: location 1186 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy to is 1220
9999 mem: storing 1222 in location 1220
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1186 is 1218
9999 mem: location 1187 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy to is 1225
9999 mem: storing 1218 in location 1225
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 0
9999 mem: location 1225 is 1218
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy to is 1224
9999 mem: storing 0 in location 1224
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1218
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1218
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1218: 5 -> 4
9999 mem: storing 1222 in location 1179
9999 mem: incrementing refcount of 1222: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 7
9999 mem: storing 8 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 8
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 8
9998 run: address to copy is 1115
9998 run: its type is character
9999 mem: location 1115 is 99
9999 mem: storing 99 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 99
9999 mem: location 1179 is 1222
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1186
9999 mem: incrementing refcount of 1222: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1226
9999 mem: storing 1226 in location 1187
9999 mem: incrementing refcount of 1226: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1185 is 99
9999 mem: location 1187 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy to is 1227
9999 mem: storing 99 in location 1227
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 0
9999 mem: location 1225 is 1218
9999 mem: location 1186 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 0
9999 mem: storing 0 in location 1188
9990 schedule: insert_2/insert-text/new-editor/scenario_editor-can-scroll-up-past-empty-lines
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 0
9999 mem: location 1225 is 1218
9999 mem: location 1187 is 1226
9999 mem: location 1186 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy to is 1224
9999 mem: storing 1226 in location 1224
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1186 is 1222
9999 mem: location 1187 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy to is 1229
9999 mem: storing 1222 in location 1229
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy to is 1228
9999 mem: storing 0 in location 1228
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1222
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1222
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 5 -> 4
9999 mem: storing 1226 in location 1179
9999 mem: incrementing refcount of 1226: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 8
9999 mem: storing 9 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 9
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 9
9998 run: address to copy is 1116
9998 run: its type is character
9999 mem: location 1116 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1226
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1186
9999 mem: incrementing refcount of 1226: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1230
9999 mem: storing 1230 in location 1187
9999 mem: incrementing refcount of 1230: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy to is 1231
9999 mem: storing 120 in location 1231
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1186 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1187 is 1230
9999 mem: location 1186 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy to is 1228
9999 mem: storing 1230 in location 1228
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 0
9999 mem: location 1233 is 0
9999 mem: location 1186 is 1226
9999 mem: location 1187 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy to is 1233
9999 mem: storing 1226 in location 1233
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 0
9999 mem: location 1233 is 1226
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy to is 1232
9999 mem: storing 0 in location 1232
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1226
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1226
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1197
9999 mem: incrementing refcount of 1230: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 5 -> 4
9999 mem: storing 1230 in location 1179
9999 mem: incrementing refcount of 1230: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 9
9999 mem: storing 10 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 10
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 10
9998 run: address to copy is 1117
9998 run: its type is character
9999 mem: location 1117 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1230
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1186
9999 mem: incrementing refcount of 1230: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1234
9999 mem: storing 1234 in location 1187
9999 mem: incrementing refcount of 1234: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1237 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy to is 1235
9999 mem: storing 121 in location 1235
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 0
9999 mem: location 1233 is 1226
9999 mem: location 1186 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 0
9999 mem: location 1233 is 1226
9999 mem: location 1187 is 1234
9999 mem: location 1186 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy to is 1232
9999 mem: storing 1234 in location 1232
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 0
9999 mem: location 1237 is 0
9999 mem: location 1186 is 1230
9999 mem: location 1187 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy to is 1237
9999 mem: storing 1230 in location 1237
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 0
9999 mem: location 1237 is 1230
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy to is 1236
9999 mem: storing 0 in location 1236
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1230
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1230
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1196
9999 mem: incrementing refcount of 1230: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1230
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1197
9999 mem: incrementing refcount of 1234: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 5 -> 4
9999 mem: storing 1234 in location 1179
9999 mem: incrementing refcount of 1234: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 10
9999 mem: storing 11 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 11
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 11
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1234
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1186
9999 mem: incrementing refcount of 1234: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1238
9999 mem: storing 1238 in location 1187
9999 mem: incrementing refcount of 1238: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1241 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy to is 1239
9999 mem: storing 10 in location 1239
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 0
9999 mem: location 1237 is 1230
9999 mem: location 1186 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 0
9999 mem: location 1237 is 1230
9999 mem: location 1187 is 1238
9999 mem: location 1186 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy to is 1236
9999 mem: storing 1238 in location 1236
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 0
9999 mem: location 1241 is 0
9999 mem: location 1186 is 1234
9999 mem: location 1187 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy to is 1241
9999 mem: storing 1234 in location 1241
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 0
9999 mem: location 1241 is 1234
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy to is 1240
9999 mem: storing 0 in location 1240
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1234
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1234
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1196
9999 mem: incrementing refcount of 1234: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1234
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1197
9999 mem: incrementing refcount of 1238: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 5 -> 4
9999 mem: storing 1238 in location 1179
9999 mem: incrementing refcount of 1238: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 11
9999 mem: storing 12 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 12
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 12
9998 run: address to copy is 1119
9998 run: its type is character
9999 mem: location 1119 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1238
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1186
9999 mem: incrementing refcount of 1238: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1242
9999 mem: storing 1242 in location 1187
9999 mem: incrementing refcount of 1242: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy to is 1243
9999 mem: storing 10 in location 1243
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 0
9999 mem: location 1241 is 1234
9999 mem: location 1186 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 0
9999 mem: location 1241 is 1234
9999 mem: location 1187 is 1242
9999 mem: location 1186 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy to is 1240
9999 mem: storing 1242 in location 1240
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 0
9999 mem: location 1245 is 0
9999 mem: location 1186 is 1238
9999 mem: location 1187 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy to is 1245
9999 mem: storing 1238 in location 1245
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 0
9999 mem: location 1245 is 1238
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy to is 1244
9999 mem: storing 0 in location 1244
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1238
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1238
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1196
9999 mem: incrementing refcount of 1238: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1238
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1242
9999 mem: storing 1242 in location 1197
9999 mem: incrementing refcount of 1242: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1242
9999 mem: decrementing refcount of 1238: 5 -> 4
9999 mem: storing 1242 in location 1179
9999 mem: incrementing refcount of 1242: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 12
9999 mem: storing 13 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 13
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 13
9998 run: address to copy is 1120
9998 run: its type is character
9999 mem: location 1120 is 100
9999 mem: storing 100 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 100
9999 mem: location 1179 is 1242
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1186
9999 mem: incrementing refcount of 1242: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1246
9999 mem: storing 1246 in location 1187
9999 mem: incrementing refcount of 1246: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 0
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1185 is 100
9999 mem: location 1187 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy to is 1247
9999 mem: storing 100 in location 1247
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 0
9999 mem: location 1245 is 1238
9999 mem: location 1186 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 0
9999 mem: location 1245 is 1238
9999 mem: location 1187 is 1246
9999 mem: location 1186 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy to is 1244
9999 mem: storing 1246 in location 1244
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 0
9999 mem: location 1249 is 0
9999 mem: location 1186 is 1242
9999 mem: location 1187 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy to is 1249
9999 mem: storing 1242 in location 1249
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 0
9999 mem: location 1249 is 1242
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy to is 1248
9999 mem: storing 0 in location 1248
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1242
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1242
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1196
9999 mem: incrementing refcount of 1242: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1242
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1197
9999 mem: incrementing refcount of 1246: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 5 -> 4
9999 mem: storing 1246 in location 1179
9999 mem: incrementing refcount of 1246: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 13
9999 mem: storing 14 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 14
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 14
9998 run: address to copy is 1121
9998 run: its type is character
9999 mem: location 1121 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1246
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1186
9999 mem: incrementing refcount of 1246: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1250
9999 mem: storing 1250 in location 1187
9999 mem: incrementing refcount of 1250: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy to is 1251
9999 mem: storing 120 in location 1251
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 0
9999 mem: location 1249 is 1242
9999 mem: location 1186 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 0
9999 mem: location 1249 is 1242
9999 mem: location 1187 is 1250
9999 mem: location 1186 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy to is 1248
9999 mem: storing 1250 in location 1248
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: location 1186 is 1246
9999 mem: location 1187 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy to is 1253
9999 mem: storing 1246 in location 1253
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 0
9999 mem: location 1253 is 1246
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy to is 1252
9999 mem: storing 0 in location 1252
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1246
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1246
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1196
9999 mem: incrementing refcount of 1246: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1246
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1196 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1197
9999 mem: incrementing refcount of 1250: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 5 -> 4
9999 mem: storing 1250 in location 1179
9999 mem: incrementing refcount of 1250: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 14
9999 mem: storing 15 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 15
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 15
9998 run: address to copy is 1122
9998 run: its type is character
9999 mem: location 1122 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1250
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1186
9999 mem: incrementing refcount of 1250: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1254
9999 mem: storing 1254 in location 1187
9999 mem: incrementing refcount of 1254: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy to is 1255
9999 mem: storing 121 in location 1255
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 0
9999 mem: location 1253 is 1246
9999 mem: location 1186 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 0
9999 mem: location 1253 is 1246
9999 mem: location 1187 is 1254
9999 mem: location 1186 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy to is 1252
9999 mem: storing 1254 in location 1252
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 0
9999 mem: location 1257 is 0
9999 mem: location 1186 is 1250
9999 mem: location 1187 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy to is 1257
9999 mem: storing 1250 in location 1257
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1250
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy to is 1256
9999 mem: storing 0 in location 1256
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1250
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1250
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1196
9999 mem: incrementing refcount of 1250: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1250
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1196 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1197
9999 mem: incrementing refcount of 1254: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 5 -> 4
9999 mem: storing 1254 in location 1179
9999 mem: incrementing refcount of 1254: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 15
9999 mem: storing 16 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 16
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 16
9998 run: address to copy is 1123
9998 run: its type is character
9999 mem: location 1123 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1254
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1186
9999 mem: incrementing refcount of 1254: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1258
9999 mem: storing 1258 in location 1187
9999 mem: incrementing refcount of 1258: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy to is 1259
9999 mem: storing 10 in location 1259
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1250
9999 mem: location 1186 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1250
9999 mem: location 1187 is 1258
9999 mem: location 1186 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy to is 1256
9999 mem: storing 1258 in location 1256
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1186 is 1254
9999 mem: location 1187 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy to is 1261
9999 mem: storing 1254 in location 1261
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1254
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy to is 1260
9999 mem: storing 0 in location 1260
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1254
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1254
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1196
9999 mem: incrementing refcount of 1254: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1254
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1196 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1197
9999 mem: incrementing refcount of 1258: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 5 -> 4
9999 mem: storing 1258 in location 1179
9999 mem: incrementing refcount of 1258: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 16
9999 mem: storing 17 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 17
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 17
9998 run: address to copy is 1124
9998 run: its type is character
9999 mem: location 1124 is 101
9999 mem: storing 101 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 101
9999 mem: location 1179 is 1258
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1186
9999 mem: incrementing refcount of 1258: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1262
9999 mem: storing 1262 in location 1187
9999 mem: incrementing refcount of 1262: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1185 is 101
9999 mem: location 1187 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy to is 1263
9999 mem: storing 101 in location 1263
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1254
9999 mem: location 1186 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 0
9999 mem: location 1261 is 1254
9999 mem: location 1187 is 1262
9999 mem: location 1186 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy to is 1260
9999 mem: storing 1262 in location 1260
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1186 is 1258
9999 mem: location 1187 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy to is 1265
9999 mem: storing 1258 in location 1265
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1258
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy to is 1264
9999 mem: storing 0 in location 1264
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1258
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1258
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1196
9999 mem: incrementing refcount of 1258: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1258
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1196 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1262
9999 mem: storing 1262 in location 1197
9999 mem: incrementing refcount of 1262: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1262
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1262
9999 mem: decrementing refcount of 1258: 5 -> 4
9999 mem: storing 1262 in location 1179
9999 mem: incrementing refcount of 1262: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 17
9999 mem: storing 18 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 18
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 18
9998 run: address to copy is 1125
9998 run: its type is character
9999 mem: location 1125 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1262
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1262 in location 1186
9999 mem: incrementing refcount of 1262: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1266
9999 mem: storing 1266 in location 1187
9999 mem: incrementing refcount of 1266: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy to is 1267
9999 mem: storing 120 in location 1267
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1258
9999 mem: location 1186 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy is 1264
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1264 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 0
9999 mem: location 1265 is 1258
9999 mem: location 1187 is 1266
9999 mem: location 1186 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy to is 1264
9999 mem: storing 1266 in location 1264
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 0
9999 mem: location 1269 is 0
9999 mem: location 1186 is 1262
9999 mem: location 1187 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy to is 1269
9999 mem: storing 1262 in location 1269
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1262
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy to is 1268
9999 mem: storing 0 in location 1268
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1262
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1262
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1262 in location 1196
9999 mem: incrementing refcount of 1262: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1262
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 1266
9999 mem: location 1265 is 1258
9999 mem: location 1196 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy is 1264
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1264 is 1266
9999 mem: storing 1266 in location 1197
9999 mem: incrementing refcount of 1266: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1266
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1266
9999 mem: decrementing refcount of 1262: 5 -> 4
9999 mem: storing 1266 in location 1179
9999 mem: incrementing refcount of 1266: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 18
9999 mem: storing 19 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 19
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 19
9998 run: address to copy is 1126
9998 run: its type is character
9999 mem: location 1126 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1266
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1186
9999 mem: incrementing refcount of 1266: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1270
9999 mem: storing 1270 in location 1187
9999 mem: incrementing refcount of 1270: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1271
9999 mem: storing 121 in location 1271
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1262
9999 mem: location 1186 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1262
9999 mem: location 1187 is 1270
9999 mem: location 1186 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy to is 1268
9999 mem: storing 1270 in location 1268
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 0
9999 mem: location 1273 is 0
9999 mem: location 1186 is 1266
9999 mem: location 1187 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1273
9999 mem: storing 1266 in location 1273
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 0
9999 mem: location 1273 is 1266
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1272
9999 mem: storing 0 in location 1272
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1266
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1266
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1196
9999 mem: incrementing refcount of 1266: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1266
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 1270
9999 mem: location 1269 is 1262
9999 mem: location 1196 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1270
9999 mem: storing 1270 in location 1197
9999 mem: incrementing refcount of 1270: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1270
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1270
9999 mem: decrementing refcount of 1266: 5 -> 4
9999 mem: storing 1270 in location 1179
9999 mem: incrementing refcount of 1270: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 19
9999 mem: storing 20 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 20
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 20
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1186
9999 mem: incrementing refcount of 1270: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1274
9999 mem: storing 1274 in location 1187
9999 mem: incrementing refcount of 1274: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy to is 1275
9999 mem: storing 10 in location 1275
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 0
9999 mem: location 1273 is 1266
9999 mem: location 1186 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 0
9999 mem: location 1273 is 1266
9999 mem: location 1187 is 1274
9999 mem: location 1186 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy to is 1272
9999 mem: storing 1274 in location 1272
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1186 is 1270
9999 mem: location 1187 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy to is 1277
9999 mem: storing 1270 in location 1277
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1270
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy to is 1276
9999 mem: storing 0 in location 1276
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1270
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1270
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1196
9999 mem: incrementing refcount of 1270: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1270
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 1274
9999 mem: location 1273 is 1266
9999 mem: location 1196 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1272 is 1274
9999 mem: storing 1274 in location 1197
9999 mem: incrementing refcount of 1274: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1274
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1274
9999 mem: decrementing refcount of 1270: 5 -> 4
9999 mem: storing 1274 in location 1179
9999 mem: incrementing refcount of 1274: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 20
9999 mem: storing 21 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 21
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 21
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 102
9999 mem: storing 102 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 102
9999 mem: location 1179 is 1274
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1274 in location 1186
9999 mem: incrementing refcount of 1274: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1278
9999 mem: storing 1278 in location 1187
9999 mem: incrementing refcount of 1278: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1185 is 102
9999 mem: location 1187 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy to is 1279
9999 mem: storing 102 in location 1279
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1270
9999 mem: location 1186 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy is 1276
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1276 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1270
9999 mem: location 1187 is 1278
9999 mem: location 1186 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy to is 1276
9999 mem: storing 1278 in location 1276
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1186 is 1274
9999 mem: location 1187 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy to is 1281
9999 mem: storing 1274 in location 1281
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1274
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy to is 1280
9999 mem: storing 0 in location 1280
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1274
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1274
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1274 in location 1196
9999 mem: incrementing refcount of 1274: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1274
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 1278
9999 mem: location 1277 is 1270
9999 mem: location 1196 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy is 1276
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1276 is 1278
9999 mem: storing 1278 in location 1197
9999 mem: incrementing refcount of 1278: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1278
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1278
9999 mem: decrementing refcount of 1274: 5 -> 4
9999 mem: storing 1278 in location 1179
9999 mem: incrementing refcount of 1278: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 21
9999 mem: storing 22 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 22
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 22
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1278
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1278 in location 1186
9999 mem: incrementing refcount of 1278: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1282
9999 mem: storing 1282 in location 1187
9999 mem: incrementing refcount of 1282: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy to is 1283
9999 mem: storing 120 in location 1283
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1274
9999 mem: location 1186 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy is 1280
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1280 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 0
9999 mem: location 1281 is 1274
9999 mem: location 1187 is 1282
9999 mem: location 1186 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy to is 1280
9999 mem: storing 1282 in location 1280
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1186 is 1278
9999 mem: location 1187 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy to is 1285
9999 mem: storing 1278 in location 1285
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1278
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy to is 1284
9999 mem: storing 0 in location 1284
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1278
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1278
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1278 in location 1196
9999 mem: incrementing refcount of 1278: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1278
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 1282
9999 mem: location 1281 is 1274
9999 mem: location 1196 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy is 1280
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1280 is 1282
9999 mem: storing 1282 in location 1197
9999 mem: incrementing refcount of 1282: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1282
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1282
9999 mem: decrementing refcount of 1278: 5 -> 4
9999 mem: storing 1282 in location 1179
9999 mem: incrementing refcount of 1282: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 22
9999 mem: storing 23 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 23
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 23
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1282
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1282 in location 1186
9999 mem: incrementing refcount of 1282: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1286
9999 mem: storing 1286 in location 1187
9999 mem: incrementing refcount of 1286: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1287
9999 mem: storing 121 in location 1287
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1278
9999 mem: location 1186 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy is 1284
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1284 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 0
9999 mem: location 1285 is 1278
9999 mem: location 1187 is 1286
9999 mem: location 1186 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy to is 1284
9999 mem: storing 1286 in location 1284
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 0
9999 mem: location 1289 is 0
9999 mem: location 1186 is 1282
9999 mem: location 1187 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1289
9999 mem: storing 1282 in location 1289
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1282
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1288
9999 mem: storing 0 in location 1288
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1282
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1282
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1282 in location 1196
9999 mem: incrementing refcount of 1282: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1282
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 1286
9999 mem: location 1285 is 1278
9999 mem: location 1196 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy is 1284
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1284 is 1286
9999 mem: storing 1286 in location 1197
9999 mem: incrementing refcount of 1286: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1282: 5 -> 4
9999 mem: storing 1286 in location 1179
9999 mem: incrementing refcount of 1286: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 23
9999 mem: storing 24 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 24
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 24
9998 run: address to copy is 1131
9998 run: its type is character
9999 mem: location 1131 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1286
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1186
9999 mem: incrementing refcount of 1286: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1290
9999 mem: storing 1290 in location 1187
9999 mem: incrementing refcount of 1290: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1291
9999 mem: storing 10 in location 1291
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1282
9999 mem: location 1186 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 0
9999 mem: location 1289 is 1282
9999 mem: location 1187 is 1290
9999 mem: location 1186 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy to is 1288
9999 mem: storing 1290 in location 1288
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 0
9999 mem: location 1186 is 1286
9999 mem: location 1187 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1293
9999 mem: storing 1286 in location 1293
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1286
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1292
9999 mem: storing 0 in location 1292
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1286
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1286
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1196
9999 mem: incrementing refcount of 1286: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1286
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1282
9999 mem: location 1196 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1197
9999 mem: incrementing refcount of 1290: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 5 -> 4
9999 mem: storing 1290 in location 1179
9999 mem: incrementing refcount of 1290: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 24
9999 mem: storing 25 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 25
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 25
9998 run: address to copy is 1132
9998 run: its type is character
9999 mem: location 1132 is 103
9999 mem: storing 103 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 103
9999 mem: location 1179 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1186
9999 mem: incrementing refcount of 1290: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1294
9999 mem: storing 1294 in location 1187
9999 mem: incrementing refcount of 1294: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1185 is 103
9999 mem: location 1187 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1295
9999 mem: storing 103 in location 1295
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1286
9999 mem: location 1186 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 0
9999 mem: location 1293 is 1286
9999 mem: location 1187 is 1294
9999 mem: location 1186 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy to is 1292
9999 mem: storing 1294 in location 1292
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 103
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1186 is 1290
9999 mem: location 1187 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1297
9999 mem: storing 1290 in location 1297
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 103
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1290
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1296
9999 mem: storing 0 in location 1296
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1290
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1290
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1196
9999 mem: incrementing refcount of 1290: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1290
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1196 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1197
9999 mem: incrementing refcount of 1294: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 5 -> 4
9999 mem: storing 1294 in location 1179
9999 mem: incrementing refcount of 1294: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 25
9999 mem: storing 26 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 26
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 26
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 120
9999 mem: storing 120 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 120
9999 mem: location 1179 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1186
9999 mem: incrementing refcount of 1294: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1298
9999 mem: storing 1298 in location 1187
9999 mem: incrementing refcount of 1298: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1185 is 120
9999 mem: location 1187 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1299
9999 mem: storing 120 in location 1299
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 103
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1290
9999 mem: location 1186 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 103
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1290
9999 mem: location 1187 is 1298
9999 mem: location 1186 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy to is 1296
9999 mem: storing 1298 in location 1296
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 120
9999 mem: location 1300 is 0
9999 mem: location 1301 is 0
9999 mem: location 1186 is 1294
9999 mem: location 1187 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1301
9999 mem: storing 1294 in location 1301
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 120
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1294
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1300
9999 mem: storing 0 in location 1300
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1294
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1294
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1294 in location 1196
9999 mem: incrementing refcount of 1294: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1294
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1294
9999 mem: skipping refcount at 1294
9999 mem: location 1295 is 103
9999 mem: location 1296 is 1298
9999 mem: location 1297 is 1290
9999 mem: location 1196 is 1294
9999 mem: skipping refcount at 1294
9998 run: address to copy is 1296
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1296 is 1298
9999 mem: storing 1298 in location 1197
9999 mem: incrementing refcount of 1298: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1298
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1298
9999 mem: decrementing refcount of 1294: 5 -> 4
9999 mem: storing 1298 in location 1179
9999 mem: incrementing refcount of 1298: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 26
9999 mem: storing 27 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 27
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 27
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 121
9999 mem: storing 121 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 121
9999 mem: location 1179 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1186
9999 mem: incrementing refcount of 1298: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1302
9999 mem: storing 1302 in location 1187
9999 mem: incrementing refcount of 1302: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1185 is 121
9999 mem: location 1187 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1303
9999 mem: storing 121 in location 1303
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 120
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1294
9999 mem: location 1186 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 120
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1294
9999 mem: location 1187 is 1302
9999 mem: location 1186 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy to is 1300
9999 mem: storing 1302 in location 1300
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 121
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1186 is 1298
9999 mem: location 1187 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1305
9999 mem: storing 1298 in location 1305
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 121
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1298
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1304
9999 mem: storing 0 in location 1304
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1298
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1298
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1298 in location 1196
9999 mem: incrementing refcount of 1298: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1298
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1298
9999 mem: skipping refcount at 1298
9999 mem: location 1299 is 120
9999 mem: location 1300 is 1302
9999 mem: location 1301 is 1294
9999 mem: location 1196 is 1298
9999 mem: skipping refcount at 1298
9998 run: address to copy is 1300
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1300 is 1302
9999 mem: storing 1302 in location 1197
9999 mem: incrementing refcount of 1302: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1302
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1302
9999 mem: decrementing refcount of 1298: 5 -> 4
9999 mem: storing 1302 in location 1179
9999 mem: incrementing refcount of 1302: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 27
9999 mem: storing 28 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 28
9999 mem: location 1177 is 29
9999 mem: storing 0 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1176 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1178 is 28
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 10
9999 mem: storing 10 in location 1181
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 10
9999 mem: location 1179 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1185
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1186
9999 mem: incrementing refcount of 1302: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1306
9999 mem: storing 1306 in location 1187
9999 mem: incrementing refcount of 1306: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1187 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1185 is 10
9999 mem: location 1187 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1307
9999 mem: storing 10 in location 1307
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1186 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 121
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1298
9999 mem: location 1186 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 0
9999 mem: storing 0 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 121
9999 mem: location 1304 is 0
9999 mem: location 1305 is 1298
9999 mem: location 1187 is 1306
9999 mem: location 1186 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy to is 1304
9999 mem: storing 1306 in location 1304
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 10
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: location 1186 is 1302
9999 mem: location 1187 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1309
9999 mem: storing 1302 in location 1309
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1187 is 1306
9999 mem: skipping refcount at 1306
9999 mem: location 1307 is 10
9999 mem: location 1308 is 0
9999 mem: location 1309 is 1302
9999 mem: location 1188 is 0
9999 mem: location 1187 is 1306
9999 mem: skipping refcount at 1306
9998 run: address to copy to is 1308
9999 mem: storing 0 in location 1308
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1188 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1186 is 1302
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1179 is 1302
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1302 in location 1196
9999 mem: incrementing refcount of 1302: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1302
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1302
9999 mem: skipping refcount at 1302
9999 mem: location 1303 is 121
9999 mem: location 1304 is 1306
9999 mem: location 1305 is 1298
9999 mem: location 1196 is 1302
9999 mem: skipping refcount at 1302
9998 run: address to copy is 1304
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1304 is 1306
9999 mem: storing 1306 in location 1197
9999 mem: incrementing refcount of 1306: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1306
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1306
9999 mem: decrementing refcount of 1302: 5 -> 4
9999 mem: storing 1306 in location 1179
9999 mem: incrementing refcount of 1306: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1178 is 28
9999 mem: storing 29 in location 1178
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1178 is 29
9999 mem: location 1177 is 29
9999 mem: storing 1 in location 1180
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1175 is 1149
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 2 -> 1
9999 mem: storing 1149 in location 1143
9999 mem: incrementing refcount of 1149: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1147
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1145 is 1150
9999 mem: location 1150 is 1168
9999 mem: location 1147 is 1153
9999 mem: decrementing refcount of 1168: 6 -> 5
9999 mem: storing 1168 in location 1153
9999 mem: incrementing refcount of 1168: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1140 is 1008
9999 mem: location 1143 is 1149
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1310
9999 mem: storing 28 in location 1311
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1314
9999 mem: incrementing refcount of 1149: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1314 is 1149
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1315
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1313 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1197
 105 run: return {height: "number"}
9999 mem: location 1197 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1316
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1317
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1318
9999 mem: incrementing refcount of 1168: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1168
9999 mem: storing 1168 in location 1319
9999 mem: incrementing refcount of 1168: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1168
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1196
9999 mem: incrementing refcount of 1168: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1168
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1189
9999 mem: location 1171 is 0
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1170 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 4 -> 5
9990 schedule: next_2/render/new-editor/scenario_editor-can-scroll-up-past-empty-lines
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1168: 9 -> 8
9999 mem: storing 1189 in location 1318
9999 mem: incrementing refcount of 1189: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1320
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1321
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1323
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1324
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1189
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1328
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1168
9999 mem: location 1325 is 1153
9999 mem: decrementing refcount of 1168: 8 -> 7
9999 mem: storing 1168 in location 1153
9999 mem: incrementing refcount of 1168: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1318 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is "character"
9999 mem: location 1190 is 97
9999 mem: storing 97 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1340
9999 mem: storing 10 in location 1341
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 97
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 97
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 97
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 97
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1352
9999 mem: storing 25 in location 1353
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 97
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 97
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 97
9999 mem: location 1375 is 1036
9999 mem: storing 97 in location 1036
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1037
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1189
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 7 -> 6
9999 mem: storing 1198 in location 1318
9999 mem: incrementing refcount of 1198: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1168
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1196
9999 mem: incrementing refcount of 1168: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1168
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9999 mem: location 1169 is 167
9999 mem: location 1170 is 1189
9999 mem: location 1171 is 0
9999 mem: location 1196 is 1168
9999 mem: skipping refcount at 1168
9998 run: address to copy is 1170
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1170 is 1189
9999 mem: storing 1189 in location 1197
9999 mem: incrementing refcount of 1189: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1189
9999 mem: decrementing refcount of 1168: 9 -> 8
9999 mem: storing 1189 in location 1319
9999 mem: incrementing refcount of 1189: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1198
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1318 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 120
9999 mem: storing 120 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1038
9999 mem: storing 120 in location 1038
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1039
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 7 -> 6
9999 mem: storing 1202 in location 1318
9999 mem: incrementing refcount of 1202: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1189
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1196
9999 mem: incrementing refcount of 1189: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1189
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9999 mem: location 1190 is 97
9999 mem: location 1191 is 1198
9999 mem: location 1192 is 1168
9999 mem: location 1196 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1191
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1191 is 1198
9999 mem: storing 1198 in location 1197
9999 mem: incrementing refcount of 1198: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1189: 9 -> 8
9999 mem: storing 1198 in location 1319
9999 mem: incrementing refcount of 1198: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1202
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 2
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1318 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is "character"
9999 mem: location 1203 is 121
9999 mem: storing 121 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 121
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 121
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1040
9999 mem: storing 121 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 7 -> 6
9999 mem: storing 1206 in location 1318
9999 mem: incrementing refcount of 1206: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1198
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1196
9999 mem: incrementing refcount of 1198: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1198
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 120
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1189
9999 mem: location 1196 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1197
9999 mem: incrementing refcount of 1202: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1202
9999 mem: decrementing refcount of 1198: 9 -> 8
9999 mem: storing 1202 in location 1319
9999 mem: incrementing refcount of 1202: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1206
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1318 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is "character"
9999 mem: location 1207 is 10
9999 mem: storing 10 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1331
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1375
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1376
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 1
9999 mem: storing 2 in location 1321
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 2
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 12 -> 13
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1206
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 7 -> 6
9999 mem: storing 1210 in location 1318
9999 mem: incrementing refcount of 1210: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1202
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1196
9999 mem: incrementing refcount of 1202: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1202
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9999 mem: location 1203 is 121
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1196 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1204
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1197
9999 mem: incrementing refcount of 1206: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1206
9999 mem: decrementing refcount of 1202: 9 -> 8
9999 mem: storing 1206 in location 1319
9999 mem: incrementing refcount of 1206: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1210
9998 run: jump-unless fell through
9990 schedule: render/new-editor/scenario_editor-can-scroll-up-past-empty-lines
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1318 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is "character"
9999 mem: location 1211 is 98
9999 mem: storing 98 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 98
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 98
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 98
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 98
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 98
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 98
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 98
9999 mem: location 1375 is 1056
9999 mem: storing 98 in location 1056
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 98
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1057
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1210
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 7 -> 6
9999 mem: storing 1214 in location 1318
9999 mem: incrementing refcount of 1214: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1206
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1196
9999 mem: incrementing refcount of 1206: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1206
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9999 mem: location 1207 is 10
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1196 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1208
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1197
9999 mem: incrementing refcount of 1210: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1210
9999 mem: decrementing refcount of 1206: 9 -> 8
9999 mem: storing 1210 in location 1319
9999 mem: incrementing refcount of 1210: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1214
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1318 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is "character"
9999 mem: location 1215 is 120
9999 mem: storing 120 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1058
9999 mem: storing 120 in location 1058
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1059
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1214
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1218
9999 mem: decrementing refcount of 1214: 7 -> 6
9999 mem: storing 1218 in location 1318
9999 mem: incrementing refcount of 1218: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1210
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1196
9999 mem: incrementing refcount of 1210: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1210
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1196 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1212
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1197
9999 mem: incrementing refcount of 1214: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1214
9999 mem: decrementing refcount of 1210: 9 -> 8
9999 mem: storing 1214 in location 1319
9999 mem: incrementing refcount of 1214: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1218
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1318 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1219
9998 run: its type is "character"
9999 mem: location 1219 is 121
9999 mem: storing 121 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 121
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 121
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1060
9999 mem: storing 121 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 121
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1061
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1218
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1218: 7 -> 6
9999 mem: storing 1222 in location 1318
9999 mem: incrementing refcount of 1222: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1214
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1196
9999 mem: incrementing refcount of 1214: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1214
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9999 mem: location 1215 is 120
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1196 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1216
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1197
9999 mem: incrementing refcount of 1218: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1218
9999 mem: decrementing refcount of 1214: 9 -> 8
9999 mem: storing 1218 in location 1319
9999 mem: incrementing refcount of 1218: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1222
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1318 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is "character"
9999 mem: location 1223 is 10
9999 mem: storing 10 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1375
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1062
9999 mem: storing 32 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1376
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1063
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 2
9999 mem: storing 3 in location 1321
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 3
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1222
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 7 -> 6
9999 mem: storing 1226 in location 1318
9999 mem: incrementing refcount of 1226: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1218
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1196
9999 mem: incrementing refcount of 1218: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1218
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9999 mem: location 1219 is 121
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1196 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1220
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1218: 9 -> 8
9999 mem: storing 1222 in location 1319
9999 mem: incrementing refcount of 1222: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1226
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1318 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is "character"
9999 mem: location 1227 is 99
9999 mem: storing 99 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
9990 schedule: render/new-editor/scenario_editor-can-scroll-up-past-empty-lines
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 99
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 99
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 99
9999 mem: location 1375 is 1076
9999 mem: storing 99 in location 1076
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 99
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1077
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1226
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1197
9999 mem: incrementing refcount of 1230: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 7 -> 6
9999 mem: storing 1230 in location 1318
9999 mem: incrementing refcount of 1230: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1222
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 9 -> 8
9999 mem: storing 1226 in location 1319
9999 mem: incrementing refcount of 1226: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1230
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1318 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1231
9998 run: its type is "character"
9999 mem: location 1231 is 120
9999 mem: storing 120 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1078
9999 mem: storing 120 in location 1078
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1079
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1230
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1196
9999 mem: incrementing refcount of 1230: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1230
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1197
9999 mem: incrementing refcount of 1234: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 7 -> 6
9999 mem: storing 1234 in location 1318
9999 mem: incrementing refcount of 1234: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1226
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1197
9999 mem: incrementing refcount of 1230: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 9 -> 8
9999 mem: storing 1230 in location 1319
9999 mem: incrementing refcount of 1230: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1234
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1318 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1235
9998 run: its type is "character"
9999 mem: location 1235 is 121
9999 mem: storing 121 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 121
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 121
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1375
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1080
9999 mem: storing 121 in location 1080
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1376
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1081
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1234
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1196
9999 mem: incrementing refcount of 1234: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1234
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1197
9999 mem: incrementing refcount of 1238: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 7 -> 6
9999 mem: storing 1238 in location 1318
9999 mem: incrementing refcount of 1238: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1230
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1196
9999 mem: incrementing refcount of 1230: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1230
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1197
9999 mem: incrementing refcount of 1234: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 9 -> 8
9999 mem: storing 1234 in location 1319
9999 mem: incrementing refcount of 1234: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1238
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1318 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1239
9998 run: its type is "character"
9999 mem: location 1239 is 10
9999 mem: storing 10 in location 1329
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 23 -> 24
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 13 -> 14
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1375
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1376
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 3
9999 mem: storing 4 in location 1321
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 24 -> 25
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1238
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1196
9999 mem: incrementing refcount of 1238: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1238
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1242
9999 mem: storing 1242 in location 1197
9999 mem: incrementing refcount of 1242: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1242
9999 mem: decrementing refcount of 1238: 7 -> 6
9999 mem: storing 1242 in location 1318
9999 mem: incrementing refcount of 1242: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1234
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1196
9999 mem: incrementing refcount of 1234: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1234
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1197
9999 mem: incrementing refcount of 1238: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 9 -> 8
9999 mem: storing 1238 in location 1319
9999 mem: incrementing refcount of 1238: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1242
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1316 is 4
9999 mem: storing 1 in location 1326
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1334
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1242
9999 mem: location 1334 is 1152
9999 mem: storing 1242 in location 1152
9999 mem: incrementing refcount of 1242: 6 -> 7
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1335
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1327 is 0
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1336
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1337
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 0 in location 1338
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1339
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1339 is 1156
9999 mem: storing 4 in location 1156
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 mem: location 1313 is 1008
9999 mem: location 1314 is 1149
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1149
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1140
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: decrementing refcount of 1149: 3 -> 2
9999 mem: storing 1149 in location 1143
9999 mem: incrementing refcount of 1149: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1143 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1148
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1148 is 1159
9999 mem: storing 1 in location 1159
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1143 is 1149
9999 mem: location 1140 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1149
9999 mem: storing 1149 in location 2
9999 mem: incrementing refcount of 1149: 3 -> 4
 102 run: screen-should-contain {"\n    .          .\n    .axy       .\n    .bxy       .\n    .cxy       .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9999 mem: storing 'press' event starting at 1381
9999 mem: storing console in 1385
9999 mem: storing console data in 1387
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1385
9999 mem: location 2 is 1149
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1388
9999 mem: storing 14 in location 1389
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 25 -> 26
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1385 in location 1392
9999 mem: incrementing refcount of 1385: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1394
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1391 is 1008
9999 mem: location 1394 is 1
9999 mem: location 1395 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 26 -> 27
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1392 is 1385
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1404
9999 mem: storing 12 in location 1405
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1385 in location 1407
9999 mem: incrementing refcount of 1385: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1407 is 1385
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9999 mem: location 1386 is 0
9999 mem: location 1387 is 1379
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9998 run: address to copy is 1386
9999 mem: storing 1386 in location 1408
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9999 mem: location 1386 is 0
9999 mem: location 1387 is 1379
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9998 run: address to copy is 1387
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1387 is 1379
9999 mem: storing 1379 in location 1409
9999 mem: incrementing refcount of 1379: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1409 is 1379
9999 mem: skipping refcount at 1379
9999 mem: storing 1 in location 1410
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1408 is 1386
9999 mem: location 1386 is 0
9999 mem: location 1410 is 1
9999 mem: storing 0 in location 1411
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1379
9999 mem: skipping refcount at 1379
9998 run: base address is 1380
9999 mem: location 1408 is 1386
9999 mem: location 1386 is 0
9998 run: address to copy is 1381
9998 run: its type is event
9999 mem: location 1381 is 1
9999 mem: location 1382 is 65518
9999 mem: location 1383 is 0
9999 mem: location 1384 is 0
9999 mem: storing 1 in location 1413
9999 mem: storing 65518 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1386
9999 mem: location 1386 is 0
9999 mem: location 1408 is 1386
9999 mem: storing 1 in location 1386
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1413 is 1
9999 mem: location 1414 is 65518
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1407 is 1385
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1385
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1396
9999 mem: storing 65518 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: decrementing refcount of 1385: 2 -> 1
9999 mem: storing 1385 in location 1392
9999 mem: incrementing refcount of 1385: 1 -> 2
9999 mem: storing 1 in location 1400
9999 mem: storing 0 in location 1401
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65518
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: storing 0 in location 1402
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jump-if fell through
9990 schedule: editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-empty-lines
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1391 is 1008
9999 mem: location 1393 is 1149
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65518
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1418
9999 mem: storing 85 in location 1419
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1421
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 5 -> 6
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1423
9999 mem: storing 65518 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1427
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1422 is 1149
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1421 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1197
 106 run: return {width: "number"}
9999 mem: location 1197 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1428
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1421 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1197
 106 run: return {height: "number"}
9999 mem: location 1197 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1429
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1430
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1431
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1432
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1433
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1434
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1433 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1435
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1434 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1436
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1423 is 1
9999 mem: location 1424 is 65518
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: storing 0 in location 1437
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1423 is 1
9999 mem: location 1424 is 65518
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: storing 1424 in location 1491
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1491 is 1424
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1491 is 1424
9999 mem: location 1424 is 65518
9999 mem: storing 0 in location 1454
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1491 is 1424
9999 mem: location 1424 is 65518
9999 mem: storing 1 in location 1470
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1455
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1455 is 1151
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1456
9999 mem: incrementing refcount of 1168: 8 -> 9
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1457
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1458
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1168
9999 mem: storing 1168 in location 1459
9999 mem: incrementing refcount of 1168: 9 -> 10
 105 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1422 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1099
9999 mem: incrementing refcount of 1149: 6 -> 7
 106 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1242
9999 mem: storing 1242 in location 1100
9999 mem: incrementing refcount of 1242: 7 -> 8
 106 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1100 is 1242
9998 run: jumping to instruction 5
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1168
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1101
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1100 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1196
9999 mem: incrementing refcount of 1242: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1245
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1245 is 1238
9999 mem: storing 1238 in location 1197
9999 mem: incrementing refcount of 1238: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1238
9999 mem: location 1101 is 1153
9999 mem: decrementing refcount of 1168: 10 -> 9
9999 mem: storing 1238 in location 1153
9999 mem: incrementing refcount of 1238: 9 -> 10
 106 run: {last: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1239
9998 run: its type is "character"
9999 mem: location 1239 is 10
9999 mem: storing 10 in location 1102
 106 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1102 is 10
9999 mem: storing 1 in location 1103
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1238
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1196
9999 mem: incrementing refcount of 1238: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1238
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1234
9999 mem: storing 1234 in location 1197
9999 mem: incrementing refcount of 1234: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1234
9999 mem: location 1101 is 1153
9999 mem: decrementing refcount of 1238: 11 -> 10
9999 mem: storing 1234 in location 1153
9999 mem: incrementing refcount of 1234: 9 -> 10
 106 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1505
9999 mem: storing 9 in location 1506
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1508
9999 mem: incrementing refcount of 1149: 7 -> 8
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1234
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1509
 107 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1234
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1510
 107 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1509 is 0
9999 mem: location 1510 is 1158
9999 mem: storing 0 in location 1158
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1234
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1511
 107 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1234
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1512
9999 mem: incrementing refcount of 1168: 9 -> 10
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1234
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1235
9998 run: its type is "character"
9999 mem: location 1235 is 121
9999 mem: storing 121 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 121
9999 mem: storing 0 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1234
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1196
9999 mem: incrementing refcount of 1234: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1234
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1230
9999 mem: storing 1230 in location 1197
9999 mem: incrementing refcount of 1230: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1230
9999 mem: location 1511 is 1153
9999 mem: decrementing refcount of 1234: 11 -> 10
9999 mem: storing 1230 in location 1153
9999 mem: incrementing refcount of 1230: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1230
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1230
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1231
9998 run: its type is "character"
9999 mem: location 1231 is 120
9999 mem: storing 120 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 120
9999 mem: storing 0 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1230
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1196
9999 mem: incrementing refcount of 1230: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1230
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1226
9999 mem: location 1511 is 1153
9999 mem: decrementing refcount of 1230: 11 -> 10
9999 mem: storing 1226 in location 1153
9999 mem: incrementing refcount of 1226: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1226
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1226
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is "character"
9999 mem: location 1227 is 99
9999 mem: storing 99 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 99
9999 mem: storing 0 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1226
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1222
9999 mem: storing 1222 in location 1197
9999 mem: incrementing refcount of 1222: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1222
9999 mem: location 1511 is 1153
9999 mem: decrementing refcount of 1226: 11 -> 10
9999 mem: storing 1222 in location 1153
9999 mem: incrementing refcount of 1222: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1222
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1222
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is "character"
9999 mem: location 1223 is 10
9999 mem: storing 10 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 10
9999 mem: storing 1 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 1
9998 run: jumping to instruction 16
 107 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1508 is 1149
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1168
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1104
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1222
9999 mem: location 1104 is 1151
9999 mem: decrementing refcount of 1168: 10 -> 9
9999 mem: storing 1222 in location 1151
9999 mem: incrementing refcount of 1222: 10 -> 11
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1460
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1461
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1462
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1222
9999 mem: storing 1222 in location 1463
9999 mem: incrementing refcount of 1222: 11 -> 12
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 514
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
9999 mem: storing 1340 in location 1440
9999 mem: incrementing refcount of 1340: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1457 is 1
9999 mem: location 1458 is 0
9999 mem: location 1459 is 1168
9999 mem: location 1461 is 1
9999 mem: location 1462 is 0
9999 mem: location 1463 is 1222
9999 mem: location 1460 is 0
9999 mem: location 1440 is 1340
9999 mem: skipping refcount at 1340
9999 mem: location 1440 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 1 in location 1341
9999 mem: storing 1 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 1168 in location 1344
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 1222 in location 1347
9999 mem: storing 0 in location 1348
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1422 is 1149
9999 mem: location 1440 is 1340
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1185
9999 mem: incrementing refcount of 1149: 8 -> 9
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1340 in location 1186
9999 mem: incrementing refcount of 1340: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1186 is 1340
9999 mem: location 1187 is 1160
9999 mem: location 1160 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1340 in location 1165
9999 mem: incrementing refcount of 1340: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1516
9999 mem: storing 1516 in location 1167
9999 mem: incrementing refcount of 1516: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1165 is 1340
9999 mem: location 1166 is 0
9999 mem: location 1167 is 1516
9999 mem: skipping refcount at 1516
9999 mem: location 1167 is 1516
9999 mem: skipping refcount at 1516
9999 mem: storing 1340 in location 1517
9999 mem: storing 0 in location 1518
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1516
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1516
9999 mem: location 1187 is 1160
9999 mem: storing 1516 in location 1160
9999 mem: incrementing refcount of 1516: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1188
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1188 is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1185 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 9 -> 8
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 8 -> 9
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1151
9999 mem: location 1151 is 1222
9999 mem: location 1456 is 1168
9999 mem: storing 0 in location 1469
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1469 is 0
9999 mem: storing 1 in location 1427
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1421 is 1008
9999 mem: location 1422 is 1149
9999 mem: location 1427 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1149
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 29 -> 30
9999 mem: decrementing refcount of 1149: 9 -> 8
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 8 -> 9
9999 mem: storing 1 in location 1403
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1391 is 1008
9999 mem: location 1393 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1100
9999 mem: incrementing refcount of 1149: 9 -> 10
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1310
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 31 -> 32
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1314
9999 mem: incrementing refcount of 1149: 10 -> 11
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1314 is 1149
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1315
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1313 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 32 -> 33
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1197
 107 run: return {height: "number"}
9999 mem: location 1197 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1316
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1317
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1222
9999 mem: storing 1222 in location 1318
9999 mem: incrementing refcount of 1222: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1222
9999 mem: storing 1222 in location 1319
9999 mem: incrementing refcount of 1222: 13 -> 14
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 15 -> 14
9999 mem: storing 1226 in location 1318
9999 mem: incrementing refcount of 1226: 11 -> 12
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1320
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1323
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1324
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1325
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 33 -> 34
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 34 -> 33
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 33 -> 34
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1226
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1222
9999 mem: location 1325 is 1153
9999 mem: decrementing refcount of 1222: 14 -> 13
9999 mem: storing 1222 in location 1153
9999 mem: incrementing refcount of 1222: 13 -> 14
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1318 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is "character"
9999 mem: location 1227 is 99
9999 mem: storing 99 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1519
9999 mem: storing 10 in location 1520
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 99
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 99
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 99
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 99
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 34 -> 35
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 14 -> 15
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 99
9999 mem: location 1375 is 1036
9999 mem: storing 99 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1226
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1197
9999 mem: incrementing refcount of 1230: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 13 -> 12
9999 mem: storing 1230 in location 1318
9999 mem: incrementing refcount of 1230: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1196
9999 mem: incrementing refcount of 1222: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1222
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1196 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1197
9999 mem: incrementing refcount of 1226: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 15 -> 14
9999 mem: storing 1226 in location 1319
9999 mem: incrementing refcount of 1226: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1230
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1318 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1231
9998 run: its type is "character"
9999 mem: location 1231 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 120
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 120
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 35 -> 36
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 15 -> 16
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1038
9999 mem: storing 120 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1230
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1196
9999 mem: incrementing refcount of 1230: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1230
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1197
9999 mem: incrementing refcount of 1234: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 13 -> 12
9999 mem: storing 1234 in location 1318
9999 mem: incrementing refcount of 1234: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1226
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1196
9999 mem: incrementing refcount of 1226: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1226
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1196 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1197
9999 mem: incrementing refcount of 1230: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 15 -> 14
9999 mem: storing 1230 in location 1319
9999 mem: incrementing refcount of 1230: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1234
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 2
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1318 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1235
9998 run: its type is "character"
9999 mem: location 1235 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 121
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 121
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 36 -> 37
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 16 -> 17
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1040
9999 mem: storing 121 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1234
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1196
9999 mem: incrementing refcount of 1234: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1234
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1197
9999 mem: incrementing refcount of 1238: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 13 -> 12
9999 mem: storing 1238 in location 1318
9999 mem: incrementing refcount of 1238: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1230
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1196
9999 mem: incrementing refcount of 1230: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1230
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1196 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1197
9999 mem: incrementing refcount of 1234: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 15 -> 14
9999 mem: storing 1234 in location 1319
9999 mem: incrementing refcount of 1234: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1238
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1318 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1239
9998 run: its type is "character"
9999 mem: location 1239 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 10
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 10
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1331
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 37 -> 38
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 38 -> 39
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 17 -> 18
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 38 -> 39
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 1
9999 mem: storing 2 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 2
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 39 -> 40
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1238
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1196
9999 mem: incrementing refcount of 1238: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1238
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1242
9999 mem: storing 1242 in location 1197
9999 mem: incrementing refcount of 1242: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1242
9999 mem: decrementing refcount of 1238: 13 -> 12
9999 mem: storing 1242 in location 1318
9999 mem: incrementing refcount of 1242: 10 -> 11
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1234
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1196
9999 mem: incrementing refcount of 1234: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1234
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1196 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1197
9999 mem: incrementing refcount of 1238: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 15 -> 14
9999 mem: storing 1238 in location 1319
9999 mem: incrementing refcount of 1238: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1242
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1318 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1243
9998 run: its type is "character"
9999 mem: location 1243 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 10
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 10
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 40 -> 41
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 41 -> 42
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 18 -> 19
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 98
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1056
9999 mem: storing 32 in location 1056
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1057
9999 mem: storing 7 in location 1057
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 41 -> 42
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 42 -> 43
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 19 -> 20
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1058
9999 mem: storing 32 in location 1058
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1059
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 42 -> 43
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 43 -> 44
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 20 -> 21
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 121
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1060
9999 mem: storing 32 in location 1060
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1061
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 44 -> 45
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 21 -> 22
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 2
9999 mem: storing 3 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 3
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 45 -> 46
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1196
9999 mem: incrementing refcount of 1242: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1197
9999 mem: incrementing refcount of 1246: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 12 -> 11
9999 mem: storing 1246 in location 1318
9999 mem: incrementing refcount of 1246: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1238
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1196
9999 mem: incrementing refcount of 1238: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1238
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1196 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1242
9999 mem: storing 1242 in location 1197
9999 mem: incrementing refcount of 1242: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1242
9999 mem: decrementing refcount of 1238: 15 -> 14
9999 mem: storing 1242 in location 1319
9999 mem: incrementing refcount of 1242: 12 -> 13
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1246
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1318 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1247
9998 run: its type is "character"
9999 mem: location 1247 is 100
9999 mem: storing 100 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 100
9999 trace: incrementing callstack depth to 6
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 100
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 100
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 100
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 100
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 46 -> 47
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 99
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 100
9999 mem: location 1375 is 1076
9999 mem: storing 100 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 100
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1246
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1196
9999 mem: incrementing refcount of 1246: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1246
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1196 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1197
9999 mem: incrementing refcount of 1250: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 7 -> 6
9999 mem: storing 1250 in location 1318
9999 mem: incrementing refcount of 1250: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1196
9999 mem: incrementing refcount of 1242: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1196 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1197
9999 mem: incrementing refcount of 1246: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 14 -> 13
9999 mem: storing 1246 in location 1319
9999 mem: incrementing refcount of 1246: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1250
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1318 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1251
9998 run: its type is "character"
9999 mem: location 1251 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 120
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 120
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 47 -> 48
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 23 -> 24
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1078
9999 mem: storing 120 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1250
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1196
9999 mem: incrementing refcount of 1250: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1250
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1196 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1197
9999 mem: incrementing refcount of 1254: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 7 -> 6
9999 mem: storing 1254 in location 1318
9999 mem: incrementing refcount of 1254: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1246
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1196
9999 mem: incrementing refcount of 1246: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1246
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1196 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1197
9999 mem: incrementing refcount of 1250: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 9 -> 8
9999 mem: storing 1250 in location 1319
9999 mem: incrementing refcount of 1250: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1254
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1318 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9998 run: its type is "character"
9999 mem: location 1255 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 121
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 121
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 24 -> 25
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1080
9999 mem: storing 121 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1254
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1196
9999 mem: incrementing refcount of 1254: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1254
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1196 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1197
9999 mem: incrementing refcount of 1258: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 7 -> 6
9999 mem: storing 1258 in location 1318
9999 mem: incrementing refcount of 1258: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1250
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1196
9999 mem: incrementing refcount of 1250: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1250
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1196 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1197
9999 mem: incrementing refcount of 1254: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 9 -> 8
9999 mem: storing 1254 in location 1319
9999 mem: incrementing refcount of 1254: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1258
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1318 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1259
9998 run: its type is "character"
9999 mem: location 1259 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1522
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1523
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1522 is 7
9999 mem: storing 1 in location 1524
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1523 is 10
9999 mem: storing 0 in location 1525
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1526
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1526 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1523 is 10
9999 mem: storing 0 in location 1528
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1522 is 7
9999 mem: storing 0 in location 1529
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1522 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 50 -> 51
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 25 -> 26
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 3
9999 mem: storing 4 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 51 -> 52
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1258
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1196
9999 mem: incrementing refcount of 1258: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1258
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1196 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1262
9999 mem: storing 1262 in location 1197
9999 mem: incrementing refcount of 1262: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1262
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1262
9999 mem: decrementing refcount of 1258: 7 -> 6
9999 mem: storing 1262 in location 1318
9999 mem: incrementing refcount of 1262: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1254
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1196
9999 mem: incrementing refcount of 1254: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1196 is 1254
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1196 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1196 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1197
9999 mem: incrementing refcount of 1258: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1197 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 9 -> 8
9999 mem: storing 1258 in location 1319
9999 mem: incrementing refcount of 1258: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1262
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1316 is 4
9999 mem: storing 1 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1242
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1334
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1262
9999 mem: location 1334 is 1152
9999 mem: decrementing refcount of 1242: 13 -> 12
9999 mem: storing 1262 in location 1152
9999 mem: incrementing refcount of 1262: 6 -> 7
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1335
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1327 is 0
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1336
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1337
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 0 in location 1338
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1339
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1339 is 1156
9999 mem: storing 4 in location 1156
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 mem: location 1313 is 1008
9999 mem: location 1314 is 1149
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 52 -> 53
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-empty-lines
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 53 -> 54
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1408
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1409
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1410
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1411
9999 mem: storing 1 in location 1412
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1413
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1415
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1408 is 5
9999 mem: location 1409 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1006 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 0
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 0
9999 mem: storing 1 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 1
9999 mem: storing 2 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 2
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 2
9999 mem: storing 3 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 3
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 3
9999 mem: storing 4 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 4
9999 mem: location 1410 is 3
9999 mem: storing 0 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1407 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1531
9999 mem: storing 6 in location 1532
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1534
9999 mem: incrementing refcount of 1008: 64 -> 65
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1535
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1536
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1534 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1537
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1535 is 6
9999 mem: location 1537 is 1011
9999 mem: storing 6 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1538
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1536 is 0
9999 mem: location 1538 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1534 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 65 -> 66
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 66 -> 67
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 67 -> 68
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 68 -> 69
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 69 -> 70
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1539
9999 mem: storing 7 in location 1540
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1543
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1544
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1545
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1543 is 6
9999 mem: storing 7 in location 1543
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1542 is 1008
9999 mem: location 1543 is 7
9999 mem: location 1544 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1531
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1534
9999 mem: incrementing refcount of 1008: 71 -> 72
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1535
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1536
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1534 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1537
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1535 is 7
9999 mem: location 1537 is 1011
9999 mem: storing 7 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1538
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1536 is 0
9999 mem: location 1538 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1534 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1542 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1196
9999 mem: incrementing refcount of 1008: 72 -> 73
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1196 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1196 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1197
 108 run: return {height: "number"}
9999 mem: location 1197 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1546
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1543 is 7
9999 mem: location 1546 is 4
9999 mem: storing 1 in location 1547
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1547 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1542 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 72 -> 73
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1394
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1391 is 1008
9999 mem: location 1394 is 1
9999 mem: location 1395 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 73 -> 74
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 73 -> 74
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1392 is 1385
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1385 in location 1407
9999 mem: incrementing refcount of 1385: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1407 is 1385
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9999 mem: location 1386 is 1
9999 mem: location 1387 is 1379
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9998 run: address to copy is 1386
9999 mem: storing 1386 in location 1408
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9999 mem: location 1386 is 1
9999 mem: location 1387 is 1379
9999 mem: location 1407 is 1385
9999 mem: skipping refcount at 1385
9998 run: address to copy is 1387
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1387 is 1379
9999 mem: storing 1379 in location 1409
9999 mem: incrementing refcount of 1379: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1409 is 1379
9999 mem: skipping refcount at 1379
9999 mem: storing 1 in location 1410
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1408 is 1386
9999 mem: location 1386 is 1
9999 mem: location 1410 is 1
9999 mem: storing 1 in location 1411
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1193
9999 mem: storing 1193 in location 1412
9999 mem: incrementing refcount of 1193: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1412 is 1193
9999 mem: skipping refcount at 1193
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1407 is 1385
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1385
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: decrementing refcount of 1385: 3 -> 2
9999 mem: storing 1385 in location 1392
9999 mem: incrementing refcount of 1385: 2 -> 3
9999 mem: storing 1 in location 1400
9999 mem: storing 1 in location 1401
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1391 is 1008
9999 mem: location 1392 is 1385
9999 mem: location 1393 is 1149
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .cxy       .\n    .          .\n    .dxy       .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9999 mem: storing 'press' event starting at 1550
9999 mem: storing console in 1554
9999 mem: storing console data in 1556
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1554
9999 mem: location 2 is 1149
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1388
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 74 -> 75
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1554 in location 1392
9999 mem: incrementing refcount of 1554: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 11 -> 12
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1394
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1391 is 1008
9999 mem: location 1394 is 1
9999 mem: location 1395 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 75 -> 76
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1392 is 1554
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1554 in location 1407
9999 mem: incrementing refcount of 1554: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1407 is 1554
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1555 is 0
9999 mem: location 1556 is 1548
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9998 run: address to copy is 1555
9999 mem: storing 1555 in location 1408
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1555 is 0
9999 mem: location 1556 is 1548
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9998 run: address to copy is 1556
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1556 is 1548
9999 mem: storing 1548 in location 1409
9999 mem: incrementing refcount of 1548: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1409 is 1548
9999 mem: skipping refcount at 1548
9999 mem: storing 1 in location 1410
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1408 is 1555
9999 mem: location 1555 is 0
9999 mem: location 1410 is 1
9999 mem: storing 0 in location 1411
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1548
9999 mem: skipping refcount at 1548
9998 run: base address is 1549
9999 mem: location 1408 is 1555
9999 mem: location 1555 is 0
9998 run: address to copy is 1550
9998 run: its type is event
9999 mem: location 1550 is 1
9999 mem: location 1551 is 65518
9999 mem: location 1552 is 0
9999 mem: location 1553 is 0
9999 mem: storing 1 in location 1413
9999 mem: storing 65518 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1555
9999 mem: location 1555 is 0
9999 mem: location 1408 is 1555
9999 mem: storing 1 in location 1555
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1413 is 1
9999 mem: location 1414 is 65518
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1407 is 1554
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1554
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1396
9999 mem: storing 65518 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: decrementing refcount of 1554: 2 -> 1
9999 mem: storing 1554 in location 1392
9999 mem: incrementing refcount of 1554: 1 -> 2
9999 mem: storing 1 in location 1400
9999 mem: storing 0 in location 1401
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
9990 schedule: editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-empty-lines
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65518
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: storing 0 in location 1402
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1391 is 1008
9999 mem: location 1393 is 1149
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65518
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1418
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1421
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1423
9999 mem: storing 65518 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1427
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1422 is 1149
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1421 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1557
9999 mem: storing 3 in location 1558
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1560
9999 mem: incrementing refcount of 1008: 77 -> 78
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1560 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1561
 106 run: return {width: "number"}
9999 mem: location 1561 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1428
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1421 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1560
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1560 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1561
 106 run: return {height: "number"}
9999 mem: location 1561 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1429
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1430
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1431
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1432
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1433
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1434
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1433 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1435
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1434 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1436
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1423 is 1
9999 mem: location 1424 is 65518
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: storing 0 in location 1437
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1423 is 1
9999 mem: location 1424 is 65518
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: storing 1424 in location 1491
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1491 is 1424
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1491 is 1424
9999 mem: location 1424 is 65518
9999 mem: storing 0 in location 1454
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1491 is 1424
9999 mem: location 1424 is 65518
9999 mem: storing 1 in location 1470
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1470 is 1
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1455
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1455 is 1151
9999 mem: location 1151 is 1222
9999 mem: storing 1222 in location 1456
9999 mem: incrementing refcount of 1222: 14 -> 15
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1457
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1458
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1222
9999 mem: storing 1222 in location 1459
9999 mem: incrementing refcount of 1222: 15 -> 16
 105 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1422 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1099
9999 mem: incrementing refcount of 1149: 13 -> 14
 106 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1262
9999 mem: storing 1262 in location 1100
9999 mem: incrementing refcount of 1262: 7 -> 8
 106 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1100 is 1262
9998 run: jumping to instruction 5
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1101
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1100 is 1262
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1262 in location 1560
9999 mem: incrementing refcount of 1262: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1262
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1560 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 1266
9999 mem: location 1265 is 1258
9999 mem: location 1560 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy is 1265
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1265 is 1258
9999 mem: storing 1258 in location 1561
9999 mem: incrementing refcount of 1258: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1561 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: location 1101 is 1153
9999 mem: decrementing refcount of 1222: 16 -> 15
9999 mem: storing 1258 in location 1153
9999 mem: incrementing refcount of 1258: 9 -> 10
 106 run: {last: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1259
9998 run: its type is "character"
9999 mem: location 1259 is 10
9999 mem: storing 10 in location 1102
 106 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1102 is 10
9999 mem: storing 1 in location 1103
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1258
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1560
9999 mem: incrementing refcount of 1258: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1258
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1560 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1560 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1261
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1261 is 1254
9999 mem: storing 1254 in location 1561
9999 mem: incrementing refcount of 1254: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1561 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: location 1101 is 1153
9999 mem: decrementing refcount of 1258: 11 -> 10
9999 mem: storing 1254 in location 1153
9999 mem: incrementing refcount of 1254: 9 -> 10
 106 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
9999 mem: new alloc from free list: 1505
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1508
9999 mem: incrementing refcount of 1149: 14 -> 15
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1254
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1509
 107 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1254
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1510
 107 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1509 is 0
9999 mem: location 1510 is 1158
9999 mem: storing 0 in location 1158
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1254
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1511
 107 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1254
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1508 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1512
9999 mem: incrementing refcount of 1168: 9 -> 10
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1254
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9998 run: its type is "character"
9999 mem: location 1255 is 121
9999 mem: storing 121 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 121
9999 mem: storing 0 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1254
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1560
9999 mem: incrementing refcount of 1254: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1254
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1560 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1560 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1257
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1257 is 1250
9999 mem: storing 1250 in location 1561
9999 mem: incrementing refcount of 1250: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1561 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1250
9999 mem: location 1511 is 1153
9999 mem: decrementing refcount of 1254: 11 -> 10
9999 mem: storing 1250 in location 1153
9999 mem: incrementing refcount of 1250: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1250
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1250
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1251
9998 run: its type is "character"
9999 mem: location 1251 is 120
9999 mem: storing 120 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 120
9999 mem: storing 0 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1250
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1560
9999 mem: incrementing refcount of 1250: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1250
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1560 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1560 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1253
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1253 is 1246
9999 mem: storing 1246 in location 1561
9999 mem: incrementing refcount of 1246: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1561 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1246
9999 mem: location 1511 is 1153
9999 mem: decrementing refcount of 1250: 11 -> 10
9999 mem: storing 1246 in location 1153
9999 mem: incrementing refcount of 1246: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1246
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1246
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1247
9998 run: its type is "character"
9999 mem: location 1247 is 100
9999 mem: storing 100 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 100
9999 mem: storing 0 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1246
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1560
9999 mem: incrementing refcount of 1246: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1246
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1560 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1560 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1249
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1249 is 1242
9999 mem: storing 1242 in location 1561
9999 mem: incrementing refcount of 1242: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1561 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1242
9999 mem: location 1511 is 1153
9999 mem: decrementing refcount of 1246: 11 -> 10
9999 mem: storing 1242 in location 1153
9999 mem: incrementing refcount of 1242: 13 -> 14
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1242
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1242
9999 mem: location 1512 is 1168
9999 mem: storing 0 in location 1513
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1511 is 1153
9999 mem: location 1153 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1243
9998 run: its type is "character"
9999 mem: location 1243 is 10
9999 mem: storing 10 in location 1514
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1514 is 10
9999 mem: storing 1 in location 1515
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1515 is 1
9998 run: jumping to instruction 16
 107 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1508 is 1149
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1099 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1104
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1153
9999 mem: location 1153 is 1242
9999 mem: location 1104 is 1151
9999 mem: decrementing refcount of 1222: 15 -> 14
9999 mem: storing 1242 in location 1151
9999 mem: incrementing refcount of 1242: 14 -> 15
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1460
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1461
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1462
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1242
9999 mem: storing 1242 in location 1463
9999 mem: incrementing refcount of 1242: 15 -> 16
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 514
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1519
9999 mem: storing 1519 in location 1440
9999 mem: incrementing refcount of 1519: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1457 is 1
9999 mem: location 1458 is 0
9999 mem: location 1459 is 1222
9999 mem: location 1461 is 1
9999 mem: location 1462 is 0
9999 mem: location 1463 is 1242
9999 mem: location 1460 is 0
9999 mem: location 1440 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1440 is 1519
9999 mem: skipping refcount at 1519
9999 mem: storing 1 in location 1520
9999 mem: storing 1 in location 1521
9999 mem: storing 0 in location 1522
9999 mem: storing 1222 in location 1523
9999 mem: storing 1 in location 1524
9999 mem: storing 0 in location 1525
9999 mem: storing 1242 in location 1526
9999 mem: storing 0 in location 1527
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1422 is 1149
9999 mem: location 1440 is 1519
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1185
9999 mem: incrementing refcount of 1149: 15 -> 16
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1186
9999 mem: incrementing refcount of 1519: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1516
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1186 is 1519
9999 mem: location 1187 is 1160
9999 mem: location 1160 is 1516
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1165
9999 mem: incrementing refcount of 1519: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1166
9999 mem: incrementing refcount of 1516: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1562
9999 mem: storing 1562 in location 1167
9999 mem: incrementing refcount of 1562: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1165 is 1519
9999 mem: location 1166 is 1516
9999 mem: location 1167 is 1562
9999 mem: skipping refcount at 1562
9999 mem: location 1167 is 1562
9999 mem: skipping refcount at 1562
9999 mem: storing 1519 in location 1563
9999 mem: storing 1516 in location 1564
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1562
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1562
9999 mem: location 1187 is 1160
9999 mem: decrementing refcount of 1516: 3 -> 2
9999 mem: storing 1562 in location 1160
9999 mem: incrementing refcount of 1562: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1188
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1188 is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1185 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 16 -> 15
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 15 -> 16
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1151
9999 mem: location 1151 is 1242
9999 mem: location 1456 is 1222
9999 mem: storing 0 in location 1469
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1469 is 0
9999 mem: storing 1 in location 1427
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1421 is 1008
9999 mem: location 1422 is 1149
9999 mem: location 1427 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1149
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 78 -> 79
9999 mem: decrementing refcount of 1149: 16 -> 15
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 15 -> 16
9999 mem: storing 1 in location 1403
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1391 is 1008
9999 mem: location 1393 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1100
9999 mem: incrementing refcount of 1149: 16 -> 17
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1310
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1314
9999 mem: incrementing refcount of 1149: 17 -> 18
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1314 is 1149
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1315
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1313 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1560
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1560 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1561
 107 run: return {height: "number"}
9999 mem: location 1561 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1316
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1317
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1242
9999 mem: storing 1242 in location 1318
9999 mem: incrementing refcount of 1242: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1242
9999 mem: storing 1242 in location 1319
9999 mem: incrementing refcount of 1242: 17 -> 18
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1560
9999 mem: incrementing refcount of 1242: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1560 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1561
9999 mem: incrementing refcount of 1246: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 19 -> 18
9999 mem: storing 1246 in location 1318
9999 mem: incrementing refcount of 1246: 11 -> 12
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1320
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1323
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1324
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1325
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1246
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1242
9999 mem: location 1325 is 1153
9999 mem: decrementing refcount of 1242: 18 -> 17
9999 mem: storing 1242 in location 1153
9999 mem: incrementing refcount of 1242: 17 -> 18
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1318 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1247
9998 run: its type is "character"
9999 mem: location 1247 is 100
9999 mem: storing 100 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1565
9999 mem: storing 10 in location 1566
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 100
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 100
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 100
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 100
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 83 -> 84
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 26 -> 27
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 100
9999 mem: location 1375 is 1036
9999 mem: storing 100 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 100
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1246
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1560
9999 mem: incrementing refcount of 1246: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1246
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1560 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1561
9999 mem: incrementing refcount of 1250: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 13 -> 12
9999 mem: storing 1250 in location 1318
9999 mem: incrementing refcount of 1250: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1560
9999 mem: incrementing refcount of 1242: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1560 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1561
9999 mem: incrementing refcount of 1246: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 19 -> 18
9999 mem: storing 1246 in location 1319
9999 mem: incrementing refcount of 1246: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1250
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1318 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1251
9998 run: its type is "character"
9999 mem: location 1251 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 120
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 120
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 84 -> 85
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 27 -> 28
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1038
9999 mem: storing 120 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1250
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1560
9999 mem: incrementing refcount of 1250: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1250
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1560 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1561
9999 mem: incrementing refcount of 1254: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 13 -> 12
9999 mem: storing 1254 in location 1318
9999 mem: incrementing refcount of 1254: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1246
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1560
9999 mem: incrementing refcount of 1246: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1246
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1560 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1561
9999 mem: incrementing refcount of 1250: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 15 -> 14
9999 mem: storing 1250 in location 1319
9999 mem: incrementing refcount of 1250: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1254
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 2
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1318 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9998 run: its type is "character"
9999 mem: location 1255 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 121
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 121
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
9990 schedule: print/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 28 -> 29
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1040
9999 mem: storing 121 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1254
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1560
9999 mem: incrementing refcount of 1254: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1254
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1560 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1561
9999 mem: incrementing refcount of 1258: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 13 -> 12
9999 mem: storing 1258 in location 1318
9999 mem: incrementing refcount of 1258: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1250
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1560
9999 mem: incrementing refcount of 1250: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1250
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1560 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1561
9999 mem: incrementing refcount of 1254: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 15 -> 14
9999 mem: storing 1254 in location 1319
9999 mem: incrementing refcount of 1254: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1258
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1318 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1259
9998 run: its type is "character"
9999 mem: location 1259 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1331
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 87 -> 88
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 29 -> 30
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 88 -> 87
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 1
9999 mem: storing 2 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 2
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 89 -> 88
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1258
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1560
9999 mem: incrementing refcount of 1258: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1258
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1560 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1262
9999 mem: storing 1262 in location 1561
9999 mem: incrementing refcount of 1262: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1262
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1262
9999 mem: decrementing refcount of 1258: 13 -> 12
9999 mem: storing 1262 in location 1318
9999 mem: incrementing refcount of 1262: 10 -> 11
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1254
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1560
9999 mem: incrementing refcount of 1254: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1254
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1560 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1561
9999 mem: incrementing refcount of 1258: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 15 -> 14
9999 mem: storing 1258 in location 1319
9999 mem: incrementing refcount of 1258: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1262
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 1266
9999 mem: location 1265 is 1258
9999 mem: location 1318 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy is 1263
9998 run: its type is "character"
9999 mem: location 1263 is 101
9999 mem: storing 101 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 101
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 101
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 101
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 101
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 101
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 30 -> 31
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 101
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 101
9999 mem: location 1375 is 1056
9999 mem: storing 101 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 101
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1262
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1262 in location 1560
9999 mem: incrementing refcount of 1262: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1262
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 1266
9999 mem: location 1265 is 1258
9999 mem: location 1560 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy is 1264
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1264 is 1266
9999 mem: storing 1266 in location 1561
9999 mem: incrementing refcount of 1266: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1266
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1266
9999 mem: decrementing refcount of 1262: 12 -> 11
9999 mem: storing 1266 in location 1318
9999 mem: incrementing refcount of 1266: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1258
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1560
9999 mem: incrementing refcount of 1258: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1258
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1560 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1262
9999 mem: storing 1262 in location 1561
9999 mem: incrementing refcount of 1262: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1262
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1262
9999 mem: decrementing refcount of 1258: 15 -> 14
9999 mem: storing 1262 in location 1319
9999 mem: incrementing refcount of 1262: 12 -> 13
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1266
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 1270
9999 mem: location 1269 is 1262
9999 mem: location 1318 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1267
9998 run: its type is "character"
9999 mem: location 1267 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 120
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 120
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 31 -> 32
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1058
9999 mem: storing 120 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1560
9999 mem: incrementing refcount of 1266: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1266
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 1270
9999 mem: location 1269 is 1262
9999 mem: location 1560 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1270
9999 mem: storing 1270 in location 1561
9999 mem: incrementing refcount of 1270: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1270
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1270
9999 mem: decrementing refcount of 1266: 7 -> 6
9999 mem: storing 1270 in location 1318
9999 mem: incrementing refcount of 1270: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1262
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1262 in location 1560
9999 mem: incrementing refcount of 1262: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1262
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1262
9999 mem: skipping refcount at 1262
9999 mem: location 1263 is 101
9999 mem: location 1264 is 1266
9999 mem: location 1265 is 1258
9999 mem: location 1560 is 1262
9999 mem: skipping refcount at 1262
9998 run: address to copy is 1264
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1264 is 1266
9999 mem: storing 1266 in location 1561
9999 mem: incrementing refcount of 1266: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1266
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1266
9999 mem: decrementing refcount of 1262: 14 -> 13
9999 mem: storing 1266 in location 1319
9999 mem: incrementing refcount of 1266: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1270
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 1274
9999 mem: location 1273 is 1266
9999 mem: location 1318 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1271
9998 run: its type is "character"
9999 mem: location 1271 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 121
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 121
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 32 -> 33
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1060
9999 mem: storing 121 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 121
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
9990 schedule: print/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1270
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1560
9999 mem: incrementing refcount of 1270: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1270
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 1274
9999 mem: location 1273 is 1266
9999 mem: location 1560 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1272 is 1274
9999 mem: storing 1274 in location 1561
9999 mem: incrementing refcount of 1274: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1274
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1274
9999 mem: decrementing refcount of 1270: 7 -> 6
9999 mem: storing 1274 in location 1318
9999 mem: incrementing refcount of 1274: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1266
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1266 in location 1560
9999 mem: incrementing refcount of 1266: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1266
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1266
9999 mem: skipping refcount at 1266
9999 mem: location 1267 is 120
9999 mem: location 1268 is 1270
9999 mem: location 1269 is 1262
9999 mem: location 1560 is 1266
9999 mem: skipping refcount at 1266
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1270
9999 mem: storing 1270 in location 1561
9999 mem: incrementing refcount of 1270: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1270
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1270
9999 mem: decrementing refcount of 1266: 9 -> 8
9999 mem: storing 1270 in location 1319
9999 mem: incrementing refcount of 1270: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1274
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 1278
9999 mem: location 1277 is 1270
9999 mem: location 1318 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy is 1275
9998 run: its type is "character"
9999 mem: location 1275 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 93 -> 94
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 33 -> 34
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 2
9999 mem: storing 3 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 3
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1274
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1274 in location 1560
9999 mem: incrementing refcount of 1274: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1274
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 1278
9999 mem: location 1277 is 1270
9999 mem: location 1560 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy is 1276
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1276 is 1278
9999 mem: storing 1278 in location 1561
9999 mem: incrementing refcount of 1278: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1278
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1278
9999 mem: decrementing refcount of 1274: 7 -> 6
9999 mem: storing 1278 in location 1318
9999 mem: incrementing refcount of 1278: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1270
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1560
9999 mem: incrementing refcount of 1270: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1270
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 121
9999 mem: location 1272 is 1274
9999 mem: location 1273 is 1266
9999 mem: location 1560 is 1270
9999 mem: skipping refcount at 1270
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1272 is 1274
9999 mem: storing 1274 in location 1561
9999 mem: incrementing refcount of 1274: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1274
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1274
9999 mem: decrementing refcount of 1270: 9 -> 8
9999 mem: storing 1274 in location 1319
9999 mem: incrementing refcount of 1274: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1278
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 1282
9999 mem: location 1281 is 1274
9999 mem: location 1318 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy is 1279
9998 run: its type is "character"
9999 mem: location 1279 is 102
9999 mem: storing 102 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 102
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 102
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 102
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 102
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 102
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 102
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 100
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 102
9999 mem: location 1375 is 1076
9999 mem: storing 102 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 102
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1278
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1278 in location 1560
9999 mem: incrementing refcount of 1278: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1278
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 1282
9999 mem: location 1281 is 1274
9999 mem: location 1560 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy is 1280
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1280 is 1282
9999 mem: storing 1282 in location 1561
9999 mem: incrementing refcount of 1282: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1282
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1282
9999 mem: decrementing refcount of 1278: 7 -> 6
9999 mem: storing 1282 in location 1318
9999 mem: incrementing refcount of 1282: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1274
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1274 in location 1560
9999 mem: incrementing refcount of 1274: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1274
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1274
9999 mem: skipping refcount at 1274
9999 mem: location 1275 is 10
9999 mem: location 1276 is 1278
9999 mem: location 1277 is 1270
9999 mem: location 1560 is 1274
9999 mem: skipping refcount at 1274
9998 run: address to copy is 1276
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1276 is 1278
9999 mem: storing 1278 in location 1561
9999 mem: incrementing refcount of 1278: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1278
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1278
9999 mem: decrementing refcount of 1274: 9 -> 8
9999 mem: storing 1278 in location 1319
9999 mem: incrementing refcount of 1278: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1282
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 1286
9999 mem: location 1285 is 1278
9999 mem: location 1318 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy is 1283
9998 run: its type is "character"
9999 mem: location 1283 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 120
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 120
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1078
9999 mem: storing 120 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1282
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1282 in location 1560
9999 mem: incrementing refcount of 1282: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1282
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 1286
9999 mem: location 1285 is 1278
9999 mem: location 1560 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy is 1284
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1284 is 1286
9999 mem: storing 1286 in location 1561
9999 mem: incrementing refcount of 1286: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1282: 7 -> 6
9999 mem: storing 1286 in location 1318
9999 mem: incrementing refcount of 1286: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1278
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1278 in location 1560
9999 mem: incrementing refcount of 1278: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1278
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1278
9999 mem: skipping refcount at 1278
9999 mem: location 1279 is 102
9999 mem: location 1280 is 1282
9999 mem: location 1281 is 1274
9999 mem: location 1560 is 1278
9999 mem: skipping refcount at 1278
9998 run: address to copy is 1280
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1280 is 1282
9999 mem: storing 1282 in location 1561
9999 mem: incrementing refcount of 1282: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1282
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1282
9999 mem: decrementing refcount of 1278: 9 -> 8
9999 mem: storing 1282 in location 1319
9999 mem: incrementing refcount of 1282: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1286
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1282
9999 mem: location 1318 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1287
9998 run: its type is "character"
9999 mem: location 1287 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 121
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 121
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1080
9999 mem: storing 121 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1286
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1560
9999 mem: incrementing refcount of 1286: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1286
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1282
9999 mem: location 1560 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1561
9999 mem: incrementing refcount of 1290: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 7 -> 6
9999 mem: storing 1290 in location 1318
9999 mem: incrementing refcount of 1290: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1282
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1282 in location 1560
9999 mem: incrementing refcount of 1282: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1282
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1282
9999 mem: skipping refcount at 1282
9999 mem: location 1283 is 120
9999 mem: location 1284 is 1286
9999 mem: location 1285 is 1278
9999 mem: location 1560 is 1282
9999 mem: skipping refcount at 1282
9998 run: address to copy is 1284
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1284 is 1286
9999 mem: storing 1286 in location 1561
9999 mem: incrementing refcount of 1286: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1286
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1286
9999 mem: decrementing refcount of 1282: 9 -> 8
9999 mem: storing 1286 in location 1319
9999 mem: incrementing refcount of 1286: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1290
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1318 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1291
9998 run: its type is "character"
9999 mem: location 1291 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1568
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1569
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1568 is 7
9999 mem: storing 1 in location 1570
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-empty-lines
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1571
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1571 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1572
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1572 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1570 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1569 is 10
9999 mem: storing 0 in location 1574
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1568 is 7
9999 mem: storing 0 in location 1575
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1568 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 99 -> 100
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 37 -> 38
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 3
9999 mem: storing 4 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1290
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1290 in location 1560
9999 mem: incrementing refcount of 1290: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1290
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1290
9999 mem: skipping refcount at 1290
9999 mem: location 1291 is 10
9999 mem: location 1292 is 1294
9999 mem: location 1293 is 1286
9999 mem: location 1560 is 1290
9999 mem: skipping refcount at 1290
9998 run: address to copy is 1292
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1292 is 1294
9999 mem: storing 1294 in location 1561
9999 mem: incrementing refcount of 1294: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1294
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1294
9999 mem: decrementing refcount of 1290: 7 -> 6
9999 mem: storing 1294 in location 1318
9999 mem: incrementing refcount of 1294: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1286
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1286 in location 1560
9999 mem: incrementing refcount of 1286: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1560 is 1286
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1560 is 1286
9999 mem: skipping refcount at 1286
9999 mem: location 1287 is 121
9999 mem: location 1288 is 1290
9999 mem: location 1289 is 1282
9999 mem: location 1560 is 1286
9999 mem: skipping refcount at 1286
9998 run: address to copy is 1288
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1288 is 1290
9999 mem: storing 1290 in location 1561
9999 mem: incrementing refcount of 1290: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1561 is 1290
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1290
9999 mem: decrementing refcount of 1286: 9 -> 8
9999 mem: storing 1290 in location 1319
9999 mem: incrementing refcount of 1290: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1294
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1316 is 4
9999 mem: storing 1 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1334
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1294
9999 mem: location 1334 is 1152
9999 mem: decrementing refcount of 1262: 13 -> 12
9999 mem: storing 1294 in location 1152
9999 mem: incrementing refcount of 1294: 6 -> 7
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1335
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1327 is 0
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1336
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1337
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 0 in location 1338
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1339
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1339 is 1156
9999 mem: storing 4 in location 1156
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 mem: location 1313 is 1008
9999 mem: location 1314 is 1149
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 106 -> 105
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1408
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1409
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1410
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1411
9999 mem: storing 1 in location 1412
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1413
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1415
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1408 is 5
9999 mem: location 1409 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1006 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 0
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 0
9999 mem: storing 1 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 1
9999 mem: storing 2 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 2
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 2
9999 mem: storing 3 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 3
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 3
9999 mem: storing 4 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 4
9999 mem: location 1410 is 3
9999 mem: storing 0 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1407 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1531
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1534
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1535
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1536
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1534 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1537
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1535 is 6
9999 mem: location 1537 is 1011
9999 mem: storing 6 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1538
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1536 is 0
9999 mem: location 1538 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1534 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 113 -> 114
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 115 -> 116
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 116 -> 115
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 116 -> 117
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-empty-lines
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 117 -> 118
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 118 -> 117
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 118 -> 119
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1539
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1543
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1544
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1545
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1543 is 6
9999 mem: storing 7 in location 1543
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1542 is 1008
9999 mem: location 1543 is 7
9999 mem: location 1544 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1531
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1534
9999 mem: incrementing refcount of 1008: 120 -> 121
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1535
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1536
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1534 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1537
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1535 is 7
9999 mem: location 1537 is 1011
9999 mem: storing 7 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1538
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1536 is 0
9999 mem: location 1538 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1534 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1542 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1560
9999 mem: incrementing refcount of 1008: 121 -> 122
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1560 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1560 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1561
 108 run: return {height: "number"}
9999 mem: location 1561 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1546
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1543 is 7
9999 mem: location 1546 is 4
9999 mem: storing 1 in location 1547
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1547 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1542 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 121 -> 122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1394
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1391 is 1008
9999 mem: location 1394 is 1
9999 mem: location 1395 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 122 -> 123
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 122 -> 123
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1392 is 1554
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1554 in location 1407
9999 mem: incrementing refcount of 1554: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1407 is 1554
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1555 is 1
9999 mem: location 1556 is 1548
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9998 run: address to copy is 1555
9999 mem: storing 1555 in location 1408
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1555 is 1
9999 mem: location 1556 is 1548
9999 mem: location 1407 is 1554
9999 mem: skipping refcount at 1554
9998 run: address to copy is 1556
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1556 is 1548
9999 mem: storing 1548 in location 1409
9999 mem: incrementing refcount of 1548: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1409 is 1548
9999 mem: skipping refcount at 1548
9999 mem: storing 1 in location 1410
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1408 is 1555
9999 mem: location 1555 is 1
9999 mem: location 1410 is 1
9999 mem: storing 1 in location 1411
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1557
9999 mem: storing 1557 in location 1412
9999 mem: incrementing refcount of 1557: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1412 is 1557
9999 mem: skipping refcount at 1557
9999 mem: location 1558 is 0
9999 mem: location 1559 is 0
9999 mem: location 1560 is 0
9999 mem: location 1561 is 0
9999 mem: location 1407 is 1554
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1554
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: decrementing refcount of 1554: 3 -> 2
9999 mem: storing 1554 in location 1392
9999 mem: incrementing refcount of 1554: 2 -> 3
9999 mem: storing 1 in location 1400
9999 mem: storing 1 in location 1401
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1391 is 1008
9999 mem: location 1392 is 1554
9999 mem: location 1393 is 1149
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .dxy       .\n    .exy       .\n    .fxy       .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-up: ()}
9992 load: after rewriting: press {page-up: ()}
9999 mem: storing 'press' event starting at 1579
9999 mem: storing console in 1583
9999 mem: storing console data in 1585
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1003 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1003
9991 transform: --- rewrite 'stash' instructions in recipe run_1003
9991 transform: --- fill in reply ingredients from header for recipe run_1003
9991 transform: --- deduce types for recipe run_1003
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1003
9991 transform: --- collect surrounding spaces for recipe run_1003
9991 transform: --- transform names for recipe run_1003
9991 transform: --- resolve ambiguous calls for recipe run_1003
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1003
9991 transform: --- transform braces for recipe run_1003
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1003
9991 transform: --- perform checks for recipe run_1003
9991 transform: --- type-check 'call' instructions inside recipe run_1003
9991 transform: --- type-check calls inside recipe run_1003
9991 transform: --- convert 'new' to 'allocate' for recipe run_1003
9991 transform: --- type-check merge instructions in recipe run_1003
9991 transform: --- check types of reply instructions in recipe run_1003
9991 transform: --- checking reply instructions against header for run_1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1583
9999 mem: location 2 is 1149
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1388
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 123 -> 124
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1392
9999 mem: incrementing refcount of 1583: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 18 -> 19
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1394
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1391 is 1008
9999 mem: location 1394 is 1
9999 mem: location 1395 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 124 -> 125
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 124 -> 125
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1392 is 1583
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1407
9999 mem: incrementing refcount of 1583: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1407 is 1583
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 0
9999 mem: location 1585 is 1577
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1584
9999 mem: storing 1584 in location 1408
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 0
9999 mem: location 1585 is 1577
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1585 is 1577
9999 mem: storing 1577 in location 1409
9999 mem: incrementing refcount of 1577: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1409 is 1577
9999 mem: skipping refcount at 1577
9999 mem: storing 1 in location 1410
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1408 is 1584
9999 mem: location 1584 is 0
9999 mem: location 1410 is 1
9999 mem: storing 0 in location 1411
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1577
9999 mem: skipping refcount at 1577
9998 run: base address is 1578
9999 mem: location 1408 is 1584
9999 mem: location 1584 is 0
9998 run: address to copy is 1579
9998 run: its type is event
9999 mem: location 1579 is 1
9999 mem: location 1580 is 65519
9999 mem: location 1581 is 0
9999 mem: location 1582 is 0
9999 mem: storing 1 in location 1413
9999 mem: storing 65519 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1408 is 1584
9999 mem: location 1584 is 0
9999 mem: location 1408 is 1584
9999 mem: storing 1 in location 1584
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1413 is 1
9999 mem: location 1414 is 65519
9999 mem: location 1415 is 0
9999 mem: location 1416 is 0
9999 mem: location 1407 is 1583
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65519, 0, 0]
9998 run: result 1 is 1583
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1396
9999 mem: storing 65519 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: decrementing refcount of 1583: 2 -> 1
9999 mem: storing 1583 in location 1392
9999 mem: incrementing refcount of 1583: 1 -> 2
9999 mem: storing 1 in location 1400
9999 mem: storing 0 in location 1401
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65519
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: storing 0 in location 1402
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1391 is 1008
9999 mem: location 1393 is 1149
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65519
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1418
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1421
9999 mem: incrementing refcount of 1008: 125 -> 126
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 19 -> 20
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1423
9999 mem: storing 65519 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1427
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1422 is 1149
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1421 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1586
9999 mem: storing 3 in location 1587
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1589
9999 mem: incrementing refcount of 1008: 126 -> 127
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1589 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1590
 106 run: return {width: "number"}
9999 mem: location 1590 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1428
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1421 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1589
9999 mem: incrementing refcount of 1008: 127 -> 128
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1589 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1590
 106 run: return {height: "number"}
9999 mem: location 1590 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1429
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1430
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1431
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1432
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1433
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1434
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1433 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1435
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1434 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1436
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1423 is 1
9999 mem: location 1424 is 65519
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: storing 0 in location 1437
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1423 is 1
9999 mem: location 1424 is 65519
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: storing 1424 in location 1491
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1491 is 1424
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1491 is 1424
9999 mem: location 1424 is 65519
9999 mem: storing 1 in location 1454
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 1
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1455
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1455 is 1151
9999 mem: location 1151 is 1242
9999 mem: storing 1242 in location 1456
9999 mem: incrementing refcount of 1242: 18 -> 19
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1457
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1458
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1242
9999 mem: storing 1242 in location 1459
9999 mem: incrementing refcount of 1242: 19 -> 20
 105 run: {editor: ("address" "shared" "editor-data")} <- page-up {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1422 is 1149
9999 mem: location 1429 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1175
9999 mem: incrementing refcount of 1149: 20 -> 21
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1176
 106 run: {max: "number"} <- subtract {screen-height: "number"}, {1: "literal", "menu-bar": ()}, {1: "literal", "overlapping-line": ()}
9999 mem: location 1176 is 4
9999 mem: storing 2 in location 1177
 106 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1178
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1175 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1179
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1178 is 0
9999 mem: location 1177 is 2
9999 mem: storing 0 in location 1180
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1179 is 1151
9999 mem: location 1151 is 1242
9999 mem: location 1175 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1591
9999 mem: storing 14 in location 1592
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1594
9999 mem: incrementing refcount of 1242: 20 -> 21
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1595
9999 mem: incrementing refcount of 1149: 21 -> 22
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1594 is 1242
9999 mem: storing 1242 in location 1596
9999 mem: incrementing refcount of 1242: 21 -> 22
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1596 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1596 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1243
9998 run: its type is "character"
9999 mem: location 1243 is 10
9999 mem: storing 10 in location 1597
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1598
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1599
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1599 is 3
9999 mem: location 1598 is 0
9999 mem: storing 3 in location 1600
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1242
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1601
9999 mem: incrementing refcount of 1168: 10 -> 11
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1242
9999 mem: location 1601 is 1168
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1099
9999 mem: incrementing refcount of 1242: 22 -> 23
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1100
9999 mem: incrementing refcount of 1168: 11 -> 12
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1101
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1099 is 1242
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1242
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1102 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1242
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1589
9999 mem: incrementing refcount of 1242: 23 -> 24
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1242
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1245
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1245 is 1238
9999 mem: storing 1238 in location 1590
9999 mem: incrementing refcount of 1238: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1242: 24 -> 23
9999 mem: storing 1238 in location 1099
9999 mem: incrementing refcount of 1238: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1238
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1238
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1099 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1239
9998 run: its type is "character"
9999 mem: location 1239 is 10
9999 mem: storing 10 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 10
9999 mem: storing 1 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1101 is 0
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 1602
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1602 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1242
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1589
9999 mem: incrementing refcount of 1242: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1242
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1245
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1245 is 1238
9999 mem: storing 1238 in location 1590
9999 mem: incrementing refcount of 1238: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1238
9999 mem: storing 1238 in location 1603
9999 mem: incrementing refcount of 1238: 17 -> 18
 107 run: jump-if {prev: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1238
9998 run: jumping to instruction 15
 107 run: return {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1603 is 1238
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1238
9999 mem: storing 1238 in location 1181
9999 mem: incrementing refcount of 1238: 18 -> 19
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1238
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1238
9999 mem: location 1179 is 1151
9999 mem: decrementing refcount of 1242: 24 -> 23
9999 mem: storing 1238 in location 1151
9999 mem: incrementing refcount of 1238: 19 -> 20
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1178 is 0
9999 mem: storing 1 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1178 is 1
9999 mem: location 1177 is 2
9999 mem: storing 0 in location 1180
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1179 is 1151
9999 mem: location 1151 is 1238
9999 mem: location 1175 is 1149
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1591
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1594
9999 mem: incrementing refcount of 1238: 20 -> 21
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1595
9999 mem: incrementing refcount of 1149: 22 -> 23
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1594 is 1238
9999 mem: storing 1238 in location 1596
9999 mem: incrementing refcount of 1238: 21 -> 22
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1596 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1596 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1239
9998 run: its type is "character"
9999 mem: location 1239 is 10
9999 mem: storing 10 in location 1597
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1238
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1598
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1238
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1599
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1599 is 3
9999 mem: location 1598 is 0
9999 mem: storing 3 in location 1600
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1238
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1595 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1150
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1150 is 1168
9999 mem: storing 1168 in location 1601
9999 mem: incrementing refcount of 1168: 12 -> 13
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1238
9999 mem: location 1601 is 1168
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1099
9999 mem: incrementing refcount of 1238: 22 -> 23
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1168 in location 1100
9999 mem: incrementing refcount of 1168: 13 -> 14
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1101
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1099 is 1238
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1238
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1102 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1238
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1589
9999 mem: incrementing refcount of 1238: 23 -> 24
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1238
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1234
9999 mem: storing 1234 in location 1590
9999 mem: incrementing refcount of 1234: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1238: 24 -> 23
9999 mem: storing 1234 in location 1099
9999 mem: incrementing refcount of 1234: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1234
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1234
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1099 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1235
9998 run: its type is "character"
9999 mem: location 1235 is 121
9999 mem: storing 121 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 121
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 0
9999 mem: storing 1 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1234
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1589
9999 mem: incrementing refcount of 1234: 16 -> 17
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1234
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1230
9999 mem: storing 1230 in location 1590
9999 mem: incrementing refcount of 1230: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1234: 17 -> 16
9999 mem: storing 1230 in location 1099
9999 mem: incrementing refcount of 1230: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1230
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1230
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1099 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1231
9998 run: its type is "character"
9999 mem: location 1231 is 120
9999 mem: storing 120 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 120
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 1
9999 mem: storing 2 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1230
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1589
9999 mem: incrementing refcount of 1230: 16 -> 17
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1230
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1226
9999 mem: storing 1226 in location 1590
9999 mem: incrementing refcount of 1226: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1230: 17 -> 16
9999 mem: storing 1226 in location 1099
9999 mem: incrementing refcount of 1226: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1226
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1226
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1099 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is "character"
9999 mem: location 1227 is 99
9999 mem: storing 99 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 99
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 2
9999 mem: storing 3 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1226
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1589
9999 mem: incrementing refcount of 1226: 16 -> 17
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1226
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1222
9999 mem: storing 1222 in location 1590
9999 mem: incrementing refcount of 1222: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1226: 17 -> 16
9999 mem: storing 1222 in location 1099
9999 mem: incrementing refcount of 1222: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1222
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1222
9999 mem: location 1100 is 1168
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1099 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is "character"
9999 mem: location 1223 is 10
9999 mem: storing 10 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 10
9999 mem: storing 1 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1101 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1602
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1602 is 3
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1602 is 3
9999 mem: location 1600 is 3
9999 mem: storing 0 in location 1604
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1604 is 0
9998 run: jump-if fell through
 107 run: {max: "number"} <- copy {max-line-length: "number"}
9999 mem: location 1600 is 3
9999 mem: storing 3 in location 1604
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1604 is 3
9999 mem: storing 4 in location 1604
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1605
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1605 is 0
9999 mem: location 1604 is 4
9999 mem: storing 0 in location 1606
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1238
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1589
9999 mem: incrementing refcount of 1238: 23 -> 24
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1238
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1241
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1241 is 1234
9999 mem: storing 1234 in location 1590
9999 mem: incrementing refcount of 1234: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1234
9999 mem: storing 1234 in location 1603
9999 mem: incrementing refcount of 1234: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1603 is 1234
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1603 is 1234
9999 mem: decrementing refcount of 1238: 24 -> 23
9999 mem: storing 1234 in location 1596
9999 mem: incrementing refcount of 1234: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1605 is 0
9999 mem: storing 1 in location 1605
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1605 is 1
9999 mem: location 1604 is 4
9999 mem: storing 0 in location 1606
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1234
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1589
9999 mem: incrementing refcount of 1234: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1234
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1237
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1237 is 1230
9999 mem: storing 1230 in location 1590
9999 mem: incrementing refcount of 1230: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1234: 20 -> 19
9999 mem: storing 1230 in location 1603
9999 mem: incrementing refcount of 1230: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1603 is 1230
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1603 is 1230
9999 mem: decrementing refcount of 1234: 19 -> 18
9999 mem: storing 1230 in location 1596
9999 mem: incrementing refcount of 1230: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1605 is 1
9999 mem: storing 2 in location 1605
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1605 is 2
9999 mem: location 1604 is 4
9999 mem: storing 0 in location 1606
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1230
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1589
9999 mem: incrementing refcount of 1230: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1230
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1233
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1233 is 1226
9999 mem: storing 1226 in location 1590
9999 mem: incrementing refcount of 1226: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1230: 20 -> 19
9999 mem: storing 1226 in location 1603
9999 mem: incrementing refcount of 1226: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1603 is 1226
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1603 is 1226
9999 mem: decrementing refcount of 1230: 19 -> 18
9999 mem: storing 1226 in location 1596
9999 mem: incrementing refcount of 1226: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1605 is 2
9999 mem: storing 3 in location 1605
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1605 is 3
9999 mem: location 1604 is 4
9999 mem: storing 0 in location 1606
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1226
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1589
9999 mem: incrementing refcount of 1226: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1226
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1229
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1229 is 1222
9999 mem: storing 1222 in location 1590
9999 mem: incrementing refcount of 1222: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1590 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1226: 20 -> 19
9999 mem: storing 1222 in location 1603
9999 mem: incrementing refcount of 1222: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1603 is 1222
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1603 is 1222
9999 mem: decrementing refcount of 1226: 19 -> 18
9999 mem: storing 1222 in location 1596
9999 mem: incrementing refcount of 1222: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1605 is 3
9999 mem: storing 4 in location 1605
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1605 is 4
9999 mem: location 1604 is 4
9999 mem: storing 1 in location 1606
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1606 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1596 is 1222
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: decrementing refcount of 1238: 23 -> 22
9999 mem: storing 1222 in location 1181
9999 mem: incrementing refcount of 1222: 19 -> 20
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1222
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1222
9999 mem: location 1179 is 1151
9999 mem: decrementing refcount of 1238: 22 -> 21
9999 mem: storing 1222 in location 1151
9999 mem: incrementing refcount of 1222: 20 -> 21
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1178 is 1
9999 mem: storing 2 in location 1178
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1178 is 2
9999 mem: location 1177 is 2
9999 mem: storing 1 in location 1180
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 1
9998 run: jumping to instruction 14
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1149
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 23 -> 22
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 22 -> 23
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1460
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1461
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1462
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1422 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1222
9999 mem: storing 1222 in location 1463
9999 mem: incrementing refcount of 1222: 21 -> 22
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 473
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1565
9999 mem: storing 1565 in location 1440
9999 mem: incrementing refcount of 1565: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1457 is 1
9999 mem: location 1458 is 0
9999 mem: location 1459 is 1242
9999 mem: location 1461 is 1
9999 mem: location 1462 is 0
9999 mem: location 1463 is 1222
9999 mem: location 1460 is 0
9999 mem: location 1440 is 1565
9999 mem: skipping refcount at 1565
9999 mem: location 1440 is 1565
9999 mem: skipping refcount at 1565
9999 mem: storing 1 in location 1566
9999 mem: storing 1 in location 1567
9999 mem: storing 0 in location 1568
9999 mem: storing 1242 in location 1569
9999 mem: storing 1 in location 1570
9999 mem: storing 0 in location 1571
9999 mem: storing 1222 in location 1572
9999 mem: storing 0 in location 1573
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1422 is 1149
9999 mem: location 1440 is 1565
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1182
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1185
9999 mem: incrementing refcount of 1149: 23 -> 24
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1565 in location 1186
9999 mem: incrementing refcount of 1565: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1562
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1187
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1186 is 1565
9999 mem: location 1187 is 1160
9999 mem: location 1160 is 1562
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1162
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1565 in location 1165
9999 mem: incrementing refcount of 1565: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1562 in location 1166
9999 mem: incrementing refcount of 1562: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1607
9999 mem: storing 1607 in location 1167
9999 mem: incrementing refcount of 1607: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1165 is 1565
9999 mem: location 1166 is 1562
9999 mem: location 1167 is 1607
9999 mem: skipping refcount at 1607
9999 mem: location 1167 is 1607
9999 mem: skipping refcount at 1607
9999 mem: storing 1565 in location 1608
9999 mem: storing 1562 in location 1609
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1607
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1607
9999 mem: location 1187 is 1160
9999 mem: decrementing refcount of 1562: 3 -> 2
9999 mem: storing 1607 in location 1160
9999 mem: incrementing refcount of 1607: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1185 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1188
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1188 is 1161
9999 mem: storing 0 in location 1161
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1185 is 1149
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1149
9999 mem: decrementing refcount of 1149: 24 -> 23
9999 mem: storing 1149 in location 1422
9999 mem: incrementing refcount of 1149: 23 -> 24
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1151
9999 mem: location 1151 is 1222
9999 mem: location 1456 is 1242
9999 mem: storing 0 in location 1469
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1469 is 0
9999 mem: storing 1 in location 1427
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1421 is 1008
9999 mem: location 1422 is 1149
9999 mem: location 1427 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1149
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 127 -> 128
9999 mem: decrementing refcount of 1149: 24 -> 23
9999 mem: storing 1149 in location 1393
9999 mem: incrementing refcount of 1149: 23 -> 24
9999 mem: storing 1 in location 1403
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1403 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1391 is 1008
9999 mem: location 1393 is 1149
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 128 -> 129
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1100
9999 mem: incrementing refcount of 1149: 24 -> 25
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1100 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1149
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1310
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 129 -> 130
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1149 in location 1314
9999 mem: incrementing refcount of 1149: 25 -> 26
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1314 is 1149
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 0
9999 mem: storing 0 in location 1315
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1313 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1589
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1589 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1590
 107 run: return {height: "number"}
9999 mem: location 1590 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1316
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1317
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1151 is 1222
9999 mem: storing 1222 in location 1318
9999 mem: incrementing refcount of 1222: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1222
9999 mem: storing 1222 in location 1319
9999 mem: incrementing refcount of 1222: 23 -> 24
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1589
9999 mem: incrementing refcount of 1222: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1222
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1589 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1590
9999 mem: incrementing refcount of 1226: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 25 -> 24
9999 mem: storing 1226 in location 1318
9999 mem: incrementing refcount of 1226: 19 -> 20
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1320
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1323
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1324
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1242
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1325
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
9990 schedule: move-cursor/render/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 131 -> 132
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1226
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1222
9999 mem: location 1325 is 1153
9999 mem: decrementing refcount of 1242: 23 -> 22
9999 mem: storing 1222 in location 1153
9999 mem: incrementing refcount of 1222: 24 -> 25
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1318 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is "character"
9999 mem: location 1227 is 99
9999 mem: storing 99 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1610
9999 mem: storing 10 in location 1611
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 99
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 99
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 99
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 99
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 100
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 99
9999 mem: location 1375 is 1036
9999 mem: storing 99 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1374 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1226
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1589
9999 mem: incrementing refcount of 1226: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1226
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1590
9999 mem: incrementing refcount of 1230: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 21 -> 20
9999 mem: storing 1230 in location 1318
9999 mem: incrementing refcount of 1230: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1589
9999 mem: incrementing refcount of 1222: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1222
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1222
9999 mem: skipping refcount at 1222
9999 mem: location 1223 is 10
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1589 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1224
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1590
9999 mem: incrementing refcount of 1226: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: decrementing refcount of 1222: 26 -> 25
9999 mem: storing 1226 in location 1319
9999 mem: incrementing refcount of 1226: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1230
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1318 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1231
9998 run: its type is "character"
9999 mem: location 1231 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 120
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 120
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1038
9999 mem: storing 120 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1374 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1230
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1589
9999 mem: incrementing refcount of 1230: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1230
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1590
9999 mem: incrementing refcount of 1234: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 21 -> 20
9999 mem: storing 1234 in location 1318
9999 mem: incrementing refcount of 1234: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1226
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1589
9999 mem: incrementing refcount of 1226: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1226
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9999 mem: location 1227 is 99
9999 mem: location 1228 is 1230
9999 mem: location 1229 is 1222
9999 mem: location 1589 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1228
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1228 is 1230
9999 mem: storing 1230 in location 1590
9999 mem: incrementing refcount of 1230: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1230
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1230
9999 mem: decrementing refcount of 1226: 23 -> 22
9999 mem: storing 1230 in location 1319
9999 mem: incrementing refcount of 1230: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1234
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 2
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1318 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1235
9998 run: its type is "character"
9999 mem: location 1235 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 121
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 121
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1040
9999 mem: storing 121 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1040
9999 mem: location 1040 is 121
9999 mem: location 1041 is 7
9999 mem: location 1374 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1234
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1589
9999 mem: incrementing refcount of 1234: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1234
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1590
9999 mem: incrementing refcount of 1238: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 21 -> 20
9999 mem: storing 1238 in location 1318
9999 mem: incrementing refcount of 1238: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1230
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1230 in location 1589
9999 mem: incrementing refcount of 1230: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1230
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9999 mem: location 1231 is 120
9999 mem: location 1232 is 1234
9999 mem: location 1233 is 1226
9999 mem: location 1589 is 1230
9999 mem: skipping refcount at 1230
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1234
9999 mem: storing 1234 in location 1590
9999 mem: incrementing refcount of 1234: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1234
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1234
9999 mem: decrementing refcount of 1230: 23 -> 22
9999 mem: storing 1234 in location 1319
9999 mem: incrementing refcount of 1234: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1238
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1328
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1318 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1239
9998 run: its type is "character"
9999 mem: location 1239 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 10
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 10
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 1
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 3
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1331
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 41 -> 42
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1374 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 1
9999 mem: storing 2 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 2
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 137 -> 138
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1238
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1589
9999 mem: incrementing refcount of 1238: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1238
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1242
9999 mem: storing 1242 in location 1590
9999 mem: incrementing refcount of 1242: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1242
9999 mem: decrementing refcount of 1238: 24 -> 23
9999 mem: storing 1242 in location 1318
9999 mem: incrementing refcount of 1242: 23 -> 24
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1234
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1234 in location 1589
9999 mem: incrementing refcount of 1234: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1234
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9999 mem: location 1235 is 121
9999 mem: location 1236 is 1238
9999 mem: location 1237 is 1230
9999 mem: location 1589 is 1234
9999 mem: skipping refcount at 1234
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1238
9999 mem: storing 1238 in location 1590
9999 mem: incrementing refcount of 1238: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1238
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1238
9999 mem: decrementing refcount of 1234: 23 -> 22
9999 mem: storing 1238 in location 1319
9999 mem: incrementing refcount of 1238: 24 -> 25
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1242
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 2
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1318 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1243
9998 run: its type is "character"
9999 mem: location 1243 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 10
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 10
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 2
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 138 -> 139
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 139 -> 140
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 42 -> 43
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 101
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1056
9999 mem: storing 32 in location 1056
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1374 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1057
9999 mem: storing 7 in location 1057
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 140 -> 141
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 43 -> 44
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1058
9999 mem: storing 32 in location 1058
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1374 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1059
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 141 -> 140
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 44 -> 45
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 121
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1060
9999 mem: storing 32 in location 1060
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1060
9999 mem: location 1060 is 32
9999 mem: location 1061 is 7
9999 mem: location 1374 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1061
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 45 -> 46
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1374 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 142 -> 143
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 2
9999 mem: storing 3 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 3
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 143 -> 144
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 143 -> 144
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1589
9999 mem: incrementing refcount of 1242: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1590
9999 mem: incrementing refcount of 1246: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 25 -> 24
9999 mem: storing 1246 in location 1318
9999 mem: incrementing refcount of 1246: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1238
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1238 in location 1589
9999 mem: incrementing refcount of 1238: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1238
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9999 mem: location 1239 is 10
9999 mem: location 1240 is 1242
9999 mem: location 1241 is 1234
9999 mem: location 1589 is 1238
9999 mem: skipping refcount at 1238
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1242
9999 mem: storing 1242 in location 1590
9999 mem: incrementing refcount of 1242: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1242
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1242
9999 mem: decrementing refcount of 1238: 26 -> 25
9999 mem: storing 1242 in location 1319
9999 mem: incrementing refcount of 1242: 25 -> 26
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1246
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1318 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1247
9998 run: its type is "character"
9999 mem: location 1247 is 100
9999 mem: storing 100 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 100
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 100
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 100
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 0
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 100
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 144 -> 145
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 102
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 100
9999 mem: location 1375 is 1076
9999 mem: storing 100 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1076
9999 mem: location 1076 is 100
9999 mem: location 1077 is 7
9999 mem: location 1374 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1365 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1246
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1589
9999 mem: incrementing refcount of 1246: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1246
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1589 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1590
9999 mem: incrementing refcount of 1250: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 17 -> 16
9999 mem: storing 1250 in location 1318
9999 mem: incrementing refcount of 1250: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1242
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1242 in location 1589
9999 mem: incrementing refcount of 1242: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1242
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9999 mem: location 1243 is 10
9999 mem: location 1244 is 1246
9999 mem: location 1245 is 1238
9999 mem: location 1589 is 1242
9999 mem: skipping refcount at 1242
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1246
9999 mem: storing 1246 in location 1590
9999 mem: incrementing refcount of 1246: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1246
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1246
9999 mem: decrementing refcount of 1242: 27 -> 26
9999 mem: storing 1246 in location 1319
9999 mem: incrementing refcount of 1246: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 0
9999 mem: storing 1 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1250
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1318 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1251
9998 run: its type is "character"
9999 mem: location 1251 is 120
9999 mem: storing 120 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 120
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 120
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 120
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 1
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 120
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 120
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 120
9999 mem: location 1375 is 1078
9999 mem: storing 120 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1374 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1365 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1250
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1589
9999 mem: incrementing refcount of 1250: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1250
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1589 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1590
9999 mem: incrementing refcount of 1254: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 17 -> 16
9999 mem: storing 1254 in location 1318
9999 mem: incrementing refcount of 1254: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1246
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1246 in location 1589
9999 mem: incrementing refcount of 1246: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1246
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1246
9999 mem: skipping refcount at 1246
9999 mem: location 1247 is 100
9999 mem: location 1248 is 1250
9999 mem: location 1249 is 1242
9999 mem: location 1589 is 1246
9999 mem: skipping refcount at 1246
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1250
9999 mem: storing 1250 in location 1590
9999 mem: incrementing refcount of 1250: 16 -> 17
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-empty-lines
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1250
9999 mem: decrementing refcount of 1246: 19 -> 18
9999 mem: storing 1250 in location 1319
9999 mem: incrementing refcount of 1250: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 1
9999 mem: storing 2 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1254
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1318 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9998 run: its type is "character"
9999 mem: location 1255 is 121
9999 mem: storing 121 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 121
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 121
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 121
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 121
9999 mem: storing 0 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1322 is 2
9999 mem: location 1317 is 3
9999 mem: storing 0 in location 1332
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1329 is 121
9999 mem: location 1320 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 146 -> 147
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 121 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 121
  90 print-character: 121 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 121
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1375
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 121
9999 mem: location 1375 is 1080
9999 mem: storing 121 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1080
9999 mem: location 1080 is 121
9999 mem: location 1081 is 7
9999 mem: location 1374 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1376
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1365 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1254
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1589
9999 mem: incrementing refcount of 1254: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1254
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1589 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1590
9999 mem: incrementing refcount of 1258: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 17 -> 16
9999 mem: storing 1258 in location 1318
9999 mem: incrementing refcount of 1258: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1250
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1589
9999 mem: incrementing refcount of 1250: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1250
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 120
9999 mem: location 1252 is 1254
9999 mem: location 1253 is 1246
9999 mem: location 1589 is 1250
9999 mem: skipping refcount at 1250
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1254
9999 mem: storing 1254 in location 1590
9999 mem: incrementing refcount of 1254: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1254
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1254
9999 mem: decrementing refcount of 1250: 19 -> 18
9999 mem: storing 1254 in location 1319
9999 mem: incrementing refcount of 1254: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1322 is 2
9999 mem: storing 3 in location 1322
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1258
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1316 is 4
9999 mem: storing 0 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1318 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1318 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1259
9998 run: its type is "character"
9999 mem: location 1259 is 10
9999 mem: storing 10 in location 1329
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1320 is 7
9999 mem: location 1329 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1610
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1613
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1614
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1613 is 7
9999 mem: storing 1 in location 1615
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1614 is 10
9999 mem: storing 0 in location 1616
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1616 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1617
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1617 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1614 is 10
9999 mem: storing 0 in location 1619
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1613 is 7
9999 mem: storing 0 in location 1620
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1613 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1320
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1329 is 10
9999 mem: storing 1 in location 1330
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 3
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1322 is 3
9999 mem: location 1317 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 147 -> 148
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 49 -> 50
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1375
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1356 is 32
9999 mem: location 1375 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1374 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1374 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1376
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1357 is 7
9999 mem: location 1376 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1377
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1377 is 9
9999 mem: storing 0 in location 1378
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1365 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1365 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 148 -> 149
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1321 is 3
9999 mem: storing 4 in location 1321
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1322
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1313 is 1008
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 149 -> 150
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1313
9999 mem: incrementing refcount of 1008: 149 -> 150
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1258
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1258 in location 1589
9999 mem: incrementing refcount of 1258: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1258
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1258
9999 mem: skipping refcount at 1258
9999 mem: location 1259 is 10
9999 mem: location 1260 is 1262
9999 mem: location 1261 is 1254
9999 mem: location 1589 is 1258
9999 mem: skipping refcount at 1258
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1262
9999 mem: storing 1262 in location 1590
9999 mem: incrementing refcount of 1262: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1262
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1262
9999 mem: decrementing refcount of 1258: 17 -> 16
9999 mem: storing 1262 in location 1318
9999 mem: incrementing refcount of 1262: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1319 is 1254
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1589
9999 mem: incrementing refcount of 1254: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1589 is 1254
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1589 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 121
9999 mem: location 1256 is 1258
9999 mem: location 1257 is 1250
9999 mem: location 1589 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1258
9999 mem: storing 1258 in location 1590
9999 mem: incrementing refcount of 1258: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1590 is 1258
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1258
9999 mem: decrementing refcount of 1254: 19 -> 18
9999 mem: storing 1258 in location 1319
9999 mem: incrementing refcount of 1258: 17 -> 18
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1318 is 1262
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1316 is 4
9999 mem: storing 1 in location 1326
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1326 is 1
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1294
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1334
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1318 is 1262
9999 mem: location 1334 is 1152
9999 mem: decrementing refcount of 1294: 7 -> 6
9999 mem: storing 1262 in location 1152
9999 mem: incrementing refcount of 1262: 14 -> 15
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1327
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 0
9999 mem: location 1324 is 1158
9999 mem: location 1158 is 0
9999 mem: storing 1 in location 1335
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1327 is 0
9999 mem: location 1335 is 1
9999 mem: storing 0 in location 1336
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1321 is 4
9999 mem: location 1323 is 1157
9999 mem: location 1157 is 1
9999 mem: storing 0 in location 1337
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 0 in location 1338
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1314 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1339
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1321 is 4
9999 mem: location 1339 is 1156
9999 mem: storing 4 in location 1156
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1321 is 4
9999 mem: location 1322 is 0
9999 mem: location 1313 is 1008
9999 mem: location 1314 is 1149
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 150 -> 151
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 151 -> 152
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 151 -> 152
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 152 -> 153
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 152 -> 153
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 153 -> 154
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 153 -> 154
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 154 -> 155
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 154 -> 155
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 155 -> 156
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1408
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1409
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1410
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1411
9999 mem: storing 1 in location 1412
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1412 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1413
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1415
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1408 is 5
9999 mem: location 1409 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 156 -> 157
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1006 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1407
9999 mem: incrementing refcount of 1008: 156 -> 157
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 0
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 157 -> 158
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 0
9999 mem: storing 1 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 1
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 158 -> 159
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 1
9999 mem: storing 2 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 2
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 159 -> 160
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-empty-lines
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 2
9999 mem: storing 3 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 3
9999 mem: location 1410 is 3
9999 mem: storing 1 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1407 is 1008
9999 mem: location 1411 is 9480
9999 mem: location 1413 is 245
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 160 -> 161
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1409 is 3
9999 mem: storing 4 in location 1409
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1409 is 4
9999 mem: location 1410 is 3
9999 mem: storing 0 in location 1417
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1407 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 161 -> 162
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1531
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1534
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1535
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1536
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1534 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1537
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1535 is 6
9999 mem: location 1537 is 1011
9999 mem: storing 6 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1538
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1536 is 0
9999 mem: location 1538 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1534 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 163 -> 162
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 162 -> 163
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1172
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 163 -> 164
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1176
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1177
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1178
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1180 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1179
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 164 -> 165
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 165 -> 164
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 164 -> 165
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 1
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 165 -> 166
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 166 -> 165
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 2
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 166 -> 167
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 3
9999 mem: location 1177 is 3
9999 mem: storing 0 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1175 is 1008
9999 mem: location 1178 is 32
9999 mem: location 1179 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 167 -> 168
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 4
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 168 -> 167
9999 mem: storing 1008 in location 1175
9999 mem: incrementing refcount of 1008: 167 -> 168
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1176 is 3
9999 mem: storing 4 in location 1176
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1176 is 4
9999 mem: location 1177 is 3
9999 mem: storing 1 in location 1181
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1181 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1175 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1539
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1543
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1544
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1545
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1543 is 6
9999 mem: storing 7 in location 1543
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1542 is 1008
9999 mem: location 1543 is 7
9999 mem: location 1544 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1531
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1534
9999 mem: incrementing refcount of 1008: 169 -> 170
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1535
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1536
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1534 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1537
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1535 is 7
9999 mem: location 1537 is 1011
9999 mem: storing 7 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1534 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1538
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1536 is 0
9999 mem: location 1538 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1534 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 170 -> 169
9999 mem: storing 1008 in location 1542
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1542 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1589
9999 mem: incrementing refcount of 1008: 170 -> 171
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1589 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1589 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1590
 108 run: return {height: "number"}
9999 mem: location 1590 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1546
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1543 is 7
9999 mem: location 1546 is 4
9999 mem: storing 1 in location 1547
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1547 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1542 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1149
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 171 -> 170
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 170 -> 171
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1394
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9999 mem: location 1150 is 1168
9999 mem: location 1151 is 1222
9999 mem: location 1152 is 1262
9999 mem: location 1153 is 1222
9999 mem: location 1154 is 0
9999 mem: location 1155 is 3
9999 mem: location 1156 is 4
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 1
9999 mem: location 1160 is 1607
9999 mem: location 1161 is 0
9999 mem: location 1393 is 1149
9999 mem: skipping refcount at 1149
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 0
9999 mem: storing 0 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1391 is 1008
9999 mem: location 1394 is 1
9999 mem: location 1395 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 171 -> 172
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1391
9999 mem: incrementing refcount of 1008: 171 -> 172
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1392 is 1583
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1404
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1583 in location 1407
9999 mem: incrementing refcount of 1583: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1407 is 1583
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 1
9999 mem: location 1585 is 1577
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1584
9999 mem: storing 1584 in location 1408
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9999 mem: location 1584 is 1
9999 mem: location 1585 is 1577
9999 mem: location 1407 is 1583
9999 mem: skipping refcount at 1583
9998 run: address to copy is 1585
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1585 is 1577
9999 mem: storing 1577 in location 1409
9999 mem: incrementing refcount of 1577: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1409 is 1577
9999 mem: skipping refcount at 1577
9999 mem: storing 1 in location 1410
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1408 is 1584
9999 mem: location 1584 is 1
9999 mem: location 1410 is 1
9999 mem: storing 1 in location 1411
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1411 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1586
9999 mem: storing 1586 in location 1412
9999 mem: incrementing refcount of 1586: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1412 is 1586
9999 mem: skipping refcount at 1586
9999 mem: location 1587 is 0
9999 mem: location 1588 is 0
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1407 is 1583
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1583
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: decrementing refcount of 1583: 3 -> 2
9999 mem: storing 1583 in location 1392
9999 mem: incrementing refcount of 1583: 2 -> 3
9999 mem: storing 1 in location 1400
9999 mem: storing 1 in location 1401
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1401 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1391 is 1008
9999 mem: location 1392 is 1583
9999 mem: location 1393 is 1149
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .cxy       .\n    .          .\n    .dxy       .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
