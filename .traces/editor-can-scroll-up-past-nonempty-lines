9991 parse: --- defining scenario_editor-can-scroll-up-past-nonempty-lines
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {4: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"axx\nbxx\ncxx\ndxx\nexx\nfxx\ngxx\nhxx\n": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"axx\nbxx\ncxx\ndxx\nexx\nfxx\ngxx\nhxx\n": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {4: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .axx       .\n    .bxx       .\n    .cxx       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .axx       .\n    .bxx       .\n    .cxx       .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .cxx       .\n    .dxx       .\n    .exx       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .cxx       .\n    .dxx       .\n    .exx       .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .exx       .\n    .fxx       .\n    .gxx       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .exx       .\n    .fxx       .\n    .gxx       .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-up\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .cxx       .\n    .dxx       .\n    .exx       .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .cxx       .\n    .dxx       .\n    .exx       .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-scroll-up-past-nonempty-lines has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- deduce types for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- transform names for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- transform braces for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- perform checks for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- type-check calls inside recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- checking reply instructions against header for scenario_editor-can-scroll-up-past-nonempty-lines
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-scroll-up-past-nonempty-lines
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {4: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 4
9999 mem: storing 40 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 40
9999 mem: array size is 40
9999 mem: allocating size 82
9999 mem: new alloc: 1014
9999 mem: storing 40 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 4
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 4 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1096
9999 mem: storing 7 in location 1097
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1099 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1100
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1101
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1102
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 0
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 0
9999 mem: storing 1016 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1016
9999 mem: location 1104 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 0
9999 mem: storing 1 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 1
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 1
9999 mem: storing 1018 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1018
9999 mem: location 1104 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 1
9999 mem: storing 2 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 2
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 2
9999 mem: storing 1020 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1020
9999 mem: location 1104 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 2
9999 mem: storing 3 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 3
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 3
9999 mem: storing 1022 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1022
9999 mem: location 1104 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 3
9999 mem: storing 4 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 4
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 4
9999 mem: storing 1024 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1024
9999 mem: location 1104 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 4
9999 mem: storing 5 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 5
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 5
9999 mem: storing 1026 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1026
9999 mem: location 1104 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 5
9999 mem: storing 6 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 6
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 6
9999 mem: storing 1028 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1028
9999 mem: location 1104 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 6
9999 mem: storing 7 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 7
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 7
9999 mem: storing 1030 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1030
9999 mem: location 1104 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 7
9999 mem: storing 8 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 8
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 8
9999 mem: storing 1032 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1032
9999 mem: location 1104 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 8
9999 mem: storing 9 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 9
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 9
9999 mem: storing 1034 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1034
9999 mem: location 1104 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 9
9999 mem: storing 10 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 10
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 10
9999 mem: storing 1036 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1036
9999 mem: location 1104 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 10
9999 mem: storing 11 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 11
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 11
9999 mem: storing 1038 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1038
9999 mem: location 1104 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 11
9999 mem: storing 12 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 12
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 12
9999 mem: storing 1040 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1040
9999 mem: location 1104 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 12
9999 mem: storing 13 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 13
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 13
9999 mem: storing 1042 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1042
9999 mem: location 1104 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 13
9999 mem: storing 14 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 14
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 14
9999 mem: storing 1044 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1044
9999 mem: location 1104 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 14
9999 mem: storing 15 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 15
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 15
9999 mem: storing 1046 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1046
9999 mem: location 1104 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 15
9999 mem: storing 16 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 16
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 16
9999 mem: storing 1048 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1048
9999 mem: location 1104 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 16
9999 mem: storing 17 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 17
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 17
9999 mem: storing 1050 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1050
9999 mem: location 1104 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 17
9999 mem: storing 18 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 18
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 18
9999 mem: storing 1052 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1052
9999 mem: location 1104 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 18
9999 mem: storing 19 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 19
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 19
9999 mem: storing 1054 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1054
9999 mem: location 1104 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 19
9999 mem: storing 20 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 20
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 20
9999 mem: storing 1056 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1056
9999 mem: location 1104 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 20
9999 mem: storing 21 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 21
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 21
9999 mem: storing 1058 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1058
9999 mem: location 1104 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 21
9999 mem: storing 22 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 22
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 22
9999 mem: storing 1060 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1060
9999 mem: location 1104 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 22
9999 mem: storing 23 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 23
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 23
9999 mem: storing 1062 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1062
9999 mem: location 1104 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 23
9999 mem: storing 24 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 24
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 24
9999 mem: storing 1064 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1064
9999 mem: location 1104 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 24
9999 mem: storing 25 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 25
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 25
9999 mem: storing 1066 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1066
9999 mem: location 1104 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 25
9999 mem: storing 26 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 26
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 26
9999 mem: storing 1068 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1068
9999 mem: location 1104 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 26
9999 mem: storing 27 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 27
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 27
9999 mem: storing 1070 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1070
9999 mem: location 1104 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 27
9999 mem: storing 28 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 28
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 28
9999 mem: storing 1072 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1072
9999 mem: location 1104 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 28
9999 mem: storing 29 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 29
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 29
9999 mem: storing 1074 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1074
9999 mem: location 1104 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 29
9999 mem: storing 30 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 30
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 30
9999 mem: storing 1076 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1076
9999 mem: location 1104 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 30
9999 mem: storing 31 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 31
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 31
9999 mem: storing 1078 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1078
9999 mem: location 1104 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 31
9999 mem: storing 32 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 32
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 32
9999 mem: storing 1080 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1080
9999 mem: location 1104 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 32
9999 mem: storing 33 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 33
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 33
9999 mem: storing 1082 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1082
9999 mem: location 1104 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 33
9999 mem: storing 34 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 34
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 34
9999 mem: storing 1084 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1084
9999 mem: location 1104 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 34
9999 mem: storing 35 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 35
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 35
9999 mem: storing 1086 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1086
9999 mem: location 1104 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 35
9999 mem: storing 36 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 36
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 36
9999 mem: storing 1088 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1088
9999 mem: location 1104 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 36
9999 mem: storing 37 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 37
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 37
9999 mem: storing 1090 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1090
9999 mem: location 1104 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 37
9999 mem: storing 38 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 38
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 38
9999 mem: storing 1092 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1092
9999 mem: location 1104 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 38
9999 mem: storing 39 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 39
9999 mem: location 1101 is 40
9999 mem: storing 0 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1100 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1102 is 39
9999 mem: storing 1094 in location 1104
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1104 is 1094
9999 mem: location 1104 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1102 is 39
9999 mem: storing 40 in location 1102
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1102 is 40
9999 mem: location 1101 is 40
9999 mem: storing 1 in location 1103
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1099 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"axx\nbxx\ncxx\ndxx\nexx\nfxx\ngxx\nhxx\n": "literal-string"}
9999 mem: new string alloc: 1105
9999 mem: storing 1105 in location 1
9999 mem: incrementing refcount of 1105: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9999 mem: location 1 is 1105
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1139
9999 mem: storing 11 in location 1140
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1105 in location 1142
9999 mem: incrementing refcount of 1105: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1144
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1145
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1145 is 4
9999 mem: storing 3 in location 1145
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1152
9999 mem: storing 1152 in location 1146
9999 mem: incrementing refcount of 1152: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1144 is 0
9999 mem: location 1147 is 1157
9999 mem: storing 0 in location 1157
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1145 is 3
9999 mem: location 1147 is 1158
9999 mem: storing 3 in location 1158
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1147 is 1160
9999 mem: storing 1 in location 1160
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1147
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1144 is 0
9999 mem: location 1147 is 1161
9999 mem: storing 0 in location 1161
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1148
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1165
9999 mem: storing 4 in location 1166
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1168
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1169
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1171
9999 mem: storing 1171 in location 1170
9999 mem: incrementing refcount of 1171: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1168 is 167
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1170 is 1171
9999 mem: skipping refcount at 1171
9999 mem: storing 167 in location 1172
9999 mem: storing 0 in location 1173
9999 mem: storing 0 in location 1174
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1169 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1171
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1171
9999 mem: location 1148 is 1153
9999 mem: storing 1171 in location 1153
9999 mem: incrementing refcount of 1171: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1149
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1148 is 1153
9999 mem: location 1153 is 1171
9999 mem: location 1149 is 1154
9999 mem: storing 1171 in location 1154
9999 mem: incrementing refcount of 1171: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1150
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1148 is 1153
9999 mem: location 1153 is 1171
9999 mem: location 1150 is 1156
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1146 is 1152
9999 mem: location 1142 is 1105
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1175
9999 mem: storing 8 in location 1176
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1178
9999 mem: incrementing refcount of 1152: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1105 in location 1179
9999 mem: incrementing refcount of 1105: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1179 is 1105
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9999 mem: storing 32 in location 1180
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1180 is 32
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1181
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1178 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1178 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1182
9999 mem: incrementing refcount of 1171: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 0
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 0
9998 run: address to copy is 1107
9998 run: its type is character
9999 mem: location 1107 is 97
9999 mem: storing 97 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 97
9999 mem: location 1182 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1185
9999 mem: storing 5 in location 1186
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1189
9999 mem: incrementing refcount of 1171: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1192
9999 mem: storing 1192 in location 1190
9999 mem: incrementing refcount of 1192: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1188 is 97
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1193
9999 mem: storing 97 in location 1193
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1190 is 1192
9999 mem: location 1189 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1192 in location 1173
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1189 is 1171
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1195
9999 mem: storing 1171 in location 1195
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 1171
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1194
9999 mem: storing 0 in location 1194
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1196
9999 mem: storing 3 in location 1197
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 7 -> 6
9999 mem: storing 1192 in location 1182
9999 mem: incrementing refcount of 1192: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 0
9999 mem: storing 1 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 1
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 1
9998 run: address to copy is 1108
9998 run: its type is character
9999 mem: location 1108 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1189
9999 mem: incrementing refcount of 1192: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1201
9999 mem: storing 1201 in location 1190
9999 mem: incrementing refcount of 1201: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 0
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1202
9999 mem: storing 120 in location 1202
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 1171
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 0
9999 mem: location 1195 is 1171
9999 mem: location 1190 is 1201
9999 mem: location 1189 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy to is 1194
9999 mem: storing 1201 in location 1194
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 0
9999 mem: location 1204 is 0
9999 mem: location 1189 is 1192
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1204
9999 mem: storing 1192 in location 1204
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1192
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1203
9999 mem: storing 0 in location 1203
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1192
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 5 -> 4
9999 mem: storing 1201 in location 1182
9999 mem: incrementing refcount of 1201: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 1
9999 mem: storing 2 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 2
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 2
9998 run: address to copy is 1109
9998 run: its type is character
9999 mem: location 1109 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1189
9999 mem: incrementing refcount of 1201: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1205
9999 mem: storing 1205 in location 1190
9999 mem: incrementing refcount of 1205: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1206
9999 mem: storing 120 in location 1206
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1192
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1192
9999 mem: location 1190 is 1205
9999 mem: location 1189 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy to is 1203
9999 mem: storing 1205 in location 1203
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 0
9999 mem: location 1208 is 0
9999 mem: location 1189 is 1201
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1208
9999 mem: storing 1201 in location 1208
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 0 in location 1207
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1201
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 5 -> 4
9999 mem: storing 1205 in location 1182
9999 mem: incrementing refcount of 1205: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 2
9999 mem: storing 3 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 3
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 3
9998 run: address to copy is 1110
9998 run: its type is character
9999 mem: location 1110 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1189
9999 mem: incrementing refcount of 1205: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1209
9999 mem: storing 1209 in location 1190
9999 mem: incrementing refcount of 1209: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 0
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1210
9999 mem: storing 10 in location 1210
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 0
9999 mem: location 1208 is 1201
9999 mem: location 1190 is 1209
9999 mem: location 1189 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy to is 1207
9999 mem: storing 1209 in location 1207
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1189 is 1205
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1212
9999 mem: storing 1205 in location 1212
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 0 in location 1211
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1205
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 5 -> 4
9999 mem: storing 1209 in location 1182
9999 mem: incrementing refcount of 1209: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 3
9999 mem: storing 4 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 4
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 4
9998 run: address to copy is 1111
9998 run: its type is character
9999 mem: location 1111 is 98
9999 mem: storing 98 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 98
9999 mem: location 1182 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1189
9999 mem: incrementing refcount of 1209: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1213
9999 mem: storing 1213 in location 1190
9999 mem: incrementing refcount of 1213: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1188 is 98
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1214
9999 mem: storing 98 in location 1214
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 0
9999 mem: location 1212 is 1205
9999 mem: location 1190 is 1213
9999 mem: location 1189 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy to is 1211
9999 mem: storing 1213 in location 1211
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1189 is 1209
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1216
9999 mem: storing 1209 in location 1216
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1215
9999 mem: storing 0 in location 1215
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1209
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 5 -> 4
9999 mem: storing 1213 in location 1182
9999 mem: incrementing refcount of 1213: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 4
9999 mem: storing 5 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 5
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 5
9998 run: address to copy is 1112
9998 run: its type is character
9999 mem: location 1112 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1189
9999 mem: incrementing refcount of 1213: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1217
9999 mem: storing 1217 in location 1190
9999 mem: incrementing refcount of 1217: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1218
9999 mem: storing 120 in location 1218
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 0
9999 mem: location 1216 is 1209
9999 mem: location 1190 is 1217
9999 mem: location 1189 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy to is 1215
9999 mem: storing 1217 in location 1215
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 0
9999 mem: location 1220 is 0
9999 mem: location 1189 is 1213
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1220
9999 mem: storing 1213 in location 1220
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 0
9999 mem: location 1220 is 1213
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1219
9999 mem: storing 0 in location 1219
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1213
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 5 -> 4
9999 mem: storing 1217 in location 1182
9999 mem: incrementing refcount of 1217: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 5
9999 mem: storing 6 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 6
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 6
9998 run: address to copy is 1113
9998 run: its type is character
9999 mem: location 1113 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1189
9999 mem: incrementing refcount of 1217: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1221
9999 mem: storing 1221 in location 1190
9999 mem: incrementing refcount of 1221: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1222
9999 mem: storing 120 in location 1222
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 0
9999 mem: location 1220 is 1213
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 0
9999 mem: location 1220 is 1213
9999 mem: location 1190 is 1221
9999 mem: location 1189 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy to is 1219
9999 mem: storing 1221 in location 1219
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1189 is 1217
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1224
9999 mem: storing 1217 in location 1224
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1223
9999 mem: storing 0 in location 1223
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1217
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 5 -> 4
9999 mem: storing 1221 in location 1182
9999 mem: incrementing refcount of 1221: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 6
9999 mem: storing 7 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 7
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 7
9998 run: address to copy is 1114
9998 run: its type is character
9999 mem: location 1114 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1189
9999 mem: incrementing refcount of 1221: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1225
9999 mem: storing 1225 in location 1190
9999 mem: incrementing refcount of 1225: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1226
9999 mem: storing 10 in location 1226
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 0
9999 mem: location 1224 is 1217
9999 mem: location 1190 is 1225
9999 mem: location 1189 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy to is 1223
9999 mem: storing 1225 in location 1223
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 0
9999 mem: location 1189 is 1221
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1228
9999 mem: storing 1221 in location 1228
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1221
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1227
9999 mem: storing 0 in location 1227
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1221
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 5 -> 4
9999 mem: storing 1225 in location 1182
9999 mem: incrementing refcount of 1225: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 7
9999 mem: storing 8 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 8
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 8
9998 run: address to copy is 1115
9998 run: its type is character
9999 mem: location 1115 is 99
9999 mem: storing 99 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 99
9999 mem: location 1182 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1189
9999 mem: incrementing refcount of 1225: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1229
9999 mem: storing 1229 in location 1190
9999 mem: incrementing refcount of 1229: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1188 is 99
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1230
9999 mem: storing 99 in location 1230
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1221
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 0
9999 mem: storing 0 in location 1191
9990 schedule: insert_2/insert-text/new-editor/scenario_editor-can-scroll-up-past-nonempty-lines
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1221
9999 mem: location 1190 is 1229
9999 mem: location 1189 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy to is 1227
9999 mem: storing 1229 in location 1227
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1189 is 1225
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1232
9999 mem: storing 1225 in location 1232
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1225
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1231
9999 mem: storing 0 in location 1231
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1225
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 5 -> 4
9999 mem: storing 1229 in location 1182
9999 mem: incrementing refcount of 1229: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 8
9999 mem: storing 9 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 9
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 9
9998 run: address to copy is 1116
9998 run: its type is character
9999 mem: location 1116 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1189
9999 mem: incrementing refcount of 1229: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1233
9999 mem: storing 1233 in location 1190
9999 mem: incrementing refcount of 1233: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1234
9999 mem: storing 120 in location 1234
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1225
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1225
9999 mem: location 1190 is 1233
9999 mem: location 1189 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy to is 1231
9999 mem: storing 1233 in location 1231
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 0
9999 mem: location 1236 is 0
9999 mem: location 1189 is 1229
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1236
9999 mem: storing 1229 in location 1236
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1235
9999 mem: storing 0 in location 1235
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1229
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 5 -> 4
9999 mem: storing 1233 in location 1182
9999 mem: incrementing refcount of 1233: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 9
9999 mem: storing 10 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 10
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 10
9998 run: address to copy is 1117
9998 run: its type is character
9999 mem: location 1117 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1189
9999 mem: incrementing refcount of 1233: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1237
9999 mem: storing 1237 in location 1190
9999 mem: incrementing refcount of 1237: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1238
9999 mem: storing 120 in location 1238
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 0
9999 mem: location 1236 is 1229
9999 mem: location 1190 is 1237
9999 mem: location 1189 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy to is 1235
9999 mem: storing 1237 in location 1235
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: location 1189 is 1233
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1240
9999 mem: storing 1233 in location 1240
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1233
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1239
9999 mem: storing 0 in location 1239
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1233
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 5 -> 4
9999 mem: storing 1237 in location 1182
9999 mem: incrementing refcount of 1237: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 10
9999 mem: storing 11 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 11
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 11
9998 run: address to copy is 1118
9998 run: its type is character
9999 mem: location 1118 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1189
9999 mem: incrementing refcount of 1237: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1241
9999 mem: storing 1241 in location 1190
9999 mem: incrementing refcount of 1241: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1242
9999 mem: storing 10 in location 1242
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1233
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 0
9999 mem: location 1240 is 1233
9999 mem: location 1190 is 1241
9999 mem: location 1189 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy to is 1239
9999 mem: storing 1241 in location 1239
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 0
9999 mem: location 1244 is 0
9999 mem: location 1189 is 1237
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1244
9999 mem: storing 1237 in location 1244
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1243
9999 mem: storing 0 in location 1243
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1237
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 5 -> 4
9999 mem: storing 1241 in location 1182
9999 mem: incrementing refcount of 1241: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 11
9999 mem: storing 12 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 12
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 12
9998 run: address to copy is 1119
9998 run: its type is character
9999 mem: location 1119 is 100
9999 mem: storing 100 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 100
9999 mem: location 1182 is 1241
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1189
9999 mem: incrementing refcount of 1241: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1245
9999 mem: storing 1245 in location 1190
9999 mem: incrementing refcount of 1245: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1248 is 0
9999 mem: location 1188 is 100
9999 mem: location 1190 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy to is 1246
9999 mem: storing 100 in location 1246
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1189 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 0
9999 mem: location 1244 is 1237
9999 mem: location 1190 is 1245
9999 mem: location 1189 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy to is 1243
9999 mem: storing 1245 in location 1243
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 0
9999 mem: location 1248 is 0
9999 mem: location 1189 is 1241
9999 mem: location 1190 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy to is 1248
9999 mem: storing 1241 in location 1248
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 0
9999 mem: location 1248 is 1241
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy to is 1247
9999 mem: storing 0 in location 1247
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1241
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1241
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1245
9999 mem: storing 1245 in location 1200
9999 mem: incrementing refcount of 1245: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1241: 5 -> 4
9999 mem: storing 1245 in location 1182
9999 mem: incrementing refcount of 1245: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 12
9999 mem: storing 13 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 13
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 13
9998 run: address to copy is 1120
9998 run: its type is character
9999 mem: location 1120 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1245
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1189
9999 mem: incrementing refcount of 1245: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1249
9999 mem: storing 1249 in location 1190
9999 mem: incrementing refcount of 1249: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy to is 1250
9999 mem: storing 120 in location 1250
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 0
9999 mem: location 1248 is 1241
9999 mem: location 1189 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 0
9999 mem: location 1248 is 1241
9999 mem: location 1190 is 1249
9999 mem: location 1189 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy to is 1247
9999 mem: storing 1249 in location 1247
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 0
9999 mem: location 1252 is 0
9999 mem: location 1189 is 1245
9999 mem: location 1190 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy to is 1252
9999 mem: storing 1245 in location 1252
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 0
9999 mem: location 1252 is 1245
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy to is 1251
9999 mem: storing 0 in location 1251
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1245
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1245
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1199
9999 mem: incrementing refcount of 1245: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1245
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1249
9999 mem: storing 1249 in location 1200
9999 mem: incrementing refcount of 1249: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1245: 5 -> 4
9999 mem: storing 1249 in location 1182
9999 mem: incrementing refcount of 1249: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 13
9999 mem: storing 14 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 14
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 14
9998 run: address to copy is 1121
9998 run: its type is character
9999 mem: location 1121 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1249
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1189
9999 mem: incrementing refcount of 1249: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1253
9999 mem: storing 1253 in location 1190
9999 mem: incrementing refcount of 1253: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy to is 1254
9999 mem: storing 120 in location 1254
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 0
9999 mem: location 1252 is 1245
9999 mem: location 1189 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 0
9999 mem: location 1252 is 1245
9999 mem: location 1190 is 1253
9999 mem: location 1189 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy to is 1251
9999 mem: storing 1253 in location 1251
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 0
9999 mem: location 1256 is 0
9999 mem: location 1189 is 1249
9999 mem: location 1190 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy to is 1256
9999 mem: storing 1249 in location 1256
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 0
9999 mem: location 1256 is 1249
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy to is 1255
9999 mem: storing 0 in location 1255
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1249
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1249
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1199
9999 mem: incrementing refcount of 1249: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1249
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1199 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1253
9999 mem: storing 1253 in location 1200
9999 mem: incrementing refcount of 1253: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1253
9999 mem: decrementing refcount of 1249: 5 -> 4
9999 mem: storing 1253 in location 1182
9999 mem: incrementing refcount of 1253: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 14
9999 mem: storing 15 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 15
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 15
9998 run: address to copy is 1122
9998 run: its type is character
9999 mem: location 1122 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1253
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1189
9999 mem: incrementing refcount of 1253: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1257
9999 mem: storing 1257 in location 1190
9999 mem: incrementing refcount of 1257: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy to is 1258
9999 mem: storing 10 in location 1258
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 0
9999 mem: location 1256 is 1249
9999 mem: location 1189 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 0
9999 mem: location 1256 is 1249
9999 mem: location 1190 is 1257
9999 mem: location 1189 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy to is 1255
9999 mem: storing 1257 in location 1255
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1189 is 1253
9999 mem: location 1190 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy to is 1260
9999 mem: storing 1253 in location 1260
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1253
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy to is 1259
9999 mem: storing 0 in location 1259
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1253
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1253
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1199
9999 mem: incrementing refcount of 1253: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1253
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1199 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1257
9999 mem: storing 1257 in location 1200
9999 mem: incrementing refcount of 1257: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1257
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1253: 5 -> 4
9999 mem: storing 1257 in location 1182
9999 mem: incrementing refcount of 1257: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 15
9999 mem: storing 16 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 16
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 16
9998 run: address to copy is 1123
9998 run: its type is character
9999 mem: location 1123 is 101
9999 mem: storing 101 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 101
9999 mem: location 1182 is 1257
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1189
9999 mem: incrementing refcount of 1257: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1261
9999 mem: storing 1261 in location 1190
9999 mem: incrementing refcount of 1261: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1188 is 101
9999 mem: location 1190 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy to is 1262
9999 mem: storing 101 in location 1262
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1253
9999 mem: location 1189 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 0
9999 mem: location 1260 is 1253
9999 mem: location 1190 is 1261
9999 mem: location 1189 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy to is 1259
9999 mem: storing 1261 in location 1259
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1189 is 1257
9999 mem: location 1190 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy to is 1264
9999 mem: storing 1257 in location 1264
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 0
9999 mem: location 1264 is 1257
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy to is 1263
9999 mem: storing 0 in location 1263
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1257
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1257
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1199
9999 mem: incrementing refcount of 1257: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1257
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1199 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1200
9999 mem: incrementing refcount of 1261: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 5 -> 4
9999 mem: storing 1261 in location 1182
9999 mem: incrementing refcount of 1261: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 16
9999 mem: storing 17 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 17
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 17
9998 run: address to copy is 1124
9998 run: its type is character
9999 mem: location 1124 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1261
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1189
9999 mem: incrementing refcount of 1261: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1265
9999 mem: storing 1265 in location 1190
9999 mem: incrementing refcount of 1265: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy to is 1266
9999 mem: storing 120 in location 1266
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 0
9999 mem: location 1264 is 1257
9999 mem: location 1189 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 0
9999 mem: location 1264 is 1257
9999 mem: location 1190 is 1265
9999 mem: location 1189 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy to is 1263
9999 mem: storing 1265 in location 1263
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: location 1189 is 1261
9999 mem: location 1190 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy to is 1268
9999 mem: storing 1261 in location 1268
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1261
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy to is 1267
9999 mem: storing 0 in location 1267
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1261
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1261
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1199
9999 mem: incrementing refcount of 1261: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1261
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1199 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1200
9999 mem: incrementing refcount of 1265: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 5 -> 4
9999 mem: storing 1265 in location 1182
9999 mem: incrementing refcount of 1265: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 17
9999 mem: storing 18 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 18
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 18
9998 run: address to copy is 1125
9998 run: its type is character
9999 mem: location 1125 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1265
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1189
9999 mem: incrementing refcount of 1265: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1269
9999 mem: storing 1269 in location 1190
9999 mem: incrementing refcount of 1269: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy to is 1270
9999 mem: storing 120 in location 1270
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1261
9999 mem: location 1189 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 0
9999 mem: location 1268 is 1261
9999 mem: location 1190 is 1269
9999 mem: location 1189 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy to is 1267
9999 mem: storing 1269 in location 1267
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 0
9999 mem: location 1272 is 0
9999 mem: location 1189 is 1265
9999 mem: location 1190 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy to is 1272
9999 mem: storing 1265 in location 1272
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1265
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy to is 1271
9999 mem: storing 0 in location 1271
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1265
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1265
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1199
9999 mem: incrementing refcount of 1265: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1265
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1199 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1200
9999 mem: incrementing refcount of 1269: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 5 -> 4
9999 mem: storing 1269 in location 1182
9999 mem: incrementing refcount of 1269: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 18
9999 mem: storing 19 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 19
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 19
9998 run: address to copy is 1126
9998 run: its type is character
9999 mem: location 1126 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1269
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1189
9999 mem: incrementing refcount of 1269: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1273
9999 mem: storing 1273 in location 1190
9999 mem: incrementing refcount of 1273: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy to is 1274
9999 mem: storing 10 in location 1274
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1265
9999 mem: location 1189 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1265
9999 mem: location 1190 is 1273
9999 mem: location 1189 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy to is 1271
9999 mem: storing 1273 in location 1271
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 0
9999 mem: location 1276 is 0
9999 mem: location 1189 is 1269
9999 mem: location 1190 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy to is 1276
9999 mem: storing 1269 in location 1276
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 0
9999 mem: location 1276 is 1269
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy to is 1275
9999 mem: storing 0 in location 1275
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1269
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1269
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1199
9999 mem: incrementing refcount of 1269: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1269
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1199 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1200
9999 mem: incrementing refcount of 1273: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 5 -> 4
9999 mem: storing 1273 in location 1182
9999 mem: incrementing refcount of 1273: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 19
9999 mem: storing 20 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 20
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 20
9998 run: address to copy is 1127
9998 run: its type is character
9999 mem: location 1127 is 102
9999 mem: storing 102 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 102
9999 mem: location 1182 is 1273
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1189
9999 mem: incrementing refcount of 1273: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1277
9999 mem: storing 1277 in location 1190
9999 mem: incrementing refcount of 1277: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1188 is 102
9999 mem: location 1190 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1278
9999 mem: storing 102 in location 1278
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 0
9999 mem: location 1276 is 1269
9999 mem: location 1189 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1275
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1275 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 0
9999 mem: location 1276 is 1269
9999 mem: location 1190 is 1277
9999 mem: location 1189 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy to is 1275
9999 mem: storing 1277 in location 1275
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1189 is 1273
9999 mem: location 1190 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1280
9999 mem: storing 1273 in location 1280
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1273
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1279
9999 mem: storing 0 in location 1279
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1273
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1273
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1199
9999 mem: incrementing refcount of 1273: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1273
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1199 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1275
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1275 is 1277
9999 mem: storing 1277 in location 1200
9999 mem: incrementing refcount of 1277: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1273: 5 -> 4
9999 mem: storing 1277 in location 1182
9999 mem: incrementing refcount of 1277: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 20
9999 mem: storing 21 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 21
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 21
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1277
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1189
9999 mem: incrementing refcount of 1277: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1281
9999 mem: storing 1281 in location 1190
9999 mem: incrementing refcount of 1281: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy to is 1282
9999 mem: storing 120 in location 1282
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1273
9999 mem: location 1189 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 0
9999 mem: location 1280 is 1273
9999 mem: location 1190 is 1281
9999 mem: location 1189 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy to is 1279
9999 mem: storing 1281 in location 1279
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1189 is 1277
9999 mem: location 1190 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy to is 1284
9999 mem: storing 1277 in location 1284
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1277
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy to is 1283
9999 mem: storing 0 in location 1283
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1277
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1277
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1199
9999 mem: incrementing refcount of 1277: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1277
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 1281
9999 mem: location 1280 is 1273
9999 mem: location 1199 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1281
9999 mem: storing 1281 in location 1200
9999 mem: incrementing refcount of 1281: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1281
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1281
9999 mem: decrementing refcount of 1277: 5 -> 4
9999 mem: storing 1281 in location 1182
9999 mem: incrementing refcount of 1281: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 21
9999 mem: storing 22 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 22
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 22
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1281
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1281 in location 1189
9999 mem: incrementing refcount of 1281: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1285
9999 mem: storing 1285 in location 1190
9999 mem: incrementing refcount of 1285: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy to is 1286
9999 mem: storing 120 in location 1286
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1277
9999 mem: location 1189 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy is 1283
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1277
9999 mem: location 1190 is 1285
9999 mem: location 1189 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy to is 1283
9999 mem: storing 1285 in location 1283
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 0
9999 mem: location 1288 is 0
9999 mem: location 1189 is 1281
9999 mem: location 1190 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy to is 1288
9999 mem: storing 1281 in location 1288
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 0
9999 mem: location 1288 is 1281
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy to is 1287
9999 mem: storing 0 in location 1287
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1281
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1281
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1281 in location 1199
9999 mem: incrementing refcount of 1281: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1281
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 1285
9999 mem: location 1284 is 1277
9999 mem: location 1199 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy is 1283
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1283 is 1285
9999 mem: storing 1285 in location 1200
9999 mem: incrementing refcount of 1285: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1285
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1285
9999 mem: decrementing refcount of 1281: 5 -> 4
9999 mem: storing 1285 in location 1182
9999 mem: incrementing refcount of 1285: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 22
9999 mem: storing 23 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 23
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 23
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1285
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1189
9999 mem: incrementing refcount of 1285: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1289
9999 mem: storing 1289 in location 1190
9999 mem: incrementing refcount of 1289: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy to is 1290
9999 mem: storing 10 in location 1290
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 0
9999 mem: location 1288 is 1281
9999 mem: location 1189 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1287 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 0
9999 mem: location 1288 is 1281
9999 mem: location 1190 is 1289
9999 mem: location 1189 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy to is 1287
9999 mem: storing 1289 in location 1287
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 0
9999 mem: location 1292 is 0
9999 mem: location 1189 is 1285
9999 mem: location 1190 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy to is 1292
9999 mem: storing 1285 in location 1292
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 0
9999 mem: location 1292 is 1285
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy to is 1291
9999 mem: storing 0 in location 1291
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1285
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1285
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1199
9999 mem: incrementing refcount of 1285: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1285
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 1289
9999 mem: location 1288 is 1281
9999 mem: location 1199 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1287 is 1289
9999 mem: storing 1289 in location 1200
9999 mem: incrementing refcount of 1289: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1289
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1289
9999 mem: decrementing refcount of 1285: 5 -> 4
9999 mem: storing 1289 in location 1182
9999 mem: incrementing refcount of 1289: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 23
9999 mem: storing 24 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 24
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 24
9998 run: address to copy is 1131
9998 run: its type is character
9999 mem: location 1131 is 103
9999 mem: storing 103 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 103
9999 mem: location 1182 is 1289
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1289 in location 1189
9999 mem: incrementing refcount of 1289: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1293
9999 mem: storing 1293 in location 1190
9999 mem: incrementing refcount of 1293: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1188 is 103
9999 mem: location 1190 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy to is 1294
9999 mem: storing 103 in location 1294
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 0
9999 mem: location 1292 is 1285
9999 mem: location 1189 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy is 1291
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1291 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 0
9999 mem: location 1292 is 1285
9999 mem: location 1190 is 1293
9999 mem: location 1189 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy to is 1291
9999 mem: storing 1293 in location 1291
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1189 is 1289
9999 mem: location 1190 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy to is 1296
9999 mem: storing 1289 in location 1296
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1289
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy to is 1295
9999 mem: storing 0 in location 1295
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1289
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1289
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1289 in location 1199
9999 mem: incrementing refcount of 1289: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1289
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 1293
9999 mem: location 1292 is 1285
9999 mem: location 1199 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy is 1291
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1291 is 1293
9999 mem: storing 1293 in location 1200
9999 mem: incrementing refcount of 1293: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1289: 5 -> 4
9999 mem: storing 1293 in location 1182
9999 mem: incrementing refcount of 1293: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 24
9999 mem: storing 25 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 25
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 25
9998 run: address to copy is 1132
9998 run: its type is character
9999 mem: location 1132 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1293
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1189
9999 mem: incrementing refcount of 1293: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1297
9999 mem: storing 1297 in location 1190
9999 mem: incrementing refcount of 1297: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy to is 1298
9999 mem: storing 120 in location 1298
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1289
9999 mem: location 1189 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1295
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 0
9999 mem: location 1296 is 1289
9999 mem: location 1190 is 1297
9999 mem: location 1189 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy to is 1295
9999 mem: storing 1297 in location 1295
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 0
9999 mem: location 1300 is 0
9999 mem: location 1189 is 1293
9999 mem: location 1190 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy to is 1300
9999 mem: storing 1293 in location 1300
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1293
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy to is 1299
9999 mem: storing 0 in location 1299
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1293
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1293
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1199
9999 mem: incrementing refcount of 1293: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1293
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 1297
9999 mem: location 1296 is 1289
9999 mem: location 1199 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1295
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1295 is 1297
9999 mem: storing 1297 in location 1200
9999 mem: incrementing refcount of 1297: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1297
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1297
9999 mem: decrementing refcount of 1293: 5 -> 4
9999 mem: storing 1297 in location 1182
9999 mem: incrementing refcount of 1297: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 25
9999 mem: storing 26 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 26
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 26
9998 run: address to copy is 1133
9998 run: its type is character
9999 mem: location 1133 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1297
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1297 in location 1189
9999 mem: incrementing refcount of 1297: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1301
9999 mem: storing 1301 in location 1190
9999 mem: incrementing refcount of 1301: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 0
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy to is 1302
9999 mem: storing 120 in location 1302
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1293
9999 mem: location 1189 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy is 1299
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 0
9999 mem: location 1300 is 1293
9999 mem: location 1190 is 1301
9999 mem: location 1189 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy to is 1299
9999 mem: storing 1301 in location 1299
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 0
9999 mem: location 1304 is 0
9999 mem: location 1189 is 1297
9999 mem: location 1190 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy to is 1304
9999 mem: storing 1297 in location 1304
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 0
9999 mem: location 1304 is 1297
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy to is 1303
9999 mem: storing 0 in location 1303
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1297
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1297
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1297 in location 1199
9999 mem: incrementing refcount of 1297: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1297
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 1301
9999 mem: location 1300 is 1293
9999 mem: location 1199 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy is 1299
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1299 is 1301
9999 mem: storing 1301 in location 1200
9999 mem: incrementing refcount of 1301: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1301
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1301
9999 mem: decrementing refcount of 1297: 5 -> 4
9999 mem: storing 1301 in location 1182
9999 mem: incrementing refcount of 1301: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 26
9999 mem: storing 27 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 27
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 27
9998 run: address to copy is 1134
9998 run: its type is character
9999 mem: location 1134 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1301
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1301 in location 1189
9999 mem: incrementing refcount of 1301: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1305
9999 mem: storing 1305 in location 1190
9999 mem: incrementing refcount of 1305: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 0
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy to is 1306
9999 mem: storing 10 in location 1306
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 0
9999 mem: location 1304 is 1297
9999 mem: location 1189 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy is 1303
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1303 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 0
9999 mem: location 1304 is 1297
9999 mem: location 1190 is 1305
9999 mem: location 1189 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy to is 1303
9999 mem: storing 1305 in location 1303
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 0
9999 mem: location 1308 is 0
9999 mem: location 1189 is 1301
9999 mem: location 1190 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy to is 1308
9999 mem: storing 1301 in location 1308
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 0
9999 mem: location 1308 is 1301
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy to is 1307
9999 mem: storing 0 in location 1307
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1301
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1301
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1301 in location 1199
9999 mem: incrementing refcount of 1301: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1301
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 1305
9999 mem: location 1304 is 1297
9999 mem: location 1199 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy is 1303
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1303 is 1305
9999 mem: storing 1305 in location 1200
9999 mem: incrementing refcount of 1305: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1305
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1305
9999 mem: decrementing refcount of 1301: 5 -> 4
9999 mem: storing 1305 in location 1182
9999 mem: incrementing refcount of 1305: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 27
9999 mem: storing 28 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 28
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 28
9998 run: address to copy is 1135
9998 run: its type is character
9999 mem: location 1135 is 104
9999 mem: storing 104 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 104
9999 mem: location 1182 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1189
9999 mem: incrementing refcount of 1305: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1309
9999 mem: storing 1309 in location 1190
9999 mem: incrementing refcount of 1309: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 0
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: location 1188 is 104
9999 mem: location 1190 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy to is 1310
9999 mem: storing 104 in location 1310
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 0
9999 mem: location 1308 is 1301
9999 mem: location 1189 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1307 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 0
9999 mem: location 1308 is 1301
9999 mem: location 1190 is 1309
9999 mem: location 1189 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy to is 1307
9999 mem: storing 1309 in location 1307
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 104
9999 mem: location 1311 is 0
9999 mem: location 1312 is 0
9999 mem: location 1189 is 1305
9999 mem: location 1190 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy to is 1312
9999 mem: storing 1305 in location 1312
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 104
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1305
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy to is 1311
9999 mem: storing 0 in location 1311
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1305
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1305
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1199
9999 mem: incrementing refcount of 1305: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1305
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 1309
9999 mem: location 1308 is 1301
9999 mem: location 1199 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1307 is 1309
9999 mem: storing 1309 in location 1200
9999 mem: incrementing refcount of 1309: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1309
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1309
9999 mem: decrementing refcount of 1305: 5 -> 4
9999 mem: storing 1309 in location 1182
9999 mem: incrementing refcount of 1309: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 28
9999 mem: storing 29 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 29
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 29
9998 run: address to copy is 1136
9998 run: its type is character
9999 mem: location 1136 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1189
9999 mem: incrementing refcount of 1309: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1313
9999 mem: storing 1313 in location 1190
9999 mem: incrementing refcount of 1313: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1313
9999 mem: skipping refcount at 1313
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1313
9999 mem: skipping refcount at 1313
9998 run: address to copy to is 1314
9999 mem: storing 120 in location 1314
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 104
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1305
9999 mem: location 1189 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1311 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 104
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1305
9999 mem: location 1190 is 1313
9999 mem: location 1189 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy to is 1311
9999 mem: storing 1313 in location 1311
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1313
9999 mem: skipping refcount at 1313
9999 mem: location 1314 is 120
9999 mem: location 1315 is 0
9999 mem: location 1316 is 0
9999 mem: location 1189 is 1309
9999 mem: location 1190 is 1313
9999 mem: skipping refcount at 1313
9998 run: address to copy to is 1316
9999 mem: storing 1309 in location 1316
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1313
9999 mem: skipping refcount at 1313
9999 mem: location 1314 is 120
9999 mem: location 1315 is 0
9999 mem: location 1316 is 1309
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1313
9999 mem: skipping refcount at 1313
9998 run: address to copy to is 1315
9999 mem: storing 0 in location 1315
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1309
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1309
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1309 in location 1199
9999 mem: incrementing refcount of 1309: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1309
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1309
9999 mem: skipping refcount at 1309
9999 mem: location 1310 is 104
9999 mem: location 1311 is 1313
9999 mem: location 1312 is 1305
9999 mem: location 1199 is 1309
9999 mem: skipping refcount at 1309
9998 run: address to copy is 1311
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1311 is 1313
9999 mem: storing 1313 in location 1200
9999 mem: incrementing refcount of 1313: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1313
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1313
9999 mem: decrementing refcount of 1309: 5 -> 4
9999 mem: storing 1313 in location 1182
9999 mem: incrementing refcount of 1313: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 29
9999 mem: storing 30 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 30
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 30
9998 run: address to copy is 1137
9998 run: its type is character
9999 mem: location 1137 is 120
9999 mem: storing 120 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 120
9999 mem: location 1182 is 1313
9999 trace: incrementing callstack depth to 4
9990 schedule: insert_2/insert-text/new-editor/scenario_editor-can-scroll-up-past-nonempty-lines
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1313 in location 1189
9999 mem: incrementing refcount of 1313: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1317
9999 mem: storing 1317 in location 1190
9999 mem: incrementing refcount of 1317: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1317
9999 mem: skipping refcount at 1317
9999 mem: location 1318 is 0
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1188 is 120
9999 mem: location 1190 is 1317
9999 mem: skipping refcount at 1317
9998 run: address to copy to is 1318
9999 mem: storing 120 in location 1318
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1313
9999 mem: skipping refcount at 1313
9999 mem: location 1314 is 120
9999 mem: location 1315 is 0
9999 mem: location 1316 is 1309
9999 mem: location 1189 is 1313
9999 mem: skipping refcount at 1313
9998 run: address to copy is 1315
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1313
9999 mem: skipping refcount at 1313
9999 mem: location 1314 is 120
9999 mem: location 1315 is 0
9999 mem: location 1316 is 1309
9999 mem: location 1190 is 1317
9999 mem: location 1189 is 1313
9999 mem: skipping refcount at 1313
9998 run: address to copy to is 1315
9999 mem: storing 1317 in location 1315
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1317
9999 mem: skipping refcount at 1317
9999 mem: location 1318 is 120
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1189 is 1313
9999 mem: location 1190 is 1317
9999 mem: skipping refcount at 1317
9998 run: address to copy to is 1320
9999 mem: storing 1313 in location 1320
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1317
9999 mem: skipping refcount at 1317
9999 mem: location 1318 is 120
9999 mem: location 1319 is 0
9999 mem: location 1320 is 1313
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1317
9999 mem: skipping refcount at 1317
9998 run: address to copy to is 1319
9999 mem: storing 0 in location 1319
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1313
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1313
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1313 in location 1199
9999 mem: incrementing refcount of 1313: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1313
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1313
9999 mem: skipping refcount at 1313
9999 mem: location 1314 is 120
9999 mem: location 1315 is 1317
9999 mem: location 1316 is 1309
9999 mem: location 1199 is 1313
9999 mem: skipping refcount at 1313
9998 run: address to copy is 1315
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1315 is 1317
9999 mem: storing 1317 in location 1200
9999 mem: incrementing refcount of 1317: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1317
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1317
9999 mem: decrementing refcount of 1313: 5 -> 4
9999 mem: storing 1317 in location 1182
9999 mem: incrementing refcount of 1317: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 30
9999 mem: storing 31 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 31
9999 mem: location 1180 is 32
9999 mem: storing 0 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1179 is 1105
9999 mem: skipping refcount at 1105
9998 run: base address is 1106
9999 mem: location 1181 is 31
9998 run: address to copy is 1138
9998 run: its type is character
9999 mem: location 1138 is 10
9999 mem: storing 10 in location 1184
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 10
9999 mem: location 1182 is 1317
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1188
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1317 in location 1189
9999 mem: incrementing refcount of 1317: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1321
9999 mem: storing 1321 in location 1190
9999 mem: incrementing refcount of 1321: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1190 is 1321
9999 mem: skipping refcount at 1321
9999 mem: location 1322 is 0
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1188 is 10
9999 mem: location 1190 is 1321
9999 mem: skipping refcount at 1321
9998 run: address to copy to is 1322
9999 mem: storing 10 in location 1322
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1189 is 1317
9999 mem: skipping refcount at 1317
9999 mem: location 1318 is 120
9999 mem: location 1319 is 0
9999 mem: location 1320 is 1313
9999 mem: location 1189 is 1317
9999 mem: skipping refcount at 1317
9998 run: address to copy is 1319
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1191
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1317
9999 mem: skipping refcount at 1317
9999 mem: location 1318 is 120
9999 mem: location 1319 is 0
9999 mem: location 1320 is 1313
9999 mem: location 1190 is 1321
9999 mem: location 1189 is 1317
9999 mem: skipping refcount at 1317
9998 run: address to copy to is 1319
9999 mem: storing 1321 in location 1319
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1321
9999 mem: skipping refcount at 1321
9999 mem: location 1322 is 10
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: location 1189 is 1317
9999 mem: location 1190 is 1321
9999 mem: skipping refcount at 1321
9998 run: address to copy to is 1324
9999 mem: storing 1317 in location 1324
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1321
9999 mem: skipping refcount at 1321
9999 mem: location 1322 is 10
9999 mem: location 1323 is 0
9999 mem: location 1324 is 1317
9999 mem: location 1191 is 0
9999 mem: location 1190 is 1321
9999 mem: skipping refcount at 1321
9998 run: address to copy to is 1323
9999 mem: storing 0 in location 1323
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1317
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1317
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1317 in location 1199
9999 mem: incrementing refcount of 1317: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1317
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1317
9999 mem: skipping refcount at 1317
9999 mem: location 1318 is 120
9999 mem: location 1319 is 1321
9999 mem: location 1320 is 1313
9999 mem: location 1199 is 1317
9999 mem: skipping refcount at 1317
9998 run: address to copy is 1319
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1319 is 1321
9999 mem: storing 1321 in location 1200
9999 mem: incrementing refcount of 1321: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1321
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1321
9999 mem: decrementing refcount of 1317: 5 -> 4
9999 mem: storing 1321 in location 1182
9999 mem: incrementing refcount of 1321: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1181 is 31
9999 mem: storing 32 in location 1181
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1181 is 32
9999 mem: location 1180 is 32
9999 mem: storing 1 in location 1183
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1178 is 1152
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 2 -> 1
9999 mem: storing 1152 in location 1146
9999 mem: incrementing refcount of 1152: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1150
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1148 is 1153
9999 mem: location 1153 is 1171
9999 mem: location 1150 is 1156
9999 mem: decrementing refcount of 1171: 6 -> 5
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1143 is 1008
9999 mem: location 1146 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1325
9999 mem: storing 28 in location 1326
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1329
9999 mem: incrementing refcount of 1152: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1329 is 1152
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1330
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1328 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1200
 105 run: return {height: "number"}
9999 mem: location 1200 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1331
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1332
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1333
9999 mem: incrementing refcount of 1171: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1171
9999 mem: storing 1171 in location 1334
9999 mem: incrementing refcount of 1171: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 9 -> 8
9999 mem: storing 1192 in location 1333
9999 mem: incrementing refcount of 1192: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1335
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1336
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1338
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1339
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1340
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 1
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1192
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1343
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1171
9999 mem: location 1340 is 1156
9999 mem: decrementing refcount of 1171: 8 -> 7
9999 mem: storing 1171 in location 1156
9999 mem: incrementing refcount of 1171: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1333 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1193
9998 run: its type is "character"
9999 mem: location 1193 is 97
9999 mem: storing 97 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1355
9999 mem: storing 10 in location 1356
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 97
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 97
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 97
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 97
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1367
9999 mem: storing 25 in location 1368
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 97
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 97
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 10
9999 mem: storing 1036 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 97
9999 mem: location 1390 is 1036
9999 mem: storing 97 in location 1036
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1037
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 7 -> 6
9999 mem: storing 1201 in location 1333
9999 mem: incrementing refcount of 1201: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1199
9999 mem: incrementing refcount of 1171: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1171
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 167
9999 mem: location 1173 is 1192
9999 mem: location 1174 is 0
9999 mem: location 1199 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1192
9999 mem: storing 1192 in location 1200
9999 mem: incrementing refcount of 1192: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1192
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1192
9999 mem: decrementing refcount of 1171: 9 -> 8
9999 mem: storing 1192 in location 1334
9999 mem: incrementing refcount of 1192: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1201
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 1
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1333 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is "character"
9999 mem: location 1202 is 120
9999 mem: storing 120 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 11
9999 mem: storing 1038 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1038
9999 mem: storing 120 in location 1038
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1039
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 7 -> 6
9999 mem: storing 1205 in location 1333
9999 mem: incrementing refcount of 1205: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1192
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1192 in location 1199
9999 mem: incrementing refcount of 1192: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1192
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9999 mem: location 1193 is 97
9999 mem: location 1194 is 1201
9999 mem: location 1195 is 1171
9999 mem: location 1199 is 1192
9999 mem: skipping refcount at 1192
9998 run: address to copy is 1194
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1194 is 1201
9999 mem: storing 1201 in location 1200
9999 mem: incrementing refcount of 1201: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1201
9999 mem: decrementing refcount of 1192: 9 -> 8
9999 mem: storing 1201 in location 1334
9999 mem: incrementing refcount of 1201: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1205
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 2
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1333 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1206
9998 run: its type is "character"
9999 mem: location 1206 is 120
9999 mem: storing 120 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 12
9999 mem: storing 1040 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1040
9999 mem: storing 120 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 7 -> 6
9999 mem: storing 1209 in location 1333
9999 mem: incrementing refcount of 1209: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1201
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1199
9999 mem: incrementing refcount of 1201: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1201
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9999 mem: location 1202 is 120
9999 mem: location 1203 is 1205
9999 mem: location 1204 is 1192
9999 mem: location 1199 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1203
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1203 is 1205
9999 mem: storing 1205 in location 1200
9999 mem: incrementing refcount of 1205: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1205
9999 mem: decrementing refcount of 1201: 9 -> 8
9999 mem: storing 1205 in location 1334
9999 mem: incrementing refcount of 1205: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1209
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1333 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1210
9998 run: its type is "character"
9999 mem: location 1210 is 10
9999 mem: storing 10 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 10
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 10
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-scroll-up-past-nonempty-lines
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1384
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 13
9999 mem: storing 1042 in location 1389
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1390
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1391
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 1
9999 mem: storing 2 in location 1336
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 2
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 12 -> 13
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 7 -> 6
9999 mem: storing 1213 in location 1333
9999 mem: incrementing refcount of 1213: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1205
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1199
9999 mem: incrementing refcount of 1205: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1205
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 120
9999 mem: location 1207 is 1209
9999 mem: location 1208 is 1201
9999 mem: location 1199 is 1205
9999 mem: skipping refcount at 1205
9998 run: address to copy is 1207
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1207 is 1209
9999 mem: storing 1209 in location 1200
9999 mem: incrementing refcount of 1209: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1209
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1209
9999 mem: decrementing refcount of 1205: 9 -> 8
9999 mem: storing 1209 in location 1334
9999 mem: incrementing refcount of 1209: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1213
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1333 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1214
9998 run: its type is "character"
9999 mem: location 1214 is 98
9999 mem: storing 98 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 98
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 98
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 98
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 98
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 98
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 98
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 20
9999 mem: storing 1056 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 98
9999 mem: location 1390 is 1056
9999 mem: storing 98 in location 1056
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 98
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1057
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 7 -> 6
9999 mem: storing 1217 in location 1333
9999 mem: incrementing refcount of 1217: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1209
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1209 in location 1199
9999 mem: incrementing refcount of 1209: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1209
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9999 mem: location 1210 is 10
9999 mem: location 1211 is 1213
9999 mem: location 1212 is 1205
9999 mem: location 1199 is 1209
9999 mem: skipping refcount at 1209
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1213
9999 mem: storing 1213 in location 1200
9999 mem: incrementing refcount of 1213: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1213
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1213
9999 mem: decrementing refcount of 1209: 9 -> 8
9999 mem: storing 1213 in location 1334
9999 mem: incrementing refcount of 1213: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1217
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1333 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1218
9998 run: its type is "character"
9999 mem: location 1218 is 120
9999 mem: storing 120 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 21
9999 mem: storing 1058 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1058
9999 mem: storing 120 in location 1058
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1059
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 7 -> 6
9999 mem: storing 1221 in location 1333
9999 mem: incrementing refcount of 1221: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1213
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1213 in location 1199
9999 mem: incrementing refcount of 1213: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1213
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9999 mem: location 1214 is 98
9999 mem: location 1215 is 1217
9999 mem: location 1216 is 1209
9999 mem: location 1199 is 1213
9999 mem: skipping refcount at 1213
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1217
9999 mem: storing 1217 in location 1200
9999 mem: incrementing refcount of 1217: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1217
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1217
9999 mem: decrementing refcount of 1213: 9 -> 8
9999 mem: storing 1217 in location 1334
9999 mem: incrementing refcount of 1217: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1221
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1333 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1222
9998 run: its type is "character"
9999 mem: location 1222 is 120
9999 mem: storing 120 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 22
9999 mem: storing 1060 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1060
9999 mem: storing 120 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1061
9999 mem: storing 7 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 7 -> 6
9999 mem: storing 1225 in location 1333
9999 mem: incrementing refcount of 1225: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1217
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1217 in location 1199
9999 mem: incrementing refcount of 1217: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1217
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9999 mem: location 1218 is 120
9999 mem: location 1219 is 1221
9999 mem: location 1220 is 1213
9999 mem: location 1199 is 1217
9999 mem: skipping refcount at 1217
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1221
9999 mem: storing 1221 in location 1200
9999 mem: incrementing refcount of 1221: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1221
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1221
9999 mem: decrementing refcount of 1217: 9 -> 8
9999 mem: storing 1221 in location 1334
9999 mem: incrementing refcount of 1221: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1225
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1333 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 10
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 10
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1384
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 23
9999 mem: storing 1062 in location 1389
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1390
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1062
9999 mem: storing 32 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1391
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1063
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
9990 schedule: print/clear-line-delimited/render/new-editor/scenario_editor-can-scroll-up-past-nonempty-lines
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 2
9999 mem: storing 3 in location 1336
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 3
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 7 -> 6
9999 mem: storing 1229 in location 1333
9999 mem: incrementing refcount of 1229: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1221
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1221 in location 1199
9999 mem: incrementing refcount of 1221: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1221
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9999 mem: location 1222 is 120
9999 mem: location 1223 is 1225
9999 mem: location 1224 is 1217
9999 mem: location 1199 is 1221
9999 mem: skipping refcount at 1221
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1221: 9 -> 8
9999 mem: storing 1225 in location 1334
9999 mem: incrementing refcount of 1225: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1229
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1333 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 99
9999 mem: storing 99 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 99
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 99
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 99
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 99
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 99
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 30
9999 mem: storing 1076 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 99
9999 mem: location 1390 is 1076
9999 mem: storing 99 in location 1076
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 99
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1077
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 7 -> 6
9999 mem: storing 1233 in location 1333
9999 mem: incrementing refcount of 1233: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1225
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 9 -> 8
9999 mem: storing 1229 in location 1334
9999 mem: incrementing refcount of 1229: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1233
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1333 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 120
9999 mem: storing 120 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 31
9999 mem: storing 1078 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1078
9999 mem: storing 120 in location 1078
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1079
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 7 -> 6
9999 mem: storing 1237 in location 1333
9999 mem: incrementing refcount of 1237: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1229
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 9 -> 8
9999 mem: storing 1233 in location 1334
9999 mem: incrementing refcount of 1233: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1237
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1333 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 120
9999 mem: storing 120 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 120
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1384
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 32
9999 mem: storing 1080 in location 1389
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1390
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1080
9999 mem: storing 120 in location 1080
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1391
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1081
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 7 -> 6
9999 mem: storing 1241 in location 1333
9999 mem: incrementing refcount of 1241: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1233
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 9 -> 8
9999 mem: storing 1237 in location 1334
9999 mem: incrementing refcount of 1237: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1241
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1333 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 10
9999 mem: storing 10 in location 1344
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1358
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1359
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1358 is 7
9999 mem: storing 1 in location 1360
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1359 is 10
9999 mem: storing 0 in location 1361
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1362
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1359 is 10
9999 mem: storing 0 in location 1364
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1358 is 7
9999 mem: storing 0 in location 1365
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1358 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 23 -> 24
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1384
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 13 -> 14
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 33
9999 mem: storing 1082 in location 1389
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1390
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1391
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 3
9999 mem: storing 4 in location 1336
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 24 -> 25
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1241
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1245
9999 mem: storing 1245 in location 1200
9999 mem: incrementing refcount of 1245: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1241: 7 -> 6
9999 mem: storing 1245 in location 1333
9999 mem: incrementing refcount of 1245: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1237
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 9 -> 8
9999 mem: storing 1241 in location 1334
9999 mem: incrementing refcount of 1241: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
9990 schedule: render/new-editor/scenario_editor-can-scroll-up-past-nonempty-lines
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1245
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1331 is 4
9999 mem: storing 1 in location 1341
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1349
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1245
9999 mem: location 1349 is 1155
9999 mem: storing 1245 in location 1155
9999 mem: incrementing refcount of 1245: 6 -> 7
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1350
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1342 is 0
9999 mem: location 1350 is 1
9999 mem: storing 0 in location 1351
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1352
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1353
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 0
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1354
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1354 is 1159
9999 mem: storing 4 in location 1159
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1152
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1143
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: decrementing refcount of 1152: 3 -> 2
9999 mem: storing 1152 in location 1146
9999 mem: incrementing refcount of 1152: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1146 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1151
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1151 is 1162
9999 mem: storing 1 in location 1162
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1146 is 1152
9999 mem: location 1143 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1152
9999 mem: storing 1152 in location 2
9999 mem: incrementing refcount of 1152: 3 -> 4
 102 run: screen-should-contain {"\n    .          .\n    .axx       .\n    .bxx       .\n    .cxx       .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9999 mem: storing 'press' event starting at 1396
9999 mem: storing console in 1400
9999 mem: storing console data in 1402
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1400
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1403
9999 mem: storing 14 in location 1404
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 25 -> 26
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1400 in location 1407
9999 mem: incrementing refcount of 1400: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1408
9999 mem: incrementing refcount of 1152: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1410
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1406 is 1008
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 26 -> 27
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1407 is 1400
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1419
9999 mem: storing 12 in location 1420
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1400 in location 1422
9999 mem: incrementing refcount of 1400: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1422 is 1400
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9999 mem: location 1401 is 0
9999 mem: location 1402 is 1394
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9998 run: address to copy is 1401
9999 mem: storing 1401 in location 1423
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9999 mem: location 1401 is 0
9999 mem: location 1402 is 1394
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9998 run: address to copy is 1402
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1402 is 1394
9999 mem: storing 1394 in location 1424
9999 mem: incrementing refcount of 1394: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1424 is 1394
9999 mem: skipping refcount at 1394
9999 mem: storing 1 in location 1425
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1423 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1425 is 1
9999 mem: storing 0 in location 1426
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1424 is 1394
9999 mem: skipping refcount at 1394
9998 run: base address is 1395
9999 mem: location 1423 is 1401
9999 mem: location 1401 is 0
9998 run: address to copy is 1396
9998 run: its type is event
9999 mem: location 1396 is 1
9999 mem: location 1397 is 65518
9999 mem: location 1398 is 0
9999 mem: location 1399 is 0
9999 mem: storing 1 in location 1428
9999 mem: storing 65518 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1423 is 1401
9999 mem: location 1401 is 0
9999 mem: location 1423 is 1401
9999 mem: storing 1 in location 1401
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1428 is 1
9999 mem: location 1429 is 65518
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: location 1422 is 1400
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1400
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1411
9999 mem: storing 65518 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: decrementing refcount of 1400: 2 -> 1
9999 mem: storing 1400 in location 1407
9999 mem: incrementing refcount of 1400: 1 -> 2
9999 mem: storing 1 in location 1415
9999 mem: storing 0 in location 1416
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1411 is 1
9999 mem: location 1412 is 65518
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1417
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1406 is 1008
9999 mem: location 1408 is 1152
9999 mem: location 1411 is 1
9999 mem: location 1412 is 65518
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1433
9999 mem: storing 85 in location 1434
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 5 -> 6
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1438
9999 mem: storing 65518 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1442
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1437 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1200
 106 run: return {width: "number"}
9999 mem: location 1200 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1443
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1200
 106 run: return {height: "number"}
9999 mem: location 1200 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1444
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1445
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1446
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1447
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1448
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1449
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1450
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1449 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1451
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1438 is 1
9999 mem: location 1439 is 65518
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: storing 0 in location 1452
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1438 is 1
9999 mem: location 1439 is 65518
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: storing 1439 in location 1506
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1506 is 1439
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1506 is 1439
9999 mem: location 1439 is 65518
9999 mem: storing 0 in location 1469
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1506 is 1439
9999 mem: location 1439 is 65518
9999 mem: storing 1 in location 1485
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 1
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1470
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1470 is 1154
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1471
9999 mem: incrementing refcount of 1171: 8 -> 9
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1472
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1473
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1171
9999 mem: storing 1171 in location 1474
9999 mem: incrementing refcount of 1171: 9 -> 10
 105 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1437 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1099
9999 mem: incrementing refcount of 1152: 6 -> 7
 106 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1245
9999 mem: storing 1245 in location 1100
9999 mem: incrementing refcount of 1245: 7 -> 8
 106 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1100 is 1245
9998 run: jumping to instruction 5
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1171
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1101
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1100 is 1245
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1199
9999 mem: incrementing refcount of 1245: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1245
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: location 1101 is 1156
9999 mem: decrementing refcount of 1171: 10 -> 9
9999 mem: storing 1241 in location 1156
9999 mem: incrementing refcount of 1241: 9 -> 10
 106 run: {last: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 10
9999 mem: storing 10 in location 1102
 106 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1102 is 10
9999 mem: storing 1 in location 1103
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: location 1101 is 1156
9999 mem: decrementing refcount of 1241: 11 -> 10
9999 mem: storing 1237 in location 1156
9999 mem: incrementing refcount of 1237: 9 -> 10
 106 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1520
9999 mem: storing 9 in location 1521
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1523
9999 mem: incrementing refcount of 1152: 7 -> 8
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1237
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1524
 107 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1237
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1525
 107 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1524 is 0
9999 mem: location 1525 is 1161
9999 mem: storing 0 in location 1161
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1237
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1526
 107 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1237
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1527
9999 mem: incrementing refcount of 1171: 9 -> 10
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1237
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 120
9999 mem: storing 120 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 120
9999 mem: storing 0 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1237
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1233
9999 mem: location 1526 is 1156
9999 mem: decrementing refcount of 1237: 11 -> 10
9999 mem: storing 1233 in location 1156
9999 mem: incrementing refcount of 1233: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1233
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1233
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 120
9999 mem: storing 120 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 120
9999 mem: storing 0 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1233
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1229
9999 mem: location 1526 is 1156
9999 mem: decrementing refcount of 1233: 11 -> 10
9999 mem: storing 1229 in location 1156
9999 mem: incrementing refcount of 1229: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1229
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1229
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 99
9999 mem: storing 99 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 99
9999 mem: storing 0 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1229
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1225
9999 mem: storing 1225 in location 1200
9999 mem: incrementing refcount of 1225: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1225
9999 mem: location 1526 is 1156
9999 mem: decrementing refcount of 1229: 11 -> 10
9999 mem: storing 1225 in location 1156
9999 mem: incrementing refcount of 1225: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1225
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1225
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 10
9999 mem: storing 1 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 1
9998 run: jumping to instruction 16
 107 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1523 is 1152
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1171
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1104
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1225
9999 mem: location 1104 is 1154
9999 mem: decrementing refcount of 1171: 10 -> 9
9999 mem: storing 1225 in location 1154
9999 mem: incrementing refcount of 1225: 10 -> 11
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1475
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1476
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1477
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1225
9999 mem: storing 1225 in location 1478
9999 mem: incrementing refcount of 1225: 11 -> 12
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 514
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1355
9999 mem: storing 1355 in location 1455
9999 mem: incrementing refcount of 1355: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1472 is 1
9999 mem: location 1473 is 0
9999 mem: location 1474 is 1171
9999 mem: location 1476 is 1
9999 mem: location 1477 is 0
9999 mem: location 1478 is 1225
9999 mem: location 1475 is 0
9999 mem: location 1455 is 1355
9999 mem: skipping refcount at 1355
9999 mem: location 1455 is 1355
9999 mem: skipping refcount at 1355
9999 mem: storing 1 in location 1356
9999 mem: storing 1 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 1171 in location 1359
9999 mem: storing 1 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 1225 in location 1362
9999 mem: storing 0 in location 1363
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1437 is 1152
9999 mem: location 1455 is 1355
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 8 -> 9
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1355 in location 1189
9999 mem: incrementing refcount of 1355: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1355
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1355 in location 1168
9999 mem: incrementing refcount of 1355: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1169
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1531
9999 mem: storing 1531 in location 1170
9999 mem: incrementing refcount of 1531: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1355
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1531
9999 mem: skipping refcount at 1531
9999 mem: location 1170 is 1531
9999 mem: skipping refcount at 1531
9999 mem: storing 1355 in location 1532
9999 mem: storing 0 in location 1533
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1531
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1531
9999 mem: location 1190 is 1163
9999 mem: storing 1531 in location 1163
9999 mem: incrementing refcount of 1531: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 9 -> 8
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 8 -> 9
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1470 is 1154
9999 mem: location 1154 is 1225
9999 mem: location 1471 is 1171
9999 mem: storing 0 in location 1484
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1484 is 0
9999 mem: storing 1 in location 1442
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1436 is 1008
9999 mem: location 1437 is 1152
9999 mem: location 1442 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 29 -> 30
9999 mem: decrementing refcount of 1152: 9 -> 8
9999 mem: storing 1152 in location 1408
9999 mem: incrementing refcount of 1152: 8 -> 9
9999 mem: storing 1 in location 1418
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1406 is 1008
9999 mem: location 1408 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1100
9999 mem: incrementing refcount of 1152: 9 -> 10
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1325
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 31 -> 32
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1329
9999 mem: incrementing refcount of 1152: 10 -> 11
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1329 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1330
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1328 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 32 -> 33
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1200
 107 run: return {height: "number"}
9999 mem: location 1200 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1331
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1332
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1225
9999 mem: storing 1225 in location 1333
9999 mem: incrementing refcount of 1225: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1225
9999 mem: storing 1225 in location 1334
9999 mem: incrementing refcount of 1225: 13 -> 14
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 15 -> 14
9999 mem: storing 1229 in location 1333
9999 mem: incrementing refcount of 1229: 11 -> 12
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1335
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1338
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1339
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1340
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 1
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 33 -> 34
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 34 -> 33
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 33 -> 34
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1225
9999 mem: location 1340 is 1156
9999 mem: decrementing refcount of 1225: 14 -> 13
9999 mem: storing 1225 in location 1156
9999 mem: incrementing refcount of 1225: 13 -> 14
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1333 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 99
9999 mem: storing 99 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1534
9999 mem: storing 10 in location 1535
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 99
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 99
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 99
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 34 -> 35
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 99
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 14 -> 15
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 99
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 10
9999 mem: storing 1036 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 99
9999 mem: location 1390 is 1036
9999 mem: storing 99 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 13 -> 12
9999 mem: storing 1233 in location 1333
9999 mem: incrementing refcount of 1233: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1199
9999 mem: incrementing refcount of 1225: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1199 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1200
9999 mem: incrementing refcount of 1229: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 15 -> 14
9999 mem: storing 1229 in location 1334
9999 mem: incrementing refcount of 1229: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 1
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1333 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 35 -> 36
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 15 -> 16
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 11
9999 mem: storing 1038 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1038
9999 mem: storing 120 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 13 -> 12
9999 mem: storing 1237 in location 1333
9999 mem: incrementing refcount of 1237: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1199
9999 mem: incrementing refcount of 1229: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1199 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1200
9999 mem: incrementing refcount of 1233: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 15 -> 14
9999 mem: storing 1233 in location 1334
9999 mem: incrementing refcount of 1233: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-nonempty-lines
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 2
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1333 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 36 -> 37
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 16 -> 17
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 12
9999 mem: storing 1040 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1040
9999 mem: storing 120 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 13 -> 12
9999 mem: storing 1241 in location 1333
9999 mem: incrementing refcount of 1241: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1199
9999 mem: incrementing refcount of 1233: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1199 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1200
9999 mem: incrementing refcount of 1237: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 15 -> 14
9999 mem: storing 1237 in location 1334
9999 mem: incrementing refcount of 1237: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1333 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 10
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 10
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1346
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 37 -> 38
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 38 -> 39
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 17 -> 18
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 13
9999 mem: storing 1042 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 38 -> 39
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 1
9999 mem: storing 2 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 2
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 39 -> 40
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1245
9999 mem: storing 1245 in location 1200
9999 mem: incrementing refcount of 1245: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1241: 13 -> 12
9999 mem: storing 1245 in location 1333
9999 mem: incrementing refcount of 1245: 10 -> 11
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1199
9999 mem: incrementing refcount of 1237: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1199 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1200
9999 mem: incrementing refcount of 1241: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 15 -> 14
9999 mem: storing 1241 in location 1334
9999 mem: incrementing refcount of 1241: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1245
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1333 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1246
9998 run: its type is "character"
9999 mem: location 1246 is 100
9999 mem: storing 100 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 100
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 100
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 100
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 100
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 40 -> 41
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 100
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 18 -> 19
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 100
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 20
9999 mem: storing 1056 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 98
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 100
9999 mem: location 1390 is 1056
9999 mem: storing 100 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1245
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1199
9999 mem: incrementing refcount of 1245: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1245
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1249
9999 mem: storing 1249 in location 1200
9999 mem: incrementing refcount of 1249: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1245: 12 -> 11
9999 mem: storing 1249 in location 1333
9999 mem: incrementing refcount of 1249: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1199
9999 mem: incrementing refcount of 1241: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1199 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1245
9999 mem: storing 1245 in location 1200
9999 mem: incrementing refcount of 1245: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1241: 15 -> 14
9999 mem: storing 1245 in location 1334
9999 mem: incrementing refcount of 1245: 12 -> 13
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1249
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1333 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1250
9998 run: its type is "character"
9999 mem: location 1250 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 41 -> 42
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 19 -> 20
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 21
9999 mem: storing 1058 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1058
9999 mem: storing 120 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1249
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1199
9999 mem: incrementing refcount of 1249: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1249
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1199 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1253
9999 mem: storing 1253 in location 1200
9999 mem: incrementing refcount of 1253: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1253
9999 mem: decrementing refcount of 1249: 7 -> 6
9999 mem: storing 1253 in location 1333
9999 mem: incrementing refcount of 1253: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1245
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1199
9999 mem: incrementing refcount of 1245: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1245
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1199 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1249
9999 mem: storing 1249 in location 1200
9999 mem: incrementing refcount of 1249: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1245: 14 -> 13
9999 mem: storing 1249 in location 1334
9999 mem: incrementing refcount of 1249: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1253
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1333 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1254
9998 run: its type is "character"
9999 mem: location 1254 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 42 -> 43
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 20 -> 21
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 22
9999 mem: storing 1060 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1060
9999 mem: storing 120 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1253
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1199
9999 mem: incrementing refcount of 1253: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1253
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1199 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1257
9999 mem: storing 1257 in location 1200
9999 mem: incrementing refcount of 1257: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1257
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1253: 7 -> 6
9999 mem: storing 1257 in location 1333
9999 mem: incrementing refcount of 1257: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1249
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1199
9999 mem: incrementing refcount of 1249: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1249
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1199 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1253
9999 mem: storing 1253 in location 1200
9999 mem: incrementing refcount of 1253: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1253
9999 mem: decrementing refcount of 1249: 9 -> 8
9999 mem: storing 1253 in location 1334
9999 mem: incrementing refcount of 1253: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1257
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1333 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1258
9998 run: its type is "character"
9999 mem: location 1258 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 10
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 10
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 44 -> 45
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 21 -> 22
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 23
9999 mem: storing 1062 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 2
9999 mem: storing 3 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 3
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 45 -> 46
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1257
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1199
9999 mem: incrementing refcount of 1257: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1257
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1199 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1200
9999 mem: incrementing refcount of 1261: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 7 -> 6
9999 mem: storing 1261 in location 1333
9999 mem: incrementing refcount of 1261: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1253
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1199
9999 mem: incrementing refcount of 1253: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1253
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1199 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1257
9999 mem: storing 1257 in location 1200
9999 mem: incrementing refcount of 1257: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1257
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1253: 9 -> 8
9999 mem: storing 1257 in location 1334
9999 mem: incrementing refcount of 1257: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1261
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1333 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1262
9998 run: its type is "character"
9999 mem: location 1262 is 101
9999 mem: storing 101 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 101
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 101
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 101
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 101
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 46 -> 47
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 101
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 101
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 30
9999 mem: storing 1076 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 99
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 101
9999 mem: location 1390 is 1076
9999 mem: storing 101 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 101
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1261
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1199
9999 mem: incrementing refcount of 1261: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1261
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1199 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1200
9999 mem: incrementing refcount of 1265: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 7 -> 6
9999 mem: storing 1265 in location 1333
9999 mem: incrementing refcount of 1265: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1257
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1199
9999 mem: incrementing refcount of 1257: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1257
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1199 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1200
9999 mem: incrementing refcount of 1261: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 9 -> 8
9999 mem: storing 1261 in location 1334
9999 mem: incrementing refcount of 1261: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1265
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1333 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1266
9998 run: its type is "character"
9999 mem: location 1266 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 47 -> 48
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 23 -> 24
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 31
9999 mem: storing 1078 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1078
9999 mem: storing 120 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1199
9999 mem: incrementing refcount of 1265: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1265
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1199 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1200
9999 mem: incrementing refcount of 1269: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 7 -> 6
9999 mem: storing 1269 in location 1333
9999 mem: incrementing refcount of 1269: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1261
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1199
9999 mem: incrementing refcount of 1261: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1261
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1199 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1200
9999 mem: incrementing refcount of 1265: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 9 -> 8
9999 mem: storing 1265 in location 1334
9999 mem: incrementing refcount of 1265: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1269
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1333 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1270
9998 run: its type is "character"
9999 mem: location 1270 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 120
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 24 -> 25
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 32
9999 mem: storing 1080 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1080
9999 mem: storing 120 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1199
9999 mem: incrementing refcount of 1269: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1199 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1200
9999 mem: incrementing refcount of 1273: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 7 -> 6
9999 mem: storing 1273 in location 1333
9999 mem: incrementing refcount of 1273: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1199
9999 mem: incrementing refcount of 1265: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1265
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1199 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1200
9999 mem: incrementing refcount of 1269: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 9 -> 8
9999 mem: storing 1269 in location 1334
9999 mem: incrementing refcount of 1269: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1273
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1333 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1274
9998 run: its type is "character"
9999 mem: location 1274 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1537
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1538
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1537 is 7
9999 mem: storing 1 in location 1539
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1538 is 10
9999 mem: storing 0 in location 1540
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1540 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1541
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1541 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1539 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1538 is 10
9999 mem: storing 0 in location 1543
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1543 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1537 is 7
9999 mem: storing 0 in location 1544
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1544 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1537 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 50 -> 51
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 25 -> 26
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 33
9999 mem: storing 1082 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 3
9999 mem: storing 4 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 52 -> 51
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 51 -> 52
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1273
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1199
9999 mem: incrementing refcount of 1273: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1273
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1199 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1275
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1275 is 1277
9999 mem: storing 1277 in location 1200
9999 mem: incrementing refcount of 1277: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1273: 7 -> 6
9999 mem: storing 1277 in location 1333
9999 mem: incrementing refcount of 1277: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1199
9999 mem: incrementing refcount of 1269: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1199 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1199 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1199 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1200
9999 mem: incrementing refcount of 1273: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1200 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 9 -> 8
9999 mem: storing 1273 in location 1334
9999 mem: incrementing refcount of 1273: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1277
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1331 is 4
9999 mem: storing 1 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1245
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1349
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1277
9999 mem: location 1349 is 1155
9999 mem: decrementing refcount of 1245: 13 -> 12
9999 mem: storing 1277 in location 1155
9999 mem: incrementing refcount of 1277: 6 -> 7
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1350
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1342 is 0
9999 mem: location 1350 is 1
9999 mem: storing 0 in location 1351
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1352
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1353
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1354
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1354 is 1159
9999 mem: storing 4 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 52 -> 53
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 53 -> 54
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1422
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1423
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1424
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1425
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1426
9999 mem: storing 1 in location 1427
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1428
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1430
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1423 is 5
9999 mem: location 1424 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1006 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1422
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 0
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 0
9999 mem: storing 1 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 1
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 1
9999 mem: storing 2 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 2
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 2
9999 mem: storing 3 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 3
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 3
9999 mem: storing 4 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 4
9999 mem: location 1425 is 3
9999 mem: storing 0 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1422 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 63 -> 64
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1546
9999 mem: storing 6 in location 1547
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1549
9999 mem: incrementing refcount of 1008: 64 -> 65
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1550
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1551
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1549 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1552
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1550 is 6
9999 mem: location 1552 is 1011
9999 mem: storing 6 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1553
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1551 is 0
9999 mem: location 1553 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1549 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 64 -> 65
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 65 -> 66
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 66 -> 67
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 67 -> 68
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 68 -> 69
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 69 -> 70
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 70 -> 69
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1554
9999 mem: storing 7 in location 1555
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1557
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1558
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1559
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1560
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1558 is 6
9999 mem: storing 7 in location 1558
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1557 is 1008
9999 mem: location 1558 is 7
9999 mem: location 1559 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1546
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1549
9999 mem: incrementing refcount of 1008: 71 -> 72
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1550
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1551
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1549 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1552
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1550 is 7
9999 mem: location 1552 is 1011
9999 mem: storing 7 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1553
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1551 is 0
9999 mem: location 1553 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1549 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1557
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1557 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1199
9999 mem: incrementing refcount of 1008: 72 -> 73
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1199 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1199 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1200
 108 run: return {height: "number"}
9999 mem: location 1200 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1561
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1558 is 7
9999 mem: location 1561 is 4
9999 mem: storing 1 in location 1562
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1562 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1557 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 72 -> 73
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1410
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1406 is 1008
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 73 -> 74
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 73 -> 74
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1407 is 1400
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1400 in location 1422
9999 mem: incrementing refcount of 1400: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1422 is 1400
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9999 mem: location 1401 is 1
9999 mem: location 1402 is 1394
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9998 run: address to copy is 1401
9999 mem: storing 1401 in location 1423
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9999 mem: location 1401 is 1
9999 mem: location 1402 is 1394
9999 mem: location 1422 is 1400
9999 mem: skipping refcount at 1400
9998 run: address to copy is 1402
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1402 is 1394
9999 mem: storing 1394 in location 1424
9999 mem: incrementing refcount of 1394: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1424 is 1394
9999 mem: skipping refcount at 1394
9999 mem: storing 1 in location 1425
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1423 is 1401
9999 mem: location 1401 is 1
9999 mem: location 1425 is 1
9999 mem: storing 1 in location 1426
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1196
9999 mem: storing 1196 in location 1427
9999 mem: incrementing refcount of 1196: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1427 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1422 is 1400
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1400
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: decrementing refcount of 1400: 3 -> 2
9999 mem: storing 1400 in location 1407
9999 mem: incrementing refcount of 1400: 2 -> 3
9999 mem: storing 1 in location 1415
9999 mem: storing 1 in location 1416
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1406 is 1008
9999 mem: location 1407 is 1400
9999 mem: location 1408 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .cxx       .\n    .dxx       .\n    .exx       .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-down\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9999 mem: storing 'press' event starting at 1565
9999 mem: storing console in 1569
9999 mem: storing console data in 1571
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1569
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1403
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 74 -> 75
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1569 in location 1407
9999 mem: incrementing refcount of 1569: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1408
9999 mem: incrementing refcount of 1152: 11 -> 12
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1410
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1406 is 1008
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 75 -> 76
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 76 -> 75
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 75 -> 76
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1407 is 1569
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1569 in location 1422
9999 mem: incrementing refcount of 1569: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1422 is 1569
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1570 is 0
9999 mem: location 1571 is 1563
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9998 run: address to copy is 1570
9999 mem: storing 1570 in location 1423
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1570 is 0
9999 mem: location 1571 is 1563
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9998 run: address to copy is 1571
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1571 is 1563
9999 mem: storing 1563 in location 1424
9999 mem: incrementing refcount of 1563: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1424 is 1563
9999 mem: skipping refcount at 1563
9999 mem: storing 1 in location 1425
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1423 is 1570
9999 mem: location 1570 is 0
9999 mem: location 1425 is 1
9999 mem: storing 0 in location 1426
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1424 is 1563
9999 mem: skipping refcount at 1563
9998 run: base address is 1564
9999 mem: location 1423 is 1570
9999 mem: location 1570 is 0
9998 run: address to copy is 1565
9998 run: its type is event
9999 mem: location 1565 is 1
9999 mem: location 1566 is 65518
9999 mem: location 1567 is 0
9999 mem: location 1568 is 0
9999 mem: storing 1 in location 1428
9999 mem: storing 65518 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1423 is 1570
9999 mem: location 1570 is 0
9999 mem: location 1423 is 1570
9999 mem: storing 1 in location 1570
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1428 is 1
9999 mem: location 1429 is 65518
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: location 1422 is 1569
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1569
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1411
9999 mem: storing 65518 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: decrementing refcount of 1569: 2 -> 1
9999 mem: storing 1569 in location 1407
9999 mem: incrementing refcount of 1569: 1 -> 2
9999 mem: storing 1 in location 1415
9999 mem: storing 0 in location 1416
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1411 is 1
9999 mem: location 1412 is 65518
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1417
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1406 is 1008
9999 mem: location 1408 is 1152
9999 mem: location 1411 is 1
9999 mem: location 1412 is 65518
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1433
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 12 -> 13
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1438
9999 mem: storing 65518 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1442
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1437 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1572
9999 mem: storing 3 in location 1573
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1575
9999 mem: incrementing refcount of 1008: 77 -> 78
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1575 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1576
 106 run: return {width: "number"}
9999 mem: location 1576 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1443
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1575
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1575 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1576
 106 run: return {height: "number"}
9999 mem: location 1576 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1444
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1445
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1446
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1447
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1448
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1449
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1450
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1449 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1451
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1438 is 1
9999 mem: location 1439 is 65518
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: storing 0 in location 1452
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1438 is 1
9999 mem: location 1439 is 65518
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: storing 1439 in location 1506
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1506 is 1439
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1506 is 1439
9999 mem: location 1439 is 65518
9999 mem: storing 0 in location 1469
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1506 is 1439
9999 mem: location 1439 is 65518
9999 mem: storing 1 in location 1485
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 1
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1470
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1470 is 1154
9999 mem: location 1154 is 1225
9999 mem: storing 1225 in location 1471
9999 mem: incrementing refcount of 1225: 14 -> 15
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1472
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1473
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1225
9999 mem: storing 1225 in location 1474
9999 mem: incrementing refcount of 1225: 15 -> 16
 105 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1437 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1099
9999 mem: incrementing refcount of 1152: 13 -> 14
 106 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1155 is 1277
9999 mem: storing 1277 in location 1100
9999 mem: incrementing refcount of 1277: 7 -> 8
 106 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1100 is 1277
9998 run: jumping to instruction 5
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1101
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1100 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1575
9999 mem: incrementing refcount of 1277: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1575 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 1281
9999 mem: location 1280 is 1273
9999 mem: location 1575 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1280
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1280 is 1273
9999 mem: storing 1273 in location 1576
9999 mem: incrementing refcount of 1273: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1576 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: location 1101 is 1156
9999 mem: decrementing refcount of 1225: 16 -> 15
9999 mem: storing 1273 in location 1156
9999 mem: incrementing refcount of 1273: 9 -> 10
 106 run: {last: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1274
9998 run: its type is "character"
9999 mem: location 1274 is 10
9999 mem: storing 10 in location 1102
 106 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1102 is 10
9999 mem: storing 1 in location 1103
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1103 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1273
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1575
9999 mem: incrementing refcount of 1273: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1273
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1575 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1575 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1276
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1276 is 1269
9999 mem: storing 1269 in location 1576
9999 mem: incrementing refcount of 1269: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1576 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: location 1101 is 1156
9999 mem: decrementing refcount of 1273: 11 -> 10
9999 mem: storing 1269 in location 1156
9999 mem: incrementing refcount of 1269: 9 -> 10
 106 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 abandon: picking up space from free-list of size 11
9999 mem: new alloc from free list: 1520
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1523
9999 mem: incrementing refcount of 1152: 14 -> 15
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1269
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1524
 107 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1269
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1525
 107 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1524 is 0
9999 mem: location 1525 is 1161
9999 mem: storing 0 in location 1161
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1269
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1526
 107 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1269
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1523 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1527
9999 mem: incrementing refcount of 1171: 9 -> 10
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1269
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1270
9998 run: its type is "character"
9999 mem: location 1270 is 120
9999 mem: storing 120 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 120
9999 mem: storing 0 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1269
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1575
9999 mem: incrementing refcount of 1269: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1269
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1575 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1575 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1272
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1272 is 1265
9999 mem: storing 1265 in location 1576
9999 mem: incrementing refcount of 1265: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1576 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1265
9999 mem: location 1526 is 1156
9999 mem: decrementing refcount of 1269: 11 -> 10
9999 mem: storing 1265 in location 1156
9999 mem: incrementing refcount of 1265: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1265
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1265
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1266
9998 run: its type is "character"
9999 mem: location 1266 is 120
9999 mem: storing 120 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 120
9999 mem: storing 0 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1265
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1575
9999 mem: incrementing refcount of 1265: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1265
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1575 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1575 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1268
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1268 is 1261
9999 mem: storing 1261 in location 1576
9999 mem: incrementing refcount of 1261: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1576 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1261
9999 mem: location 1526 is 1156
9999 mem: decrementing refcount of 1265: 11 -> 10
9999 mem: storing 1261 in location 1156
9999 mem: incrementing refcount of 1261: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1261
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1262
9998 run: its type is "character"
9999 mem: location 1262 is 101
9999 mem: storing 101 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 101
9999 mem: storing 0 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1261
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1575
9999 mem: incrementing refcount of 1261: 10 -> 11
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1261
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1575 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1575 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1264
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1264 is 1257
9999 mem: storing 1257 in location 1576
9999 mem: incrementing refcount of 1257: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1576 is 1257
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1257
9999 mem: location 1526 is 1156
9999 mem: decrementing refcount of 1261: 11 -> 10
9999 mem: storing 1257 in location 1156
9999 mem: incrementing refcount of 1257: 9 -> 10
 107 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1257
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1257
9999 mem: location 1527 is 1171
9999 mem: storing 0 in location 1528
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1528 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1526 is 1156
9999 mem: location 1156 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1258
9998 run: its type is "character"
9999 mem: location 1258 is 10
9999 mem: storing 10 in location 1529
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1529 is 10
9999 mem: storing 1 in location 1530
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1530 is 1
9998 run: jumping to instruction 16
 107 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1523 is 1152
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1099 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1104
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1101 is 1156
9999 mem: location 1156 is 1257
9999 mem: location 1104 is 1154
9999 mem: decrementing refcount of 1225: 15 -> 14
9999 mem: storing 1257 in location 1154
9999 mem: incrementing refcount of 1257: 10 -> 11
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1099 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1475
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1476
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1477
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1257
9999 mem: storing 1257 in location 1478
9999 mem: incrementing refcount of 1257: 11 -> 12
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 514
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1534
9999 mem: storing 1534 in location 1455
9999 mem: incrementing refcount of 1534: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1472 is 1
9999 mem: location 1473 is 0
9999 mem: location 1474 is 1225
9999 mem: location 1476 is 1
9999 mem: location 1477 is 0
9999 mem: location 1478 is 1257
9999 mem: location 1475 is 0
9999 mem: location 1455 is 1534
9999 mem: skipping refcount at 1534
9999 mem: location 1455 is 1534
9999 mem: skipping refcount at 1534
9999 mem: storing 1 in location 1535
9999 mem: storing 1 in location 1536
9999 mem: storing 0 in location 1537
9999 mem: storing 1225 in location 1538
9999 mem: storing 1 in location 1539
9999 mem: storing 0 in location 1540
9999 mem: storing 1257 in location 1541
9999 mem: storing 0 in location 1542
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1437 is 1152
9999 mem: location 1455 is 1534
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 15 -> 16
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1534 in location 1189
9999 mem: incrementing refcount of 1534: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1531
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1534
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 1531
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1534 in location 1168
9999 mem: incrementing refcount of 1534: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1531 in location 1169
9999 mem: incrementing refcount of 1531: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1577
9999 mem: storing 1577 in location 1170
9999 mem: incrementing refcount of 1577: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1534
9999 mem: location 1169 is 1531
9999 mem: location 1170 is 1577
9999 mem: skipping refcount at 1577
9999 mem: location 1170 is 1577
9999 mem: skipping refcount at 1577
9999 mem: storing 1534 in location 1578
9999 mem: storing 1531 in location 1579
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1577
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1577
9999 mem: location 1190 is 1163
9999 mem: decrementing refcount of 1531: 3 -> 2
9999 mem: storing 1577 in location 1163
9999 mem: incrementing refcount of 1577: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 16 -> 15
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 15 -> 16
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1470 is 1154
9999 mem: location 1154 is 1257
9999 mem: location 1471 is 1225
9999 mem: storing 0 in location 1484
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1484 is 0
9999 mem: storing 1 in location 1442
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1436 is 1008
9999 mem: location 1437 is 1152
9999 mem: location 1442 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 78 -> 79
9999 mem: decrementing refcount of 1152: 16 -> 15
9999 mem: storing 1152 in location 1408
9999 mem: incrementing refcount of 1152: 15 -> 16
9999 mem: storing 1 in location 1418
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1406 is 1008
9999 mem: location 1408 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1100
9999 mem: incrementing refcount of 1152: 16 -> 17
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1325
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1329
9999 mem: incrementing refcount of 1152: 17 -> 18
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1329 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1330
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1328 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1575
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1575 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1576
 107 run: return {height: "number"}
9999 mem: location 1576 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1331
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1332
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1257
9999 mem: storing 1257 in location 1333
9999 mem: incrementing refcount of 1257: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1257
9999 mem: storing 1257 in location 1334
9999 mem: incrementing refcount of 1257: 13 -> 14
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1257
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1575
9999 mem: incrementing refcount of 1257: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1257
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1575 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1576
9999 mem: incrementing refcount of 1261: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 15 -> 14
9999 mem: storing 1261 in location 1333
9999 mem: incrementing refcount of 1261: 11 -> 12
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1335
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1338
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1339
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1340
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 1
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 82 -> 83
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1261
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1257
9999 mem: location 1340 is 1156
9999 mem: decrementing refcount of 1257: 14 -> 13
9999 mem: storing 1257 in location 1156
9999 mem: incrementing refcount of 1257: 13 -> 14
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1333 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1262
9998 run: its type is "character"
9999 mem: location 1262 is 101
9999 mem: storing 101 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1580
9999 mem: storing 10 in location 1581
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 101
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 101
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 101
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 101
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 83 -> 84
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
9990 schedule: print/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 101
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 26 -> 27
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 101
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 10
9999 mem: storing 1036 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 101
9999 mem: location 1390 is 1036
9999 mem: storing 101 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 101
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1261
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1575
9999 mem: incrementing refcount of 1261: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1261
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1575 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1576
9999 mem: incrementing refcount of 1265: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 13 -> 12
9999 mem: storing 1265 in location 1333
9999 mem: incrementing refcount of 1265: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1257
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1575
9999 mem: incrementing refcount of 1257: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1257
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1575 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1576
9999 mem: incrementing refcount of 1261: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 15 -> 14
9999 mem: storing 1261 in location 1334
9999 mem: incrementing refcount of 1261: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1265
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 1
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1333 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1266
9998 run: its type is "character"
9999 mem: location 1266 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 84 -> 85
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 27 -> 28
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 11
9999 mem: storing 1038 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1038
9999 mem: storing 120 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1575
9999 mem: incrementing refcount of 1265: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1265
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1575 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1576
9999 mem: incrementing refcount of 1269: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 13 -> 12
9999 mem: storing 1269 in location 1333
9999 mem: incrementing refcount of 1269: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1261
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1575
9999 mem: incrementing refcount of 1261: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1261
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1575 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1576
9999 mem: incrementing refcount of 1265: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 15 -> 14
9999 mem: storing 1265 in location 1334
9999 mem: incrementing refcount of 1265: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1269
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 2
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1333 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1270
9998 run: its type is "character"
9999 mem: location 1270 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 28 -> 29
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 12
9999 mem: storing 1040 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1040
9999 mem: storing 120 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1575
9999 mem: incrementing refcount of 1269: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1575 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1576
9999 mem: incrementing refcount of 1273: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 13 -> 12
9999 mem: storing 1273 in location 1333
9999 mem: incrementing refcount of 1273: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1575
9999 mem: incrementing refcount of 1265: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1265
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1575 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1576
9999 mem: incrementing refcount of 1269: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 15 -> 14
9999 mem: storing 1269 in location 1334
9999 mem: incrementing refcount of 1269: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1273
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1333 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1274
9998 run: its type is "character"
9999 mem: location 1274 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1346
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 86 -> 87
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 87 -> 88
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 29 -> 30
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 13
9999 mem: storing 1042 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 88 -> 87
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 1
9999 mem: storing 2 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 2
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 89 -> 88
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1273
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1575
9999 mem: incrementing refcount of 1273: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1273
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1575 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1275
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1275 is 1277
9999 mem: storing 1277 in location 1576
9999 mem: incrementing refcount of 1277: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1273: 13 -> 12
9999 mem: storing 1277 in location 1333
9999 mem: incrementing refcount of 1277: 10 -> 11
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1575
9999 mem: incrementing refcount of 1269: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1575 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1576
9999 mem: incrementing refcount of 1273: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 15 -> 14
9999 mem: storing 1273 in location 1334
9999 mem: incrementing refcount of 1273: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1277
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 1281
9999 mem: location 1280 is 1273
9999 mem: location 1333 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1278
9998 run: its type is "character"
9999 mem: location 1278 is 102
9999 mem: storing 102 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 102
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 102
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 102
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 102
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 102
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1384
9990 schedule: print/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 30 -> 31
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 102
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 20
9999 mem: storing 1056 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 102
9999 mem: location 1390 is 1056
9999 mem: storing 102 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 102
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1575
9999 mem: incrementing refcount of 1277: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 1281
9999 mem: location 1280 is 1273
9999 mem: location 1575 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1281
9999 mem: storing 1281 in location 1576
9999 mem: incrementing refcount of 1281: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1281
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1281
9999 mem: decrementing refcount of 1277: 12 -> 11
9999 mem: storing 1281 in location 1333
9999 mem: incrementing refcount of 1281: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1273
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1575
9999 mem: incrementing refcount of 1273: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1273
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1575 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1275
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1275 is 1277
9999 mem: storing 1277 in location 1576
9999 mem: incrementing refcount of 1277: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1273: 15 -> 14
9999 mem: storing 1277 in location 1334
9999 mem: incrementing refcount of 1277: 12 -> 13
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1281
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 1285
9999 mem: location 1284 is 1277
9999 mem: location 1333 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy is 1282
9998 run: its type is "character"
9999 mem: location 1282 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 31 -> 32
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 21
9999 mem: storing 1058 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1058
9999 mem: storing 120 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1281
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1281 in location 1575
9999 mem: incrementing refcount of 1281: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1281
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 1285
9999 mem: location 1284 is 1277
9999 mem: location 1575 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy is 1283
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1283 is 1285
9999 mem: storing 1285 in location 1576
9999 mem: incrementing refcount of 1285: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1285
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1285
9999 mem: decrementing refcount of 1281: 7 -> 6
9999 mem: storing 1285 in location 1333
9999 mem: incrementing refcount of 1285: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1277
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1277 in location 1575
9999 mem: incrementing refcount of 1277: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1277
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1277
9999 mem: skipping refcount at 1277
9999 mem: location 1278 is 102
9999 mem: location 1279 is 1281
9999 mem: location 1280 is 1273
9999 mem: location 1575 is 1277
9999 mem: skipping refcount at 1277
9998 run: address to copy is 1279
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1279 is 1281
9999 mem: storing 1281 in location 1576
9999 mem: incrementing refcount of 1281: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1281
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1281
9999 mem: decrementing refcount of 1277: 14 -> 13
9999 mem: storing 1281 in location 1334
9999 mem: incrementing refcount of 1281: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1285
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 1289
9999 mem: location 1288 is 1281
9999 mem: location 1333 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1286
9998 run: its type is "character"
9999 mem: location 1286 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 32 -> 33
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 22
9999 mem: storing 1060 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1060
9999 mem: storing 120 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1285
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1575
9999 mem: incrementing refcount of 1285: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1285
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 1289
9999 mem: location 1288 is 1281
9999 mem: location 1575 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1287 is 1289
9999 mem: storing 1289 in location 1576
9999 mem: incrementing refcount of 1289: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1289
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1289
9999 mem: decrementing refcount of 1285: 7 -> 6
9999 mem: storing 1289 in location 1333
9999 mem: incrementing refcount of 1289: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1281
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1281 in location 1575
9999 mem: incrementing refcount of 1281: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1281
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1281
9999 mem: skipping refcount at 1281
9999 mem: location 1282 is 120
9999 mem: location 1283 is 1285
9999 mem: location 1284 is 1277
9999 mem: location 1575 is 1281
9999 mem: skipping refcount at 1281
9998 run: address to copy is 1283
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1283 is 1285
9999 mem: storing 1285 in location 1576
9999 mem: incrementing refcount of 1285: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1285
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1285
9999 mem: decrementing refcount of 1281: 9 -> 8
9999 mem: storing 1285 in location 1334
9999 mem: incrementing refcount of 1285: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1289
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 1293
9999 mem: location 1292 is 1285
9999 mem: location 1333 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy is 1290
9998 run: its type is "character"
9999 mem: location 1290 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 93 -> 94
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 33 -> 34
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 23
9999 mem: storing 1062 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 94 -> 93
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 2
9999 mem: storing 3 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 3
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 94 -> 95
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1289
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1289 in location 1575
9999 mem: incrementing refcount of 1289: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1289
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 1293
9999 mem: location 1292 is 1285
9999 mem: location 1575 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy is 1291
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1291 is 1293
9999 mem: storing 1293 in location 1576
9999 mem: incrementing refcount of 1293: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1289: 7 -> 6
9999 mem: storing 1293 in location 1333
9999 mem: incrementing refcount of 1293: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1285
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1285 in location 1575
9999 mem: incrementing refcount of 1285: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1285
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1285
9999 mem: skipping refcount at 1285
9999 mem: location 1286 is 120
9999 mem: location 1287 is 1289
9999 mem: location 1288 is 1281
9999 mem: location 1575 is 1285
9999 mem: skipping refcount at 1285
9998 run: address to copy is 1287
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1287 is 1289
9999 mem: storing 1289 in location 1576
9999 mem: incrementing refcount of 1289: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1289
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1289
9999 mem: decrementing refcount of 1285: 9 -> 8
9999 mem: storing 1289 in location 1334
9999 mem: incrementing refcount of 1289: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1293
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 1297
9999 mem: location 1296 is 1289
9999 mem: location 1333 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1294
9998 run: its type is "character"
9999 mem: location 1294 is 103
9999 mem: storing 103 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 103
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 103
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 103
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 103
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 103
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 103
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 30
9999 mem: storing 1076 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 101
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 103
9999 mem: location 1390 is 1076
9999 mem: storing 103 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1575
9999 mem: incrementing refcount of 1293: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1293
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 1297
9999 mem: location 1296 is 1289
9999 mem: location 1575 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1295
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1295 is 1297
9999 mem: storing 1297 in location 1576
9999 mem: incrementing refcount of 1297: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1297
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1297
9999 mem: decrementing refcount of 1293: 7 -> 6
9999 mem: storing 1297 in location 1333
9999 mem: incrementing refcount of 1297: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1289
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1289 in location 1575
9999 mem: incrementing refcount of 1289: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1289
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1289
9999 mem: skipping refcount at 1289
9999 mem: location 1290 is 10
9999 mem: location 1291 is 1293
9999 mem: location 1292 is 1285
9999 mem: location 1575 is 1289
9999 mem: skipping refcount at 1289
9998 run: address to copy is 1291
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1291 is 1293
9999 mem: storing 1293 in location 1576
9999 mem: incrementing refcount of 1293: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1293
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1293
9999 mem: decrementing refcount of 1289: 9 -> 8
9999 mem: storing 1293 in location 1334
9999 mem: incrementing refcount of 1293: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1297
9998 run: jump-unless fell through
9990 schedule: render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-nonempty-lines
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 1301
9999 mem: location 1300 is 1293
9999 mem: location 1333 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy is 1298
9998 run: its type is "character"
9999 mem: location 1298 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 96 -> 97
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 31
9999 mem: storing 1078 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1078
9999 mem: storing 120 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1297
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1297 in location 1575
9999 mem: incrementing refcount of 1297: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1297
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 1301
9999 mem: location 1300 is 1293
9999 mem: location 1575 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy is 1299
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1299 is 1301
9999 mem: storing 1301 in location 1576
9999 mem: incrementing refcount of 1301: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1301
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1301
9999 mem: decrementing refcount of 1297: 7 -> 6
9999 mem: storing 1301 in location 1333
9999 mem: incrementing refcount of 1301: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1293
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1293 in location 1575
9999 mem: incrementing refcount of 1293: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1293
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1293
9999 mem: skipping refcount at 1293
9999 mem: location 1294 is 103
9999 mem: location 1295 is 1297
9999 mem: location 1296 is 1289
9999 mem: location 1575 is 1293
9999 mem: skipping refcount at 1293
9998 run: address to copy is 1295
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1295 is 1297
9999 mem: storing 1297 in location 1576
9999 mem: incrementing refcount of 1297: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1297
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1297
9999 mem: decrementing refcount of 1293: 9 -> 8
9999 mem: storing 1297 in location 1334
9999 mem: incrementing refcount of 1297: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1301
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 1305
9999 mem: location 1304 is 1297
9999 mem: location 1333 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy is 1302
9998 run: its type is "character"
9999 mem: location 1302 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 120
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 97 -> 98
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 32
9999 mem: storing 1080 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1080
9999 mem: storing 120 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1301
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1301 in location 1575
9999 mem: incrementing refcount of 1301: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1301
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 1305
9999 mem: location 1304 is 1297
9999 mem: location 1575 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy is 1303
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1303 is 1305
9999 mem: storing 1305 in location 1576
9999 mem: incrementing refcount of 1305: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1305
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1305
9999 mem: decrementing refcount of 1301: 7 -> 6
9999 mem: storing 1305 in location 1333
9999 mem: incrementing refcount of 1305: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1297
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1297 in location 1575
9999 mem: incrementing refcount of 1297: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1297
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1297
9999 mem: skipping refcount at 1297
9999 mem: location 1298 is 120
9999 mem: location 1299 is 1301
9999 mem: location 1300 is 1293
9999 mem: location 1575 is 1297
9999 mem: skipping refcount at 1297
9998 run: address to copy is 1299
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1299 is 1301
9999 mem: storing 1301 in location 1576
9999 mem: incrementing refcount of 1301: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1301
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1301
9999 mem: decrementing refcount of 1297: 9 -> 8
9999 mem: storing 1301 in location 1334
9999 mem: incrementing refcount of 1301: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1305
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 1309
9999 mem: location 1308 is 1301
9999 mem: location 1333 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1306
9998 run: its type is "character"
9999 mem: location 1306 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1583
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1584
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1583 is 7
9999 mem: storing 1 in location 1585
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1586
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1587
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1587 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1584 is 10
9999 mem: storing 0 in location 1589
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1583 is 7
9999 mem: storing 0 in location 1590
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1590 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1583 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 98 -> 99
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 99 -> 100
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 37 -> 38
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 33
9999 mem: storing 1082 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 100 -> 99
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 3
9999 mem: storing 4 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 100 -> 101
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1305
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1305 in location 1575
9999 mem: incrementing refcount of 1305: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1305
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1305
9999 mem: skipping refcount at 1305
9999 mem: location 1306 is 10
9999 mem: location 1307 is 1309
9999 mem: location 1308 is 1301
9999 mem: location 1575 is 1305
9999 mem: skipping refcount at 1305
9998 run: address to copy is 1307
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1307 is 1309
9999 mem: storing 1309 in location 1576
9999 mem: incrementing refcount of 1309: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1309
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1309
9999 mem: decrementing refcount of 1305: 7 -> 6
9999 mem: storing 1309 in location 1333
9999 mem: incrementing refcount of 1309: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1301
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1301 in location 1575
9999 mem: incrementing refcount of 1301: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1575 is 1301
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1575 is 1301
9999 mem: skipping refcount at 1301
9999 mem: location 1302 is 120
9999 mem: location 1303 is 1305
9999 mem: location 1304 is 1297
9999 mem: location 1575 is 1301
9999 mem: skipping refcount at 1301
9998 run: address to copy is 1303
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1303 is 1305
9999 mem: storing 1305 in location 1576
9999 mem: incrementing refcount of 1305: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1576 is 1305
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1305
9999 mem: decrementing refcount of 1301: 9 -> 8
9999 mem: storing 1305 in location 1334
9999 mem: incrementing refcount of 1305: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1309
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1331 is 4
9999 mem: storing 1 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1349
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1309
9999 mem: location 1349 is 1155
9999 mem: decrementing refcount of 1277: 13 -> 12
9999 mem: storing 1309 in location 1155
9999 mem: incrementing refcount of 1309: 6 -> 7
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1350
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1342 is 0
9999 mem: location 1350 is 1
9999 mem: storing 0 in location 1351
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1352
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1353
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1354
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1354 is 1159
9999 mem: storing 4 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 102 -> 103
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 103 -> 104
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 104 -> 105
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 106 -> 105
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
9990 schedule: draw-horizontal/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-past-nonempty-lines
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1422
9999 mem: incrementing refcount of 1008: 106 -> 107
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1423
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1424
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1425
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1426
9999 mem: storing 1 in location 1427
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1428
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1430
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1423 is 5
9999 mem: location 1424 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1006 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1422
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 0
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 0
9999 mem: storing 1 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 1
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 1
9999 mem: storing 2 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 2
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 2
9999 mem: storing 3 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 3
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 3
9999 mem: storing 4 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 4
9999 mem: location 1425 is 3
9999 mem: storing 0 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1422 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1546
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1549
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1550
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1551
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1549 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1552
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1550 is 6
9999 mem: location 1552 is 1011
9999 mem: storing 6 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1553
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1551 is 0
9999 mem: location 1553 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1549 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 113 -> 114
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 115 -> 116
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 116 -> 115
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 116 -> 117
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 117 -> 118
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 118 -> 117
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 118 -> 119
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1554
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1557
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1558
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1559
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1560
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1558 is 6
9999 mem: storing 7 in location 1558
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1557 is 1008
9999 mem: location 1558 is 7
9999 mem: location 1559 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1546
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1549
9999 mem: incrementing refcount of 1008: 120 -> 121
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1550
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1551
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1549 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1552
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1550 is 7
9999 mem: location 1552 is 1011
9999 mem: storing 7 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1553
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1551 is 0
9999 mem: location 1553 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1549 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1557
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1557 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1575
9999 mem: incrementing refcount of 1008: 121 -> 122
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1575 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1575 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1576
 108 run: return {height: "number"}
9999 mem: location 1576 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1561
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1558 is 7
9999 mem: location 1561 is 4
9999 mem: storing 1 in location 1562
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1562 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1557 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 121 -> 122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1410
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1406 is 1008
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 122 -> 123
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 122 -> 123
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1407 is 1569
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1569 in location 1422
9999 mem: incrementing refcount of 1569: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1422 is 1569
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1563
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9998 run: address to copy is 1570
9999 mem: storing 1570 in location 1423
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1563
9999 mem: location 1422 is 1569
9999 mem: skipping refcount at 1569
9998 run: address to copy is 1571
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1571 is 1563
9999 mem: storing 1563 in location 1424
9999 mem: incrementing refcount of 1563: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1424 is 1563
9999 mem: skipping refcount at 1563
9999 mem: storing 1 in location 1425
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1423 is 1570
9999 mem: location 1570 is 1
9999 mem: location 1425 is 1
9999 mem: storing 1 in location 1426
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1572
9999 mem: storing 1572 in location 1427
9999 mem: incrementing refcount of 1572: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1427 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: location 1575 is 0
9999 mem: location 1576 is 0
9999 mem: location 1422 is 1569
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1569
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: decrementing refcount of 1569: 3 -> 2
9999 mem: storing 1569 in location 1407
9999 mem: incrementing refcount of 1569: 2 -> 3
9999 mem: storing 1 in location 1415
9999 mem: storing 1 in location 1416
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1406 is 1008
9999 mem: location 1407 is 1569
9999 mem: location 1408 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .exx       .\n    .fxx       .\n    .gxx       .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-up: ()}
9992 load: after rewriting: press {page-up: ()}
9999 mem: storing 'press' event starting at 1594
9999 mem: storing console in 1598
9999 mem: storing console data in 1600
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1003 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1003
9991 transform: --- rewrite 'stash' instructions in recipe run_1003
9991 transform: --- fill in reply ingredients from header for recipe run_1003
9991 transform: --- deduce types for recipe run_1003
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1003
9991 transform: --- collect surrounding spaces for recipe run_1003
9991 transform: --- transform names for recipe run_1003
9991 transform: --- resolve ambiguous calls for recipe run_1003
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1003
9991 transform: --- transform braces for recipe run_1003
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1003
9991 transform: --- perform checks for recipe run_1003
9991 transform: --- type-check 'call' instructions inside recipe run_1003
9991 transform: --- type-check calls inside recipe run_1003
9991 transform: --- convert 'new' to 'allocate' for recipe run_1003
9991 transform: --- type-check merge instructions in recipe run_1003
9991 transform: --- check types of reply instructions in recipe run_1003
9991 transform: --- checking reply instructions against header for run_1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1598
9999 mem: location 2 is 1152
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1403
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 123 -> 124
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1598 in location 1407
9999 mem: incrementing refcount of 1598: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1408
9999 mem: incrementing refcount of 1152: 18 -> 19
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1410
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1406 is 1008
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 124 -> 125
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 124 -> 125
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1407 is 1598
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1598 in location 1422
9999 mem: incrementing refcount of 1598: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1422 is 1598
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 0
9999 mem: location 1600 is 1592
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy is 1599
9999 mem: storing 1599 in location 1423
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 0
9999 mem: location 1600 is 1592
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy is 1600
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1600 is 1592
9999 mem: storing 1592 in location 1424
9999 mem: incrementing refcount of 1592: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1424 is 1592
9999 mem: skipping refcount at 1592
9999 mem: storing 1 in location 1425
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1423 is 1599
9999 mem: location 1599 is 0
9999 mem: location 1425 is 1
9999 mem: storing 0 in location 1426
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1424 is 1592
9999 mem: skipping refcount at 1592
9998 run: base address is 1593
9999 mem: location 1423 is 1599
9999 mem: location 1599 is 0
9998 run: address to copy is 1594
9998 run: its type is event
9999 mem: location 1594 is 1
9999 mem: location 1595 is 65519
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: storing 1 in location 1428
9999 mem: storing 65519 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1423 is 1599
9999 mem: location 1599 is 0
9999 mem: location 1423 is 1599
9999 mem: storing 1 in location 1599
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1428 is 1
9999 mem: location 1429 is 65519
9999 mem: location 1430 is 0
9999 mem: location 1431 is 0
9999 mem: location 1422 is 1598
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65519, 0, 0]
9998 run: result 1 is 1598
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1411
9999 mem: storing 65519 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: decrementing refcount of 1598: 2 -> 1
9999 mem: storing 1598 in location 1407
9999 mem: incrementing refcount of 1598: 1 -> 2
9999 mem: storing 1 in location 1415
9999 mem: storing 0 in location 1416
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1411 is 1
9999 mem: location 1412 is 65519
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: storing 0 in location 1417
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1406 is 1008
9999 mem: location 1408 is 1152
9999 mem: location 1411 is 1
9999 mem: location 1412 is 65519
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1433
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1436
9999 mem: incrementing refcount of 1008: 125 -> 126
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 19 -> 20
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1438
9999 mem: storing 65519 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1442
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1437 is 1152
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1601
9999 mem: storing 3 in location 1602
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1604
9999 mem: incrementing refcount of 1008: 126 -> 127
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1604 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1605
 106 run: return {width: "number"}
9999 mem: location 1605 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1443
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1436 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1604
9999 mem: incrementing refcount of 1008: 127 -> 128
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1604 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1605
 106 run: return {height: "number"}
9999 mem: location 1605 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1444
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1445
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1446
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1447
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1448
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1449
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1448 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1450
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1449 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1451
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1438 is 1
9999 mem: location 1439 is 65519
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: storing 0 in location 1452
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1438 is 1
9999 mem: location 1439 is 65519
9999 mem: location 1440 is 0
9999 mem: location 1441 is 0
9999 mem: storing 1439 in location 1506
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1506 is 1439
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1506 is 1439
9999 mem: location 1439 is 65519
9999 mem: storing 1 in location 1469
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1469 is 1
9998 run: jump-unless fell through
 105 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1470
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1470 is 1154
9999 mem: location 1154 is 1257
9999 mem: storing 1257 in location 1471
9999 mem: incrementing refcount of 1257: 14 -> 15
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1472
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1473
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1257
9999 mem: storing 1257 in location 1474
9999 mem: incrementing refcount of 1257: 15 -> 16
 105 run: {editor: ("address" "shared" "editor-data")} <- page-up {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1437 is 1152
9999 mem: location 1444 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1178
9999 mem: incrementing refcount of 1152: 20 -> 21
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1179
 106 run: {max: "number"} <- subtract {screen-height: "number"}, {1: "literal", "menu-bar": ()}, {1: "literal", "overlapping-line": ()}
9999 mem: location 1179 is 4
9999 mem: storing 2 in location 1180
 106 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1181
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1178 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1178 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1182
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1181 is 0
9999 mem: location 1180 is 2
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1182 is 1154
9999 mem: location 1154 is 1257
9999 mem: location 1178 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1606
9999 mem: storing 14 in location 1607
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1609
9999 mem: incrementing refcount of 1257: 16 -> 17
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1610
9999 mem: incrementing refcount of 1152: 21 -> 22
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1609 is 1257
9999 mem: storing 1257 in location 1611
9999 mem: incrementing refcount of 1257: 17 -> 18
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1611 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1611 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1258
9998 run: its type is "character"
9999 mem: location 1258 is 10
9999 mem: storing 10 in location 1612
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1613
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1614
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1614 is 3
9999 mem: location 1613 is 0
9999 mem: storing 3 in location 1615
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1257
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1616
9999 mem: incrementing refcount of 1171: 10 -> 11
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1257
9999 mem: location 1616 is 1171
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1099
9999 mem: incrementing refcount of 1257: 18 -> 19
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1100
9999 mem: incrementing refcount of 1171: 11 -> 12
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1101
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1099 is 1257
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1257
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1102 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1257
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1604
9999 mem: incrementing refcount of 1257: 19 -> 20
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1257
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1253
9999 mem: storing 1253 in location 1605
9999 mem: incrementing refcount of 1253: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1253
9999 mem: decrementing refcount of 1257: 20 -> 19
9999 mem: storing 1253 in location 1099
9999 mem: incrementing refcount of 1253: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1253
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1253
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1099 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1254
9998 run: its type is "character"
9999 mem: location 1254 is 120
9999 mem: storing 120 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 120
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 0
9999 mem: storing 1 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1253
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1604
9999 mem: incrementing refcount of 1253: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1253
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1249
9999 mem: storing 1249 in location 1605
9999 mem: incrementing refcount of 1249: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1253: 11 -> 10
9999 mem: storing 1249 in location 1099
9999 mem: incrementing refcount of 1249: 9 -> 10
9990 schedule: previous-line-length/before-previous-line/page-up/handle-keyboard-event/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-nonempty-lines
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1249
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1249
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1099 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1250
9998 run: its type is "character"
9999 mem: location 1250 is 120
9999 mem: storing 120 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 120
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 1
9999 mem: storing 2 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1249
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1604
9999 mem: incrementing refcount of 1249: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1249
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1245
9999 mem: storing 1245 in location 1605
9999 mem: incrementing refcount of 1245: 12 -> 13
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1249: 11 -> 10
9999 mem: storing 1245 in location 1099
9999 mem: incrementing refcount of 1245: 13 -> 14
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1245
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1245
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1099 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1246
9998 run: its type is "character"
9999 mem: location 1246 is 100
9999 mem: storing 100 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 100
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 2
9999 mem: storing 3 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1245
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1604
9999 mem: incrementing refcount of 1245: 14 -> 15
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1245
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1241
9999 mem: storing 1241 in location 1605
9999 mem: incrementing refcount of 1241: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1245: 15 -> 14
9999 mem: storing 1241 in location 1099
9999 mem: incrementing refcount of 1241: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1241
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1241
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1099 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 10
9999 mem: storing 10 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 10
9999 mem: storing 1 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1101 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1617
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1617 is 3
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1617 is 3
9999 mem: location 1615 is 3
9999 mem: storing 0 in location 1619
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jump-if fell through
 107 run: {max: "number"} <- copy {max-line-length: "number"}
9999 mem: location 1615 is 3
9999 mem: storing 3 in location 1619
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1619 is 3
9999 mem: storing 4 in location 1619
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1620
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 0
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1257
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1604
9999 mem: incrementing refcount of 1257: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1257
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1260
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1260 is 1253
9999 mem: storing 1253 in location 1605
9999 mem: incrementing refcount of 1253: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1253
9999 mem: storing 1253 in location 1618
9999 mem: incrementing refcount of 1253: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1253
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1253
9999 mem: decrementing refcount of 1257: 20 -> 19
9999 mem: storing 1253 in location 1611
9999 mem: incrementing refcount of 1253: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 0
9999 mem: storing 1 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 1
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1253
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1604
9999 mem: incrementing refcount of 1253: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1253
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1256 is 1249
9999 mem: storing 1249 in location 1605
9999 mem: incrementing refcount of 1249: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1253: 14 -> 13
9999 mem: storing 1249 in location 1618
9999 mem: incrementing refcount of 1249: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1249
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1249
9999 mem: decrementing refcount of 1253: 13 -> 12
9999 mem: storing 1249 in location 1611
9999 mem: incrementing refcount of 1249: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 1
9999 mem: storing 2 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 2
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1249
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1604
9999 mem: incrementing refcount of 1249: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1249
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1252
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1252 is 1245
9999 mem: storing 1245 in location 1605
9999 mem: incrementing refcount of 1245: 14 -> 15
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1249: 14 -> 13
9999 mem: storing 1245 in location 1618
9999 mem: incrementing refcount of 1245: 15 -> 16
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1245
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1245
9999 mem: decrementing refcount of 1249: 13 -> 12
9999 mem: storing 1245 in location 1611
9999 mem: incrementing refcount of 1245: 16 -> 17
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 2
9999 mem: storing 3 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 3
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1245
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1604
9999 mem: incrementing refcount of 1245: 17 -> 18
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1245
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1248
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1248 is 1241
9999 mem: storing 1241 in location 1605
9999 mem: incrementing refcount of 1241: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1245: 18 -> 17
9999 mem: storing 1241 in location 1618
9999 mem: incrementing refcount of 1241: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1241
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1241
9999 mem: decrementing refcount of 1245: 17 -> 16
9999 mem: storing 1241 in location 1611
9999 mem: incrementing refcount of 1241: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 3
9999 mem: storing 4 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 4
9999 mem: location 1619 is 4
9999 mem: storing 1 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1241
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: storing 1241 in location 1184
9999 mem: incrementing refcount of 1241: 19 -> 20
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1184 is 1241
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1241
9999 mem: location 1182 is 1154
9999 mem: decrementing refcount of 1257: 19 -> 18
9999 mem: storing 1241 in location 1154
9999 mem: incrementing refcount of 1241: 20 -> 21
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1181 is 0
9999 mem: storing 1 in location 1181
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1181 is 1
9999 mem: location 1180 is 2
9999 mem: storing 0 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1182 is 1154
9999 mem: location 1154 is 1241
9999 mem: location 1178 is 1152
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1606
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1609
9999 mem: incrementing refcount of 1241: 21 -> 22
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1610
9999 mem: incrementing refcount of 1152: 22 -> 23
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1609 is 1241
9999 mem: storing 1241 in location 1611
9999 mem: incrementing refcount of 1241: 22 -> 23
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1611 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1611 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 10
9999 mem: storing 10 in location 1612
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1241
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1613
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1241
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1614
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1614 is 3
9999 mem: location 1613 is 0
9999 mem: storing 3 in location 1615
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1241
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1610 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1171
9999 mem: storing 1171 in location 1616
9999 mem: incrementing refcount of 1171: 12 -> 13
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1241
9999 mem: location 1616 is 1171
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1099
9999 mem: incrementing refcount of 1241: 23 -> 24
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1100
9999 mem: incrementing refcount of 1171: 13 -> 14
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1101
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1099 is 1241
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1241
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1102 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1241
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1604
9999 mem: incrementing refcount of 1241: 24 -> 25
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1241
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1237
9999 mem: storing 1237 in location 1605
9999 mem: incrementing refcount of 1237: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1241: 25 -> 24
9999 mem: storing 1237 in location 1099
9999 mem: incrementing refcount of 1237: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1237
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1237
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1099 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 120
9999 mem: storing 120 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 120
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 0
9999 mem: storing 1 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1237
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1604
9999 mem: incrementing refcount of 1237: 16 -> 17
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1237
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1233
9999 mem: storing 1233 in location 1605
9999 mem: incrementing refcount of 1233: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1237: 17 -> 16
9999 mem: storing 1233 in location 1099
9999 mem: incrementing refcount of 1233: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1233
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1233
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1099 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 120
9999 mem: storing 120 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 120
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 1
9999 mem: storing 2 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1233
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1604
9999 mem: incrementing refcount of 1233: 16 -> 17
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1233
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1229
9999 mem: storing 1229 in location 1605
9999 mem: incrementing refcount of 1229: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1233: 17 -> 16
9999 mem: storing 1229 in location 1099
9999 mem: incrementing refcount of 1229: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1229
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1229
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1099 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 99
9999 mem: storing 99 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 99
9999 mem: storing 0 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1101 is 2
9999 mem: storing 3 in location 1101
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1229
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1604
9999 mem: incrementing refcount of 1229: 16 -> 17
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1229
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1225
9999 mem: storing 1225 in location 1605
9999 mem: incrementing refcount of 1225: 14 -> 15
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1229: 17 -> 16
9999 mem: storing 1225 in location 1099
9999 mem: incrementing refcount of 1225: 15 -> 16
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1099 is 1225
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1099 is 1225
9999 mem: location 1100 is 1171
9999 mem: storing 0 in location 1102
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1102 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1099 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1099 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1226
9998 run: its type is "character"
9999 mem: location 1226 is 10
9999 mem: storing 10 in location 1103
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1103 is 10
9999 mem: storing 1 in location 1104
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1104 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1101 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1617
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1617 is 3
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1617 is 3
9999 mem: location 1615 is 3
9999 mem: storing 0 in location 1619
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1619 is 0
9998 run: jump-if fell through
 107 run: {max: "number"} <- copy {max-line-length: "number"}
9999 mem: location 1615 is 3
9999 mem: storing 3 in location 1619
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1619 is 3
9999 mem: storing 4 in location 1619
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1620
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 0
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1241
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1604
9999 mem: incrementing refcount of 1241: 24 -> 25
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1241
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1244
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1244 is 1237
9999 mem: storing 1237 in location 1605
9999 mem: incrementing refcount of 1237: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1237
9999 mem: storing 1237 in location 1618
9999 mem: incrementing refcount of 1237: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1237
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1237
9999 mem: decrementing refcount of 1241: 25 -> 24
9999 mem: storing 1237 in location 1611
9999 mem: incrementing refcount of 1237: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 0
9999 mem: storing 1 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 1
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1237
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1604
9999 mem: incrementing refcount of 1237: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1237
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1240
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1240 is 1233
9999 mem: storing 1233 in location 1605
9999 mem: incrementing refcount of 1233: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1237: 20 -> 19
9999 mem: storing 1233 in location 1618
9999 mem: incrementing refcount of 1233: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1233
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1233
9999 mem: decrementing refcount of 1237: 19 -> 18
9999 mem: storing 1233 in location 1611
9999 mem: incrementing refcount of 1233: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 1
9999 mem: storing 2 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 2
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1233
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1604
9999 mem: incrementing refcount of 1233: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1233
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1236
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1236 is 1229
9999 mem: storing 1229 in location 1605
9999 mem: incrementing refcount of 1229: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1233: 20 -> 19
9999 mem: storing 1229 in location 1618
9999 mem: incrementing refcount of 1229: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1229
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1229
9999 mem: decrementing refcount of 1233: 19 -> 18
9999 mem: storing 1229 in location 1611
9999 mem: incrementing refcount of 1229: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 2
9999 mem: storing 3 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 3
9999 mem: location 1619 is 4
9999 mem: storing 0 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1229
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1604
9999 mem: incrementing refcount of 1229: 19 -> 20
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1229
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1232
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1232 is 1225
9999 mem: storing 1225 in location 1605
9999 mem: incrementing refcount of 1225: 16 -> 17
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1605 is 1225
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1229: 20 -> 19
9999 mem: storing 1225 in location 1618
9999 mem: incrementing refcount of 1225: 17 -> 18
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1618 is 1225
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1618 is 1225
9999 mem: decrementing refcount of 1229: 19 -> 18
9999 mem: storing 1225 in location 1611
9999 mem: incrementing refcount of 1225: 18 -> 19
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1620 is 3
9999 mem: storing 4 in location 1620
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1620 is 4
9999 mem: location 1619 is 4
9999 mem: storing 1 in location 1621
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1621 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1225
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1225
9999 mem: decrementing refcount of 1241: 24 -> 23
9999 mem: storing 1225 in location 1184
9999 mem: incrementing refcount of 1225: 19 -> 20
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1184 is 1225
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1225
9999 mem: location 1182 is 1154
9999 mem: decrementing refcount of 1241: 23 -> 22
9999 mem: storing 1225 in location 1154
9999 mem: incrementing refcount of 1225: 20 -> 21
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1181 is 1
9999 mem: storing 2 in location 1181
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1181 is 2
9999 mem: location 1180 is 2
9999 mem: storing 1 in location 1183
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 1
9998 run: jumping to instruction 14
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1152
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 23 -> 22
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 22 -> 23
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1475
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1476
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1477
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1437 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1225
9999 mem: storing 1225 in location 1478
9999 mem: incrementing refcount of 1225: 21 -> 22
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1475 is 0
9998 run: jumping to instruction 473
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1580
9999 mem: storing 1580 in location 1455
9999 mem: incrementing refcount of 1580: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1472 is 1
9999 mem: location 1473 is 0
9999 mem: location 1474 is 1257
9999 mem: location 1476 is 1
9999 mem: location 1477 is 0
9999 mem: location 1478 is 1225
9999 mem: location 1475 is 0
9999 mem: location 1455 is 1580
9999 mem: skipping refcount at 1580
9999 mem: location 1455 is 1580
9999 mem: skipping refcount at 1580
9999 mem: storing 1 in location 1581
9999 mem: storing 1 in location 1582
9999 mem: storing 0 in location 1583
9999 mem: storing 1257 in location 1584
9999 mem: storing 1 in location 1585
9999 mem: storing 0 in location 1586
9999 mem: storing 1225 in location 1587
9999 mem: storing 0 in location 1588
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1437 is 1152
9999 mem: location 1455 is 1580
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1185
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1188
9999 mem: incrementing refcount of 1152: 23 -> 24
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1580 in location 1189
9999 mem: incrementing refcount of 1580: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1577
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1189 is 1580
9999 mem: location 1190 is 1163
9999 mem: location 1163 is 1577
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1165
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1580 in location 1168
9999 mem: incrementing refcount of 1580: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1577 in location 1169
9999 mem: incrementing refcount of 1577: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1622
9999 mem: storing 1622 in location 1170
9999 mem: incrementing refcount of 1622: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1168 is 1580
9999 mem: location 1169 is 1577
9999 mem: location 1170 is 1622
9999 mem: skipping refcount at 1622
9999 mem: location 1170 is 1622
9999 mem: skipping refcount at 1622
9999 mem: storing 1580 in location 1623
9999 mem: storing 1577 in location 1624
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1622
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1622
9999 mem: location 1190 is 1163
9999 mem: decrementing refcount of 1577: 3 -> 2
9999 mem: storing 1622 in location 1163
9999 mem: incrementing refcount of 1622: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1188 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1164
9999 mem: storing 1164 in location 1191
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1191 is 1164
9999 mem: storing 0 in location 1164
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1188 is 1152
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1152
9999 mem: decrementing refcount of 1152: 24 -> 23
9999 mem: storing 1152 in location 1437
9999 mem: incrementing refcount of 1152: 23 -> 24
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1470 is 1154
9999 mem: location 1154 is 1225
9999 mem: location 1471 is 1257
9999 mem: storing 0 in location 1484
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1484 is 0
9999 mem: storing 1 in location 1442
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1436 is 1008
9999 mem: location 1437 is 1152
9999 mem: location 1442 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1152
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 127 -> 128
9999 mem: decrementing refcount of 1152: 24 -> 23
9999 mem: storing 1152 in location 1408
9999 mem: incrementing refcount of 1152: 23 -> 24
9999 mem: storing 1 in location 1418
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1406 is 1008
9999 mem: location 1408 is 1152
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1096
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1099
9999 mem: incrementing refcount of 1008: 128 -> 129
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1100
9999 mem: incrementing refcount of 1152: 24 -> 25
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1101
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1100 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1102
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1152
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1325
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 129 -> 130
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1152 in location 1329
9999 mem: incrementing refcount of 1152: 25 -> 26
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1329 is 1152
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1330
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1328 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1604
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1604 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1605
 107 run: return {height: "number"}
9999 mem: location 1605 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1331
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1158
9998 run: its type is "number"
9999 mem: location 1158 is 3
9999 mem: storing 3 in location 1332
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1154
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1154 is 1225
9999 mem: storing 1225 in location 1333
9999 mem: incrementing refcount of 1225: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1225
9999 mem: storing 1225 in location 1334
9999 mem: incrementing refcount of 1225: 23 -> 24
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1604
9999 mem: incrementing refcount of 1225: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1604 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1605
9999 mem: incrementing refcount of 1229: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 25 -> 24
9999 mem: storing 1229 in location 1333
9999 mem: incrementing refcount of 1229: 19 -> 20
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1335
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1338
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9999 mem: storing 1161 in location 1339
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1257
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1340
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 1
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 131 -> 132
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1229
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1225
9999 mem: location 1340 is 1156
9999 mem: decrementing refcount of 1257: 18 -> 17
9999 mem: storing 1225 in location 1156
9999 mem: incrementing refcount of 1225: 24 -> 25
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1333 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1230
9998 run: its type is "character"
9999 mem: location 1230 is 99
9999 mem: storing 99 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1625
9999 mem: storing 10 in location 1626
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 99
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 99
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 99
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 99
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 99
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 10
9999 mem: storing 1036 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 101
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 99
9999 mem: location 1390 is 1036
9999 mem: storing 99 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1389 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1604
9999 mem: incrementing refcount of 1229: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1605
9999 mem: incrementing refcount of 1233: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 21 -> 20
9999 mem: storing 1233 in location 1333
9999 mem: incrementing refcount of 1233: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1225
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1225 in location 1604
9999 mem: incrementing refcount of 1225: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1225
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1225
9999 mem: skipping refcount at 1225
9999 mem: location 1226 is 10
9999 mem: location 1227 is 1229
9999 mem: location 1228 is 1221
9999 mem: location 1604 is 1225
9999 mem: skipping refcount at 1225
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1229
9999 mem: storing 1229 in location 1605
9999 mem: incrementing refcount of 1229: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1229
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1229
9999 mem: decrementing refcount of 1225: 26 -> 25
9999 mem: storing 1229 in location 1334
9999 mem: incrementing refcount of 1229: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1233
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 1
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1333 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1234
9998 run: its type is "character"
9999 mem: location 1234 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
9990 schedule: print/render/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 11
9999 mem: storing 1038 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1038
9999 mem: storing 120 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1038
9999 mem: location 1038 is 120
9999 mem: location 1039 is 7
9999 mem: location 1389 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1604
9999 mem: incrementing refcount of 1233: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1605
9999 mem: incrementing refcount of 1237: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 21 -> 20
9999 mem: storing 1237 in location 1333
9999 mem: incrementing refcount of 1237: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1229
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1229 in location 1604
9999 mem: incrementing refcount of 1229: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1229
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9999 mem: location 1230 is 99
9999 mem: location 1231 is 1233
9999 mem: location 1232 is 1225
9999 mem: location 1604 is 1229
9999 mem: skipping refcount at 1229
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1233
9999 mem: storing 1233 in location 1605
9999 mem: incrementing refcount of 1233: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1233
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1233
9999 mem: decrementing refcount of 1229: 23 -> 22
9999 mem: storing 1233 in location 1334
9999 mem: incrementing refcount of 1233: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1237
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 2
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1333 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1238
9998 run: its type is "character"
9999 mem: location 1238 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 12
9999 mem: storing 1040 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1040
9999 mem: storing 120 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1040
9999 mem: location 1040 is 120
9999 mem: location 1041 is 7
9999 mem: location 1389 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1604
9999 mem: incrementing refcount of 1237: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1605
9999 mem: incrementing refcount of 1241: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 21 -> 20
9999 mem: storing 1241 in location 1333
9999 mem: incrementing refcount of 1241: 23 -> 24
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1233
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1233 in location 1604
9999 mem: incrementing refcount of 1233: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1233
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9999 mem: location 1234 is 120
9999 mem: location 1235 is 1237
9999 mem: location 1236 is 1229
9999 mem: location 1604 is 1233
9999 mem: skipping refcount at 1233
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1237
9999 mem: storing 1237 in location 1605
9999 mem: incrementing refcount of 1237: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1237
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1237
9999 mem: decrementing refcount of 1233: 23 -> 22
9999 mem: storing 1237 in location 1334
9999 mem: incrementing refcount of 1237: 21 -> 22
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1241
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 1
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1333 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1242
9998 run: its type is "character"
9999 mem: location 1242 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 1
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 3
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1346
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1376 is 10
9999 mem: storing 10 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 10
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 41 -> 42
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 13
9999 mem: storing 1042 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1042
9999 mem: storing 32 in location 1042
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1389 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1043
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 1
9999 mem: storing 2 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 2
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 137 -> 138
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1604
9999 mem: incrementing refcount of 1241: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1245
9999 mem: storing 1245 in location 1605
9999 mem: incrementing refcount of 1245: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1241: 25 -> 24
9999 mem: storing 1245 in location 1333
9999 mem: incrementing refcount of 1245: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1237
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1237 in location 1604
9999 mem: incrementing refcount of 1237: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1237
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9999 mem: location 1238 is 120
9999 mem: location 1239 is 1241
9999 mem: location 1240 is 1233
9999 mem: location 1604 is 1237
9999 mem: skipping refcount at 1237
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1241
9999 mem: storing 1241 in location 1605
9999 mem: incrementing refcount of 1241: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1241
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1241
9999 mem: decrementing refcount of 1237: 23 -> 22
9999 mem: storing 1241 in location 1334
9999 mem: incrementing refcount of 1241: 25 -> 26
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1245
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1333 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1246
9998 run: its type is "character"
9999 mem: location 1246 is 100
9999 mem: storing 100 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 100
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 100
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 100
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 100
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 138 -> 139
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 100
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 42 -> 43
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 100
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 20
9999 mem: storing 1056 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 102
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 100
9999 mem: location 1390 is 1056
9999 mem: storing 100 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1389 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1245
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1604
9999 mem: incrementing refcount of 1245: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1245
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1249
9999 mem: storing 1249 in location 1605
9999 mem: incrementing refcount of 1249: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1245: 19 -> 18
9999 mem: storing 1249 in location 1333
9999 mem: incrementing refcount of 1249: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1241
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1241 in location 1604
9999 mem: incrementing refcount of 1241: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1241
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9999 mem: location 1242 is 10
9999 mem: location 1243 is 1245
9999 mem: location 1244 is 1237
9999 mem: location 1604 is 1241
9999 mem: skipping refcount at 1241
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1245
9999 mem: storing 1245 in location 1605
9999 mem: incrementing refcount of 1245: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1245
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1245
9999 mem: decrementing refcount of 1241: 27 -> 26
9999 mem: storing 1245 in location 1334
9999 mem: incrementing refcount of 1245: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1249
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1333 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1250
9998 run: its type is "character"
9999 mem: location 1250 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 43 -> 44
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 21
9999 mem: storing 1058 in location 1389
9990 schedule: print/render/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1058
9999 mem: storing 120 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1058
9999 mem: location 1058 is 120
9999 mem: location 1059 is 7
9999 mem: location 1389 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1249
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1604
9999 mem: incrementing refcount of 1249: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1249
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1253
9999 mem: storing 1253 in location 1605
9999 mem: incrementing refcount of 1253: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1253
9999 mem: decrementing refcount of 1249: 15 -> 14
9999 mem: storing 1253 in location 1333
9999 mem: incrementing refcount of 1253: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1245
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1245 in location 1604
9999 mem: incrementing refcount of 1245: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1245
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9999 mem: location 1246 is 100
9999 mem: location 1247 is 1249
9999 mem: location 1248 is 1241
9999 mem: location 1604 is 1245
9999 mem: skipping refcount at 1245
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1249
9999 mem: storing 1249 in location 1605
9999 mem: incrementing refcount of 1249: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1249
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1249
9999 mem: decrementing refcount of 1245: 21 -> 20
9999 mem: storing 1249 in location 1334
9999 mem: incrementing refcount of 1249: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1253
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1333 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1254
9998 run: its type is "character"
9999 mem: location 1254 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 44 -> 45
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 22
9999 mem: storing 1060 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1060
9999 mem: storing 120 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1060
9999 mem: location 1060 is 120
9999 mem: location 1061 is 7
9999 mem: location 1389 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1253
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1604
9999 mem: incrementing refcount of 1253: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1253
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1257
9999 mem: storing 1257 in location 1605
9999 mem: incrementing refcount of 1257: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1257
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1253: 15 -> 14
9999 mem: storing 1257 in location 1333
9999 mem: incrementing refcount of 1257: 18 -> 19
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1249
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1249 in location 1604
9999 mem: incrementing refcount of 1249: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1249
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9999 mem: location 1250 is 120
9999 mem: location 1251 is 1253
9999 mem: location 1252 is 1245
9999 mem: location 1604 is 1249
9999 mem: skipping refcount at 1249
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1253
9999 mem: storing 1253 in location 1605
9999 mem: incrementing refcount of 1253: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1253
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1253
9999 mem: decrementing refcount of 1249: 17 -> 16
9999 mem: storing 1253 in location 1334
9999 mem: incrementing refcount of 1253: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1257
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 2
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1333 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1258
9998 run: its type is "character"
9999 mem: location 1258 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 2
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1376 is 10
9999 mem: storing 20 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 20
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 45 -> 46
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 23
9999 mem: storing 1062 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1062
9999 mem: storing 32 in location 1062
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1389 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1063
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 142 -> 143
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 2
9999 mem: storing 3 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 3
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 143 -> 144
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 143 -> 144
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1257
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1604
9999 mem: incrementing refcount of 1257: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1257
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1605
9999 mem: incrementing refcount of 1261: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 20 -> 19
9999 mem: storing 1261 in location 1333
9999 mem: incrementing refcount of 1261: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1253
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1253 in location 1604
9999 mem: incrementing refcount of 1253: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1253
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9999 mem: location 1254 is 120
9999 mem: location 1255 is 1257
9999 mem: location 1256 is 1249
9999 mem: location 1604 is 1253
9999 mem: skipping refcount at 1253
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1257
9999 mem: storing 1257 in location 1605
9999 mem: incrementing refcount of 1257: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1257
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1257
9999 mem: decrementing refcount of 1253: 17 -> 16
9999 mem: storing 1257 in location 1334
9999 mem: incrementing refcount of 1257: 20 -> 21
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1261
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1333 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1262
9998 run: its type is "character"
9999 mem: location 1262 is 101
9999 mem: storing 101 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 101
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 101
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 101
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 0
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 101
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 144 -> 145
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 101
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 101
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 30
9999 mem: storing 1076 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 103
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 101
9999 mem: location 1390 is 1076
9999 mem: storing 101 in location 1076
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1076
9999 mem: location 1076 is 101
9999 mem: location 1077 is 7
9999 mem: location 1389 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1077
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1380 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1261
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1604
9999 mem: incrementing refcount of 1261: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1261
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1604 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1605
9999 mem: incrementing refcount of 1265: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 17 -> 16
9999 mem: storing 1265 in location 1333
9999 mem: incrementing refcount of 1265: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1257
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1257 in location 1604
9999 mem: incrementing refcount of 1257: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1257
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9999 mem: location 1258 is 10
9999 mem: location 1259 is 1261
9999 mem: location 1260 is 1253
9999 mem: location 1604 is 1257
9999 mem: skipping refcount at 1257
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1261
9999 mem: storing 1261 in location 1605
9999 mem: incrementing refcount of 1261: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1261
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1261
9999 mem: decrementing refcount of 1257: 22 -> 21
9999 mem: storing 1261 in location 1334
9999 mem: incrementing refcount of 1261: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1265
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1333 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1266
9998 run: its type is "character"
9999 mem: location 1266 is 120
9999 mem: storing 120 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 47 -> 48
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 31
9999 mem: storing 1078 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1078
9999 mem: storing 120 in location 1078
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1078
9999 mem: location 1078 is 120
9999 mem: location 1079 is 7
9999 mem: location 1389 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1079
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1380 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1604
9999 mem: incrementing refcount of 1265: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1265
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1604 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1605
9999 mem: incrementing refcount of 1269: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 17 -> 16
9999 mem: storing 1269 in location 1333
9999 mem: incrementing refcount of 1269: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1261
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1261 in location 1604
9999 mem: incrementing refcount of 1261: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1261
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1261
9999 mem: skipping refcount at 1261
9999 mem: location 1262 is 101
9999 mem: location 1263 is 1265
9999 mem: location 1264 is 1257
9999 mem: location 1604 is 1261
9999 mem: skipping refcount at 1261
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1265
9999 mem: storing 1265 in location 1605
9999 mem: incrementing refcount of 1265: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1265
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1265
9999 mem: decrementing refcount of 1261: 19 -> 18
9999 mem: storing 1265 in location 1334
9999 mem: incrementing refcount of 1265: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 1
9999 mem: storing 2 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1269
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1333 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1270
9998 run: its type is "character"
9999 mem: location 1270 is 120
9999 mem: storing 120 in location 1344
9990 schedule: render/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-nonempty-lines
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 120
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 120
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 120
9999 mem: storing 0 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1332 is 3
9999 mem: storing 0 in location 1347
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1344 is 120
9999 mem: location 1335 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 146 -> 147
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 120 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1374
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 120
  90 print-character: 120 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1381
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1384
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 120
9999 mem: storing 0 in location 1387
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 32
9999 mem: storing 1080 in location 1389
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1390
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 120
9999 mem: location 1390 is 1080
9999 mem: storing 120 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1080
9999 mem: location 1080 is 120
9999 mem: location 1081 is 7
9999 mem: location 1389 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1391
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1380 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1604
9999 mem: incrementing refcount of 1269: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1604 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1605
9999 mem: incrementing refcount of 1273: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 17 -> 16
9999 mem: storing 1273 in location 1333
9999 mem: incrementing refcount of 1273: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1265
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1265 in location 1604
9999 mem: incrementing refcount of 1265: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1265
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1265
9999 mem: skipping refcount at 1265
9999 mem: location 1266 is 120
9999 mem: location 1267 is 1269
9999 mem: location 1268 is 1261
9999 mem: location 1604 is 1265
9999 mem: skipping refcount at 1265
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1269
9999 mem: storing 1269 in location 1605
9999 mem: incrementing refcount of 1269: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1269
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1269
9999 mem: decrementing refcount of 1265: 19 -> 18
9999 mem: storing 1269 in location 1334
9999 mem: incrementing refcount of 1269: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1273
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 3
9999 mem: location 1331 is 4
9999 mem: storing 0 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1333 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1333 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1274
9998 run: its type is "character"
9999 mem: location 1274 is 10
9999 mem: storing 10 in location 1344
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1335 is 7
9999 mem: location 1344 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1628
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1629
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1628 is 7
9999 mem: storing 1 in location 1630
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1631
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1632
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1632 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1629 is 10
9999 mem: storing 0 in location 1634
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1628 is 7
9999 mem: storing 0 in location 1635
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1635 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1628 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1335
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1344 is 10
9999 mem: storing 1 in location 1345
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 3
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1337 is 3
9999 mem: location 1332 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 147 -> 148
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1377 is 4
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1380
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1376 is 10
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1381
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1376 is 10
9999 mem: storing 30 in location 1384
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1384 is 30
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1384
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1385
9999 mem: incrementing refcount of 1014: 49 -> 50
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 40 in location 1386
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1371 is 32
9999 mem: storing 0 in location 1387
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1385 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1384 is 33
9999 mem: storing 1082 in location 1389
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1390
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1371 is 32
9999 mem: location 1390 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1389 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1389 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1391
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1372 is 7
9999 mem: location 1391 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1376 is 10
9999 mem: storing 9 in location 1392
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1392 is 9
9999 mem: storing 0 in location 1393
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1380 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1380 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 148 -> 149
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1336 is 3
9999 mem: storing 4 in location 1336
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1337
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 149 -> 150
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1328
9999 mem: incrementing refcount of 1008: 149 -> 150
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1273
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1273 in location 1604
9999 mem: incrementing refcount of 1273: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1273
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1273
9999 mem: skipping refcount at 1273
9999 mem: location 1274 is 10
9999 mem: location 1275 is 1277
9999 mem: location 1276 is 1269
9999 mem: location 1604 is 1273
9999 mem: skipping refcount at 1273
9998 run: address to copy is 1275
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1275 is 1277
9999 mem: storing 1277 in location 1605
9999 mem: incrementing refcount of 1277: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1277
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1277
9999 mem: decrementing refcount of 1273: 17 -> 16
9999 mem: storing 1277 in location 1333
9999 mem: incrementing refcount of 1277: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1334 is 1269
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1269 in location 1604
9999 mem: incrementing refcount of 1269: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1604 is 1269
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1604 is 1269
9999 mem: skipping refcount at 1269
9999 mem: location 1270 is 120
9999 mem: location 1271 is 1273
9999 mem: location 1272 is 1265
9999 mem: location 1604 is 1269
9999 mem: skipping refcount at 1269
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1273
9999 mem: storing 1273 in location 1605
9999 mem: incrementing refcount of 1273: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1605 is 1273
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1273
9999 mem: decrementing refcount of 1269: 19 -> 18
9999 mem: storing 1273 in location 1334
9999 mem: incrementing refcount of 1273: 17 -> 18
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1333 is 1277
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1331 is 4
9999 mem: storing 1 in location 1341
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1309
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1349
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1333 is 1277
9999 mem: location 1349 is 1155
9999 mem: decrementing refcount of 1309: 7 -> 6
9999 mem: storing 1277 in location 1155
9999 mem: incrementing refcount of 1277: 14 -> 15
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1342
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1337 is 0
9999 mem: location 1339 is 1161
9999 mem: location 1161 is 0
9999 mem: storing 1 in location 1350
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1342 is 0
9999 mem: location 1350 is 1
9999 mem: storing 0 in location 1351
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1336 is 4
9999 mem: location 1338 is 1160
9999 mem: location 1160 is 1
9999 mem: storing 0 in location 1352
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1353
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1329 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1354
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1336 is 4
9999 mem: location 1354 is 1159
9999 mem: storing 4 in location 1159
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1336 is 4
9999 mem: location 1337 is 0
9999 mem: location 1328 is 1008
9999 mem: location 1329 is 1152
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9998 run: result 1 is 0
9999 mem: storing 4 in location 1103
9999 mem: storing 0 in location 1104
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1104 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 150 -> 151
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 151 -> 152
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 152 -> 151
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 151 -> 152
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 152 -> 153
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 152 -> 153
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 153 -> 154
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 153 -> 154
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 154 -> 155
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 4
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 154 -> 155
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 4
9999 mem: storing 5 in location 1103
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 5
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1422
9999 mem: incrementing refcount of 1008: 155 -> 156
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1423
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1424
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1425
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1426
9999 mem: storing 1 in location 1427
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1429 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1428
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1430
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1423 is 5
9999 mem: location 1424 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 156 -> 157
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1006 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1422
9999 mem: incrementing refcount of 1008: 156 -> 157
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 0
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 157 -> 158
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 0
9999 mem: storing 1 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 1
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 158 -> 159
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 1
9999 mem: storing 2 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 2
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 159 -> 160
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 2
9999 mem: storing 3 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 3
9999 mem: location 1425 is 3
9999 mem: storing 1 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1422 is 1008
9999 mem: location 1426 is 9480
9999 mem: location 1428 is 245
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1003/scenario_editor-can-scroll-up-past-nonempty-lines
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 160 -> 161
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1371
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1372
9999 mem: storing 1 in location 1373
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1378
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 5
9999 mem: storing 1 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 5
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1424 is 3
9999 mem: storing 4 in location 1424
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1424 is 4
9999 mem: location 1425 is 3
9999 mem: storing 0 in location 1432
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1432 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1422 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1103 is 5
9999 mem: storing 6 in location 1103
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1099 is 1008
9999 mem: location 1103 is 6
9999 mem: location 1101 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 161 -> 162
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1546
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1549
9999 mem: incrementing refcount of 1008: 162 -> 163
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1550
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1551
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1549 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1552
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1550 is 6
9999 mem: location 1552 is 1011
9999 mem: storing 6 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1553
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1551 is 0
9999 mem: location 1553 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1549 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 163 -> 162
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 162 -> 163
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1175
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 163 -> 164
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1179
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1180
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1181
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1182
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 0
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 164 -> 165
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 165 -> 164
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 164 -> 165
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 0
9999 mem: storing 1 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 1
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 165 -> 166
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 166 -> 165
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 165 -> 166
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 1
9999 mem: storing 2 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 2
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 166 -> 167
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 166 -> 167
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 2
9999 mem: storing 3 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 3
9999 mem: location 1180 is 3
9999 mem: storing 0 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1181 is 32
9999 mem: location 1182 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1367
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1370
9999 mem: incrementing refcount of 1008: 167 -> 168
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1371
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1372
9999 mem: storing 1 in location 1373
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1373 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1374
9999 mem: storing 1 in location 1375
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1371 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1370 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1376
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1377
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1370 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1378
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1378 is 6
9999 mem: storing 1 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1378 is 6
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1379
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1370 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 168 -> 167
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 167 -> 168
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1179 is 3
9999 mem: storing 4 in location 1179
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1179 is 4
9999 mem: location 1180 is 3
9999 mem: storing 1 in location 1184
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1184 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1178 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 6
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1554
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1557
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1558
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1559
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1560
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1558 is 6
9999 mem: storing 7 in location 1558
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1557 is 1008
9999 mem: location 1558 is 7
9999 mem: location 1559 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1546
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1549
9999 mem: incrementing refcount of 1008: 169 -> 170
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1550
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1551
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1549 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1552
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1550 is 7
9999 mem: location 1552 is 1011
9999 mem: storing 7 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1549 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1553
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1551 is 0
9999 mem: location 1553 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1549 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 170 -> 169
9999 mem: storing 1008 in location 1557
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1557 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1604
9999 mem: incrementing refcount of 1008: 170 -> 171
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1604 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1604 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1605
 108 run: return {height: "number"}
9999 mem: location 1605 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1561
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1558 is 7
9999 mem: location 1561 is 4
9999 mem: storing 1 in location 1562
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1562 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1557 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1099 is 1008
9999 mem: location 1100 is 1152
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 171 -> 170
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 170 -> 171
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1409
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9999 mem: location 1153 is 1171
9999 mem: location 1154 is 1225
9999 mem: location 1155 is 1277
9999 mem: location 1156 is 1225
9999 mem: location 1157 is 0
9999 mem: location 1158 is 3
9999 mem: location 1159 is 4
9999 mem: location 1160 is 1
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1
9999 mem: location 1163 is 1622
9999 mem: location 1164 is 0
9999 mem: location 1408 is 1152
9999 mem: skipping refcount at 1152
9998 run: address to copy is 1161
9998 run: its type is "number"
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1410
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1406 is 1008
9999 mem: location 1409 is 1
9999 mem: location 1410 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 171 -> 172
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1406
9999 mem: incrementing refcount of 1008: 171 -> 172
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1407 is 1598
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1419
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1598 in location 1422
9999 mem: incrementing refcount of 1598: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1422 is 1598
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 1
9999 mem: location 1600 is 1592
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy is 1599
9999 mem: storing 1599 in location 1423
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 1
9999 mem: location 1600 is 1592
9999 mem: location 1422 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy is 1600
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1600 is 1592
9999 mem: storing 1592 in location 1424
9999 mem: incrementing refcount of 1592: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1424 is 1592
9999 mem: skipping refcount at 1592
9999 mem: storing 1 in location 1425
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1423 is 1599
9999 mem: location 1599 is 1
9999 mem: location 1425 is 1
9999 mem: storing 1 in location 1426
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1601
9999 mem: storing 1601 in location 1427
9999 mem: incrementing refcount of 1601: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1427 is 1601
9999 mem: skipping refcount at 1601
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1605 is 0
9999 mem: location 1422 is 1598
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1598
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: decrementing refcount of 1598: 3 -> 2
9999 mem: storing 1598 in location 1407
9999 mem: incrementing refcount of 1598: 2 -> 3
9999 mem: storing 1 in location 1415
9999 mem: storing 1 in location 1416
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1406 is 1008
9999 mem: location 1407 is 1598
9999 mem: location 1408 is 1152
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .cxx       .\n    .dxx       .\n    .exx       .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
