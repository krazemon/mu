9991 parse: --- defining scenario_editor-can-scroll-up-wrapped-lines
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {6: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {6: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\ncdefgh\ni\nj\nk\nl\nm\nn\no": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"a\nb\ncdefgh\ni\nj\nk\nl\nm\nn\no": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {4: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .a         .\n    .b         .\n    .cde↩      .\n    .fgh       .\n    .i         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .a         .\n    .b         .\n    .cde↩      .\n    .fgh       .\n    .i         .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-down\n    left-click 5, 0\n    press down-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-down\n    left-click 5, 0\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .j         .\n    .k         .\n    .l         .\n    .m         .\n    .n         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .j         .\n    .k         .\n    .l         .\n    .m         .\n    .n         .\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press page-up\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .b         .\n    .cde↩      .\n    .fgh       .\n    .i         .\n    .j         .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .b         .\n    .cde↩      .\n    .fgh       .\n    .i         .\n    .j         .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-scroll-up-wrapped-lines has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- deduce types for recipe scenario_editor-can-scroll-up-wrapped-lines
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- transform names for recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-scroll-up-wrapped-lines
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {6: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- transform braces for recipe scenario_editor-can-scroll-up-wrapped-lines
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- perform checks for recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- type-check calls inside recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- checking reply instructions against header for scenario_editor-can-scroll-up-wrapped-lines
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-scroll-up-wrapped-lines
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {6: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 6
9999 mem: storing 60 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 60
9999 mem: array size is 60
9999 mem: allocating size 122
9999 mem: new alloc: 1014
9999 mem: storing 60 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 6
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 6 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1136
9999 mem: storing 7 in location 1137
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1139
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1139 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1139 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1139 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1140
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1141
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1142
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 0
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 0
9999 mem: storing 1016 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1016
9999 mem: location 1144 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 0
9999 mem: storing 1 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 1
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 1
9999 mem: storing 1018 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1018
9999 mem: location 1144 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 1
9999 mem: storing 2 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 2
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 2
9999 mem: storing 1020 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1020
9999 mem: location 1144 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 2
9999 mem: storing 3 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 3
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 3
9999 mem: storing 1022 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1022
9999 mem: location 1144 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 3
9999 mem: storing 4 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 4
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 4
9999 mem: storing 1024 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1024
9999 mem: location 1144 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 4
9999 mem: storing 5 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 5
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 5
9999 mem: storing 1026 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1026
9999 mem: location 1144 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 5
9999 mem: storing 6 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 6
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 6
9999 mem: storing 1028 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1028
9999 mem: location 1144 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 6
9999 mem: storing 7 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 7
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 7
9999 mem: storing 1030 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1030
9999 mem: location 1144 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 7
9999 mem: storing 8 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 8
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 8
9999 mem: storing 1032 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1032
9999 mem: location 1144 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 8
9999 mem: storing 9 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 9
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 9
9999 mem: storing 1034 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1034
9999 mem: location 1144 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 9
9999 mem: storing 10 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 10
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 10
9999 mem: storing 1036 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1036
9999 mem: location 1144 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 10
9999 mem: storing 11 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 11
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 11
9999 mem: storing 1038 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1038
9999 mem: location 1144 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 11
9999 mem: storing 12 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 12
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 12
9999 mem: storing 1040 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1040
9999 mem: location 1144 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 12
9999 mem: storing 13 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 13
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 13
9999 mem: storing 1042 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1042
9999 mem: location 1144 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 13
9999 mem: storing 14 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 14
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 14
9999 mem: storing 1044 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1044
9999 mem: location 1144 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 14
9999 mem: storing 15 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 15
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 15
9999 mem: storing 1046 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1046
9999 mem: location 1144 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 15
9999 mem: storing 16 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 16
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 16
9999 mem: storing 1048 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1048
9999 mem: location 1144 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 16
9999 mem: storing 17 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 17
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 17
9999 mem: storing 1050 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1050
9999 mem: location 1144 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 17
9999 mem: storing 18 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 18
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 18
9999 mem: storing 1052 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1052
9999 mem: location 1144 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 18
9999 mem: storing 19 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 19
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 19
9999 mem: storing 1054 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1054
9999 mem: location 1144 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 19
9999 mem: storing 20 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 20
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 20
9999 mem: storing 1056 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1056
9999 mem: location 1144 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 20
9999 mem: storing 21 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 21
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 21
9999 mem: storing 1058 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1058
9999 mem: location 1144 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 21
9999 mem: storing 22 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 22
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 22
9999 mem: storing 1060 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1060
9999 mem: location 1144 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 22
9999 mem: storing 23 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 23
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 23
9999 mem: storing 1062 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1062
9999 mem: location 1144 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 23
9999 mem: storing 24 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 24
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 24
9999 mem: storing 1064 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1064
9999 mem: location 1144 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 24
9999 mem: storing 25 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 25
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 25
9999 mem: storing 1066 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1066
9999 mem: location 1144 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 25
9999 mem: storing 26 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 26
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 26
9999 mem: storing 1068 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1068
9999 mem: location 1144 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 26
9999 mem: storing 27 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 27
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 27
9999 mem: storing 1070 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1070
9999 mem: location 1144 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 27
9999 mem: storing 28 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 28
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 28
9999 mem: storing 1072 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1072
9999 mem: location 1144 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 28
9999 mem: storing 29 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 29
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 29
9999 mem: storing 1074 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1074
9999 mem: location 1144 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 29
9999 mem: storing 30 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 30
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 30
9999 mem: storing 1076 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1076
9999 mem: location 1144 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 30
9999 mem: storing 31 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 31
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 31
9999 mem: storing 1078 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1078
9999 mem: location 1144 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 31
9999 mem: storing 32 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 32
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 32
9999 mem: storing 1080 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1080
9999 mem: location 1144 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 32
9999 mem: storing 33 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 33
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 33
9999 mem: storing 1082 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1082
9999 mem: location 1144 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 33
9999 mem: storing 34 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 34
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 34
9999 mem: storing 1084 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1084
9999 mem: location 1144 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 34
9999 mem: storing 35 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 35
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 35
9999 mem: storing 1086 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1086
9999 mem: location 1144 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 35
9999 mem: storing 36 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 36
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 36
9999 mem: storing 1088 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1088
9999 mem: location 1144 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 36
9999 mem: storing 37 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 37
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 37
9999 mem: storing 1090 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1090
9999 mem: location 1144 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 37
9999 mem: storing 38 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 38
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 38
9999 mem: storing 1092 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1092
9999 mem: location 1144 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 38
9999 mem: storing 39 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 39
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 39
9999 mem: storing 1094 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1094
9999 mem: location 1144 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 39
9999 mem: storing 40 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 40
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 40
9999 mem: storing 1096 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1096
9999 mem: location 1144 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 40
9999 mem: storing 41 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 41
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 41
9999 mem: storing 1098 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1098
9999 mem: location 1144 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 41
9999 mem: storing 42 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 42
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 42
9999 mem: storing 1100 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1100
9999 mem: location 1144 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 42
9999 mem: storing 43 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 43
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 43
9999 mem: storing 1102 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1102
9999 mem: location 1144 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 43
9999 mem: storing 44 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 44
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 44
9999 mem: storing 1104 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1104
9999 mem: location 1144 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 44
9999 mem: storing 45 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 45
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 45
9999 mem: storing 1106 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1106
9999 mem: location 1144 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 45
9999 mem: storing 46 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 46
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 46
9999 mem: storing 1108 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1108
9999 mem: location 1144 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 46
9999 mem: storing 47 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 47
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 47
9999 mem: storing 1110 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1110
9999 mem: location 1144 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 47
9999 mem: storing 48 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 48
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 48
9999 mem: storing 1112 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1112
9999 mem: location 1144 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 48
9999 mem: storing 49 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 49
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 49
9999 mem: storing 1114 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1114
9999 mem: location 1144 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 49
9999 mem: storing 50 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 50
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 50
9999 mem: storing 1116 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1116
9999 mem: location 1144 is 1116
9999 mem: storing 0 in location 1116
9999 mem: storing 7 in location 1117
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 50
9999 mem: storing 51 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 51
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 51
9999 mem: storing 1118 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1118
9999 mem: location 1144 is 1118
9999 mem: storing 0 in location 1118
9999 mem: storing 7 in location 1119
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 51
9999 mem: storing 52 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 52
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 52
9999 mem: storing 1120 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1120
9999 mem: location 1144 is 1120
9999 mem: storing 0 in location 1120
9999 mem: storing 7 in location 1121
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 52
9999 mem: storing 53 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 53
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 53
9999 mem: storing 1122 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1122
9999 mem: location 1144 is 1122
9999 mem: storing 0 in location 1122
9999 mem: storing 7 in location 1123
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 53
9999 mem: storing 54 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 54
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 54
9999 mem: storing 1124 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1124
9999 mem: location 1144 is 1124
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 54
9999 mem: storing 55 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 55
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 55
9999 mem: storing 1126 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1126
9999 mem: location 1144 is 1126
9999 mem: storing 0 in location 1126
9999 mem: storing 7 in location 1127
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 55
9999 mem: storing 56 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 56
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 56
9999 mem: storing 1128 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1128
9999 mem: location 1144 is 1128
9999 mem: storing 0 in location 1128
9999 mem: storing 7 in location 1129
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 56
9999 mem: storing 57 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 57
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 57
9999 mem: storing 1130 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1130
9999 mem: location 1144 is 1130
9999 mem: storing 0 in location 1130
9999 mem: storing 7 in location 1131
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 57
9999 mem: storing 58 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 58
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 58
9999 mem: storing 1132 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1132
9999 mem: location 1144 is 1132
9999 mem: storing 0 in location 1132
9999 mem: storing 7 in location 1133
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 58
9999 mem: storing 59 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 59
9999 mem: location 1141 is 60
9999 mem: storing 0 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1140 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1142 is 59
9999 mem: storing 1134 in location 1144
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1144 is 1134
9999 mem: location 1144 is 1134
9999 mem: storing 0 in location 1134
9999 mem: storing 7 in location 1135
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1142 is 59
9999 mem: storing 60 in location 1142
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1142 is 60
9999 mem: location 1141 is 60
9999 mem: storing 1 in location 1143
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1143 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1139 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1139 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1139 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1139 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1139 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"a\nb\ncdefgh\ni\nj\nk\nl\nm\nn\no": "literal-string"}
9999 mem: new string alloc: 1145
9999 mem: storing 1145 in location 1
9999 mem: incrementing refcount of 1145: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {4: "literal", "right": ()}
9999 mem: location 1 is 1145
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1139
9999 mem: incrementing refcount of 1145: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1140
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1141
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1142
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1142 is 4
9999 mem: storing 3 in location 1142
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1171
9999 mem: storing 1171 in location 1143
9999 mem: incrementing refcount of 1171: 0 -> 1
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}, {left: "number"}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1141 is 0
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1176
9999 mem: storing 0 in location 1176
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}, {right: "number"}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1142 is 3
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1177
9999 mem: storing 3 in location 1177
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {1: "literal", "top": ()}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1179
9999 mem: storing 1 in location 1179
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {left: "number"}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1141 is 0
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 103 run: {init: ("address" "shared" "duplex-list" "character")} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1184
9999 mem: storing 4 in location 1185
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1187
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1190
9999 mem: storing 1190 in location 1189
9999 mem: incrementing refcount of 1190: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1187 is 167
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1189 is 1190
9999 mem: skipping refcount at 1190
9999 mem: storing 167 in location 1191
9999 mem: storing 0 in location 1192
9999 mem: storing 0 in location 1193
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1190
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1144
9999 mem: incrementing refcount of 1190: 1 -> 2
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1144 is 1190
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1172
9999 mem: storing 1190 in location 1172
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1144 is 1190
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1190 in location 1173
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1144 is 1190
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1190 in location 1175
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1143 is 1171
9999 mem: location 1139 is 1145
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1194
9999 mem: storing 8 in location 1195
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1197
9999 mem: incrementing refcount of 1171: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1145 in location 1198
9999 mem: incrementing refcount of 1145: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1198 is 1145
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9999 mem: storing 24 in location 1199
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1199 is 24
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1200
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1190
9999 mem: storing 1190 in location 1201
9999 mem: incrementing refcount of 1190: 2 -> 3
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 0
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 0
9998 run: address to copy is 1147
9998 run: its type is character
9999 mem: location 1147 is 97
9999 mem: storing 97 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 97
9999 mem: location 1201 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1204
9999 mem: storing 5 in location 1205
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1208
9999 mem: incrementing refcount of 1190: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1209
9999 mem: incrementing refcount of 1211: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1207 is 97
9999 mem: location 1209 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1212
9999 mem: storing 97 in location 1212
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 167
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1208 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 167
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1209 is 1211
9999 mem: location 1208 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy to is 1192
9999 mem: storing 1211 in location 1192
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1208 is 1190
9999 mem: location 1209 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1214
9999 mem: storing 1190 in location 1214
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1190
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: storing 0 in location 1213
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1190
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1215
9999 mem: storing 3 in location 1216
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1218
9999 mem: incrementing refcount of 1190: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1190
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 167
9999 mem: location 1192 is 1211
9999 mem: location 1193 is 0
9999 mem: location 1218 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1211
9999 mem: storing 1211 in location 1219
9999 mem: incrementing refcount of 1211: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1190: 5 -> 4
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 1
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 1
9998 run: address to copy is 1148
9998 run: its type is character
9999 mem: location 1148 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1208
9999 mem: incrementing refcount of 1211: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1220
9999 mem: storing 1220 in location 1209
9999 mem: incrementing refcount of 1220: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 0
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1221
9999 mem: storing 10 in location 1221
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1190
9999 mem: location 1208 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 0
9999 mem: location 1214 is 1190
9999 mem: location 1209 is 1220
9999 mem: location 1208 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: storing 1220 in location 1213
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: location 1208 is 1211
9999 mem: location 1209 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1223
9999 mem: storing 1211 in location 1223
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 0
9999 mem: location 1223 is 1211
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1222
9999 mem: storing 0 in location 1222
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1211
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1218
9999 mem: incrementing refcount of 1211: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 1220
9999 mem: location 1214 is 1190
9999 mem: location 1218 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1220
9999 mem: storing 1220 in location 1219
9999 mem: incrementing refcount of 1220: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1211: 5 -> 4
9999 mem: storing 1220 in location 1201
9999 mem: incrementing refcount of 1220: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 2
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 2
9998 run: address to copy is 1149
9998 run: its type is character
9999 mem: location 1149 is 98
9999 mem: storing 98 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 98
9999 mem: location 1201 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1208
9999 mem: incrementing refcount of 1220: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1224
9999 mem: storing 1224 in location 1209
9999 mem: incrementing refcount of 1224: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1207 is 98
9999 mem: location 1209 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1225
9999 mem: storing 98 in location 1225
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 0
9999 mem: location 1223 is 1211
9999 mem: location 1208 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 0
9999 mem: location 1223 is 1211
9999 mem: location 1209 is 1224
9999 mem: location 1208 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy to is 1222
9999 mem: storing 1224 in location 1222
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 0
9999 mem: location 1227 is 0
9999 mem: location 1208 is 1220
9999 mem: location 1209 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1227
9999 mem: storing 1220 in location 1227
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1226
9999 mem: storing 0 in location 1226
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1220
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1218
9999 mem: incrementing refcount of 1220: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1218 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1219
9999 mem: incrementing refcount of 1224: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 5 -> 4
9999 mem: storing 1224 in location 1201
9999 mem: incrementing refcount of 1224: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 3
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 3
9998 run: address to copy is 1150
9998 run: its type is character
9999 mem: location 1150 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1208
9999 mem: incrementing refcount of 1224: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1228
9999 mem: storing 1228 in location 1209
9999 mem: incrementing refcount of 1228: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1229
9999 mem: storing 10 in location 1229
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1208 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 0
9999 mem: location 1227 is 1220
9999 mem: location 1209 is 1228
9999 mem: location 1208 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy to is 1226
9999 mem: storing 1228 in location 1226
9990 schedule: insert_2/insert-text/new-editor/scenario_editor-can-scroll-up-wrapped-lines
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1208 is 1224
9999 mem: location 1209 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1231
9999 mem: storing 1224 in location 1231
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1230
9999 mem: storing 0 in location 1230
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1224
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1218
9999 mem: incrementing refcount of 1224: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1218 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1219
9999 mem: incrementing refcount of 1228: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 5 -> 4
9999 mem: storing 1228 in location 1201
9999 mem: incrementing refcount of 1228: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 4
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 4
9998 run: address to copy is 1151
9998 run: its type is character
9999 mem: location 1151 is 99
9999 mem: storing 99 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 99
9999 mem: location 1201 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1208
9999 mem: incrementing refcount of 1228: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1232
9999 mem: storing 1232 in location 1209
9999 mem: incrementing refcount of 1232: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 0
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1207 is 99
9999 mem: location 1209 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1233
9999 mem: storing 99 in location 1233
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1208 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 0
9999 mem: location 1231 is 1224
9999 mem: location 1209 is 1232
9999 mem: location 1208 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy to is 1230
9999 mem: storing 1232 in location 1230
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 0
9999 mem: location 1235 is 0
9999 mem: location 1208 is 1228
9999 mem: location 1209 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1235
9999 mem: storing 1228 in location 1235
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 0
9999 mem: location 1235 is 1228
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1234
9999 mem: storing 0 in location 1234
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1228
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1218
9999 mem: incrementing refcount of 1228: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1218 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1219
9999 mem: incrementing refcount of 1232: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 5 -> 4
9999 mem: storing 1232 in location 1201
9999 mem: incrementing refcount of 1232: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 4
9999 mem: storing 5 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 5
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 5
9998 run: address to copy is 1152
9998 run: its type is character
9999 mem: location 1152 is 100
9999 mem: storing 100 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 100
9999 mem: location 1201 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1208
9999 mem: incrementing refcount of 1232: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1236
9999 mem: storing 1236 in location 1209
9999 mem: incrementing refcount of 1236: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 0
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1207 is 100
9999 mem: location 1209 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1237
9999 mem: storing 100 in location 1237
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 0
9999 mem: location 1235 is 1228
9999 mem: location 1208 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 0
9999 mem: location 1235 is 1228
9999 mem: location 1209 is 1236
9999 mem: location 1208 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy to is 1234
9999 mem: storing 1236 in location 1234
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 0
9999 mem: location 1239 is 0
9999 mem: location 1208 is 1232
9999 mem: location 1209 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1239
9999 mem: storing 1232 in location 1239
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1238
9999 mem: storing 0 in location 1238
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1232
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1218
9999 mem: incrementing refcount of 1232: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1218 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1219
9999 mem: incrementing refcount of 1236: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 5 -> 4
9999 mem: storing 1236 in location 1201
9999 mem: incrementing refcount of 1236: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 5
9999 mem: storing 6 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 6
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 6
9998 run: address to copy is 1153
9998 run: its type is character
9999 mem: location 1153 is 101
9999 mem: storing 101 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 101
9999 mem: location 1201 is 1236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1208
9999 mem: incrementing refcount of 1236: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1240
9999 mem: storing 1240 in location 1209
9999 mem: incrementing refcount of 1240: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 0
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: location 1207 is 101
9999 mem: location 1209 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy to is 1241
9999 mem: storing 101 in location 1241
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1208 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1209 is 1240
9999 mem: location 1208 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy to is 1238
9999 mem: storing 1240 in location 1238
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 0
9999 mem: location 1243 is 0
9999 mem: location 1208 is 1236
9999 mem: location 1209 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy to is 1243
9999 mem: storing 1236 in location 1243
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 0
9999 mem: location 1243 is 1236
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy to is 1242
9999 mem: storing 0 in location 1242
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1236
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1218
9999 mem: incrementing refcount of 1236: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1236
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1218 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 1240
9999 mem: storing 1240 in location 1219
9999 mem: incrementing refcount of 1240: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1236: 5 -> 4
9999 mem: storing 1240 in location 1201
9999 mem: incrementing refcount of 1240: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 6
9999 mem: storing 7 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 7
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 7
9998 run: address to copy is 1154
9998 run: its type is character
9999 mem: location 1154 is 102
9999 mem: storing 102 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 102
9999 mem: location 1201 is 1240
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1208
9999 mem: incrementing refcount of 1240: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1244
9999 mem: storing 1244 in location 1209
9999 mem: incrementing refcount of 1244: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 0
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1207 is 102
9999 mem: location 1209 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy to is 1245
9999 mem: storing 102 in location 1245
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 0
9999 mem: location 1243 is 1236
9999 mem: location 1208 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1242
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1242 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 0
9999 mem: location 1243 is 1236
9999 mem: location 1209 is 1244
9999 mem: location 1208 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy to is 1242
9999 mem: storing 1244 in location 1242
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1208 is 1240
9999 mem: location 1209 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy to is 1247
9999 mem: storing 1240 in location 1247
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1240
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy to is 1246
9999 mem: storing 0 in location 1246
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1240
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1240
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1218
9999 mem: incrementing refcount of 1240: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1240
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1218 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1242
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1242 is 1244
9999 mem: storing 1244 in location 1219
9999 mem: incrementing refcount of 1244: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1240: 5 -> 4
9999 mem: storing 1244 in location 1201
9999 mem: incrementing refcount of 1244: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 7
9999 mem: storing 8 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 8
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 8
9998 run: address to copy is 1155
9998 run: its type is character
9999 mem: location 1155 is 103
9999 mem: storing 103 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 103
9999 mem: location 1201 is 1244
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1208
9999 mem: incrementing refcount of 1244: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1248
9999 mem: storing 1248 in location 1209
9999 mem: incrementing refcount of 1248: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 0
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1207 is 103
9999 mem: location 1209 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy to is 1249
9999 mem: storing 103 in location 1249
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1240
9999 mem: location 1208 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1246 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1240
9999 mem: location 1209 is 1248
9999 mem: location 1208 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy to is 1246
9999 mem: storing 1248 in location 1246
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 0
9999 mem: location 1251 is 0
9999 mem: location 1208 is 1244
9999 mem: location 1209 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy to is 1251
9999 mem: storing 1244 in location 1251
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1244
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy to is 1250
9999 mem: storing 0 in location 1250
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1244
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1244
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1218
9999 mem: incrementing refcount of 1244: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1244
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1218 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1246 is 1248
9999 mem: storing 1248 in location 1219
9999 mem: incrementing refcount of 1248: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1244: 5 -> 4
9999 mem: storing 1248 in location 1201
9999 mem: incrementing refcount of 1248: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 8
9999 mem: storing 9 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 9
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 9
9998 run: address to copy is 1156
9998 run: its type is character
9999 mem: location 1156 is 104
9999 mem: storing 104 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 104
9999 mem: location 1201 is 1248
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1208
9999 mem: incrementing refcount of 1248: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1252
9999 mem: storing 1252 in location 1209
9999 mem: incrementing refcount of 1252: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 0
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1207 is 104
9999 mem: location 1209 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy to is 1253
9999 mem: storing 104 in location 1253
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1244
9999 mem: location 1208 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1250
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1250 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 0
9999 mem: location 1251 is 1244
9999 mem: location 1209 is 1252
9999 mem: location 1208 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy to is 1250
9999 mem: storing 1252 in location 1250
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 0
9999 mem: location 1255 is 0
9999 mem: location 1208 is 1248
9999 mem: location 1209 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy to is 1255
9999 mem: storing 1248 in location 1255
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1248
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy to is 1254
9999 mem: storing 0 in location 1254
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1248
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1248
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1218
9999 mem: incrementing refcount of 1248: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1248
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1218 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1250
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1250 is 1252
9999 mem: storing 1252 in location 1219
9999 mem: incrementing refcount of 1252: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1252
9999 mem: decrementing refcount of 1248: 5 -> 4
9999 mem: storing 1252 in location 1201
9999 mem: incrementing refcount of 1252: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 9
9999 mem: storing 10 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 10
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 10
9998 run: address to copy is 1157
9998 run: its type is character
9999 mem: location 1157 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1252
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1208
9999 mem: incrementing refcount of 1252: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1256
9999 mem: storing 1256 in location 1209
9999 mem: incrementing refcount of 1256: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 0
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy to is 1257
9999 mem: storing 10 in location 1257
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1248
9999 mem: location 1208 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1254
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1254 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 0
9999 mem: location 1255 is 1248
9999 mem: location 1209 is 1256
9999 mem: location 1208 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy to is 1254
9999 mem: storing 1256 in location 1254
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 0
9999 mem: location 1259 is 0
9999 mem: location 1208 is 1252
9999 mem: location 1209 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy to is 1259
9999 mem: storing 1252 in location 1259
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1252
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy to is 1258
9999 mem: storing 0 in location 1258
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1252
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1252
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1218
9999 mem: incrementing refcount of 1252: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1252
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1218 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1254
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1254 is 1256
9999 mem: storing 1256 in location 1219
9999 mem: incrementing refcount of 1256: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1252: 5 -> 4
9999 mem: storing 1256 in location 1201
9999 mem: incrementing refcount of 1256: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 10
9999 mem: storing 11 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 11
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 11
9998 run: address to copy is 1158
9998 run: its type is character
9999 mem: location 1158 is 105
9999 mem: storing 105 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 105
9999 mem: location 1201 is 1256
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1208
9999 mem: incrementing refcount of 1256: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1260
9999 mem: storing 1260 in location 1209
9999 mem: incrementing refcount of 1260: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: location 1207 is 105
9999 mem: location 1209 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy to is 1261
9999 mem: storing 105 in location 1261
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1252
9999 mem: location 1208 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1252
9999 mem: location 1209 is 1260
9999 mem: location 1208 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy to is 1258
9999 mem: storing 1260 in location 1258
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 0
9999 mem: location 1263 is 0
9999 mem: location 1208 is 1256
9999 mem: location 1209 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy to is 1263
9999 mem: storing 1256 in location 1263
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 0
9999 mem: location 1263 is 1256
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy to is 1262
9999 mem: storing 0 in location 1262
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1256
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1256
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 5 -> 4
9999 mem: storing 1260 in location 1201
9999 mem: incrementing refcount of 1260: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 11
9999 mem: storing 12 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 12
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 12
9998 run: address to copy is 1159
9998 run: its type is character
9999 mem: location 1159 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1260
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1208
9999 mem: incrementing refcount of 1260: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1264
9999 mem: storing 1264 in location 1209
9999 mem: incrementing refcount of 1264: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy to is 1265
9999 mem: storing 10 in location 1265
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 0
9999 mem: location 1263 is 1256
9999 mem: location 1208 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 0
9999 mem: location 1263 is 1256
9999 mem: location 1209 is 1264
9999 mem: location 1208 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy to is 1262
9999 mem: storing 1264 in location 1262
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 0
9999 mem: location 1267 is 0
9999 mem: location 1208 is 1260
9999 mem: location 1209 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy to is 1267
9999 mem: storing 1260 in location 1267
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1260
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy to is 1266
9999 mem: storing 0 in location 1266
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1260
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1260
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 5 -> 4
9999 mem: storing 1264 in location 1201
9999 mem: incrementing refcount of 1264: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 12
9999 mem: storing 13 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 13
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 13
9998 run: address to copy is 1160
9998 run: its type is character
9999 mem: location 1160 is 106
9999 mem: storing 106 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 106
9999 mem: location 1201 is 1264
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1208
9999 mem: incrementing refcount of 1264: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1268
9999 mem: storing 1268 in location 1209
9999 mem: incrementing refcount of 1268: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1207 is 106
9999 mem: location 1209 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy to is 1269
9999 mem: storing 106 in location 1269
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1260
9999 mem: location 1208 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 0
9999 mem: location 1267 is 1260
9999 mem: location 1209 is 1268
9999 mem: location 1208 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy to is 1266
9999 mem: storing 1268 in location 1266
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1208 is 1264
9999 mem: location 1209 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy to is 1271
9999 mem: storing 1264 in location 1271
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 0
9999 mem: location 1271 is 1264
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy to is 1270
9999 mem: storing 0 in location 1270
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1264
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1264
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 5 -> 4
9999 mem: storing 1268 in location 1201
9999 mem: incrementing refcount of 1268: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 13
9999 mem: storing 14 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 14
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 14
9998 run: address to copy is 1161
9998 run: its type is character
9999 mem: location 1161 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1268
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1208
9999 mem: incrementing refcount of 1268: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1272
9999 mem: storing 1272 in location 1209
9999 mem: incrementing refcount of 1272: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 0
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy to is 1273
9999 mem: storing 10 in location 1273
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 0
9999 mem: location 1271 is 1264
9999 mem: location 1208 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 0
9999 mem: location 1271 is 1264
9999 mem: location 1209 is 1272
9999 mem: location 1208 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy to is 1270
9999 mem: storing 1272 in location 1270
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: location 1208 is 1268
9999 mem: location 1209 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy to is 1275
9999 mem: storing 1268 in location 1275
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 0
9999 mem: location 1275 is 1268
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy to is 1274
9999 mem: storing 0 in location 1274
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1268
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1268
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 5 -> 4
9999 mem: storing 1272 in location 1201
9999 mem: incrementing refcount of 1272: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 14
9999 mem: storing 15 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 15
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 15
9998 run: address to copy is 1162
9998 run: its type is character
9999 mem: location 1162 is 107
9999 mem: storing 107 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 107
9999 mem: location 1201 is 1272
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1208
9999 mem: incrementing refcount of 1272: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1276
9999 mem: storing 1276 in location 1209
9999 mem: incrementing refcount of 1276: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1207 is 107
9999 mem: location 1209 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy to is 1277
9999 mem: storing 107 in location 1277
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 0
9999 mem: location 1275 is 1268
9999 mem: location 1208 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 0
9999 mem: location 1275 is 1268
9999 mem: location 1209 is 1276
9999 mem: location 1208 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy to is 1274
9999 mem: storing 1276 in location 1274
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1208 is 1272
9999 mem: location 1209 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy to is 1279
9999 mem: storing 1272 in location 1279
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1272
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy to is 1278
9999 mem: storing 0 in location 1278
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1272
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1272
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 5 -> 4
9999 mem: storing 1276 in location 1201
9999 mem: incrementing refcount of 1276: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 15
9999 mem: storing 16 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 16
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 16
9998 run: address to copy is 1163
9998 run: its type is character
9999 mem: location 1163 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1276
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1208
9999 mem: incrementing refcount of 1276: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1280
9999 mem: storing 1280 in location 1209
9999 mem: incrementing refcount of 1280: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1281
9999 mem: storing 10 in location 1281
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1272
9999 mem: location 1208 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 0
9999 mem: location 1279 is 1272
9999 mem: location 1209 is 1280
9999 mem: location 1208 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy to is 1278
9999 mem: storing 1280 in location 1278
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: location 1208 is 1276
9999 mem: location 1209 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1283
9999 mem: storing 1276 in location 1283
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 0
9999 mem: location 1283 is 1276
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1282
9999 mem: storing 0 in location 1282
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1276
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1276
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 5 -> 4
9999 mem: storing 1280 in location 1201
9999 mem: incrementing refcount of 1280: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 16
9999 mem: storing 17 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 17
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 17
9998 run: address to copy is 1164
9998 run: its type is character
9999 mem: location 1164 is 108
9999 mem: storing 108 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 108
9999 mem: location 1201 is 1280
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1208
9999 mem: incrementing refcount of 1280: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1284
9999 mem: storing 1284 in location 1209
9999 mem: incrementing refcount of 1284: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 0
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: location 1207 is 108
9999 mem: location 1209 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy to is 1285
9999 mem: storing 108 in location 1285
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 0
9999 mem: location 1283 is 1276
9999 mem: location 1208 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 0
9999 mem: location 1283 is 1276
9999 mem: location 1209 is 1284
9999 mem: location 1208 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy to is 1282
9999 mem: storing 1284 in location 1282
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: location 1208 is 1280
9999 mem: location 1209 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy to is 1287
9999 mem: storing 1280 in location 1287
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1280
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy to is 1286
9999 mem: storing 0 in location 1286
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1280
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1280
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 5 -> 4
9999 mem: storing 1284 in location 1201
9999 mem: incrementing refcount of 1284: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 17
9999 mem: storing 18 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 18
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 18
9998 run: address to copy is 1165
9998 run: its type is character
9999 mem: location 1165 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1284
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1208
9999 mem: incrementing refcount of 1284: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1288
9999 mem: storing 1288 in location 1209
9999 mem: incrementing refcount of 1288: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 0
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy to is 1289
9999 mem: storing 10 in location 1289
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1280
9999 mem: location 1208 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 0
9999 mem: location 1287 is 1280
9999 mem: location 1209 is 1288
9999 mem: location 1208 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy to is 1286
9999 mem: storing 1288 in location 1286
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 0
9999 mem: location 1291 is 0
9999 mem: location 1208 is 1284
9999 mem: location 1209 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy to is 1291
9999 mem: storing 1284 in location 1291
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 0
9999 mem: location 1291 is 1284
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy to is 1290
9999 mem: storing 0 in location 1290
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1284
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1284
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 5 -> 4
9999 mem: storing 1288 in location 1201
9999 mem: incrementing refcount of 1288: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 18
9999 mem: storing 19 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 19
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 19
9998 run: address to copy is 1166
9998 run: its type is character
9999 mem: location 1166 is 109
9999 mem: storing 109 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 109
9999 mem: location 1201 is 1288
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 109 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1208
9999 mem: incrementing refcount of 1288: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1292
9999 mem: storing 1292 in location 1209
9999 mem: incrementing refcount of 1292: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1207 is 109
9999 mem: location 1209 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy to is 1293
9999 mem: storing 109 in location 1293
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 0
9999 mem: location 1291 is 1284
9999 mem: location 1208 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 0
9999 mem: location 1291 is 1284
9999 mem: location 1209 is 1292
9999 mem: location 1208 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy to is 1290
9999 mem: storing 1292 in location 1290
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1208 is 1288
9999 mem: location 1209 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy to is 1295
9999 mem: storing 1288 in location 1295
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1288
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy to is 1294
9999 mem: storing 0 in location 1294
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1288
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1288
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 5 -> 4
9999 mem: storing 1292 in location 1201
9999 mem: incrementing refcount of 1292: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 19
9999 mem: storing 20 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 20
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 20
9998 run: address to copy is 1167
9998 run: its type is character
9999 mem: location 1167 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1292
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1208
9999 mem: incrementing refcount of 1292: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1296
9999 mem: storing 1296 in location 1209
9999 mem: incrementing refcount of 1296: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1297
9999 mem: storing 10 in location 1297
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1288
9999 mem: location 1208 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1288
9999 mem: location 1209 is 1296
9999 mem: location 1208 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy to is 1294
9999 mem: storing 1296 in location 1294
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1208 is 1292
9999 mem: location 1209 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1299
9999 mem: storing 1292 in location 1299
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 0
9999 mem: location 1299 is 1292
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1298
9999 mem: storing 0 in location 1298
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1292
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1292
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 5 -> 4
9999 mem: storing 1296 in location 1201
9999 mem: incrementing refcount of 1296: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 20
9999 mem: storing 21 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 21
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 21
9998 run: address to copy is 1168
9998 run: its type is character
9999 mem: location 1168 is 110
9999 mem: storing 110 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 110
9999 mem: location 1201 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 110 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1208
9999 mem: incrementing refcount of 1296: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1300
9999 mem: storing 1300 in location 1209
9999 mem: incrementing refcount of 1300: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: location 1303 is 0
9999 mem: location 1207 is 110
9999 mem: location 1209 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy to is 1301
9999 mem: storing 110 in location 1301
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 0
9999 mem: location 1299 is 1292
9999 mem: location 1208 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1298 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 0
9999 mem: location 1299 is 1292
9999 mem: location 1209 is 1300
9999 mem: location 1208 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy to is 1298
9999 mem: storing 1300 in location 1298
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 0
9999 mem: location 1303 is 0
9999 mem: location 1208 is 1296
9999 mem: location 1209 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy to is 1303
9999 mem: storing 1296 in location 1303
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 0
9999 mem: location 1303 is 1296
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy to is 1302
9999 mem: storing 0 in location 1302
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1296
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1296
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1218
9999 mem: incrementing refcount of 1296: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1296
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1298 is 1300
9999 mem: storing 1300 in location 1219
9999 mem: incrementing refcount of 1300: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1300
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1300
9999 mem: decrementing refcount of 1296: 5 -> 4
9999 mem: storing 1300 in location 1201
9999 mem: incrementing refcount of 1300: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 21
9999 mem: storing 22 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 22
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 22
9998 run: address to copy is 1169
9998 run: its type is character
9999 mem: location 1169 is 10
9999 mem: storing 10 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 10
9999 mem: location 1201 is 1300
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1208
9999 mem: incrementing refcount of 1300: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1304
9999 mem: storing 1304 in location 1209
9999 mem: incrementing refcount of 1304: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1307 is 0
9999 mem: location 1207 is 10
9999 mem: location 1209 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy to is 1305
9999 mem: storing 10 in location 1305
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 0
9999 mem: location 1303 is 1296
9999 mem: location 1208 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 0
9999 mem: location 1303 is 1296
9999 mem: location 1209 is 1304
9999 mem: location 1208 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy to is 1302
9999 mem: storing 1304 in location 1302
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 0
9999 mem: location 1307 is 0
9999 mem: location 1208 is 1300
9999 mem: location 1209 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy to is 1307
9999 mem: storing 1300 in location 1307
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1300
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy to is 1306
9999 mem: storing 0 in location 1306
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1300
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1300
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1218
9999 mem: incrementing refcount of 1300: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1300
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 1304
9999 mem: location 1303 is 1296
9999 mem: location 1218 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1302 is 1304
9999 mem: storing 1304 in location 1219
9999 mem: incrementing refcount of 1304: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1304
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1304
9999 mem: decrementing refcount of 1300: 5 -> 4
9999 mem: storing 1304 in location 1201
9999 mem: incrementing refcount of 1304: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 22
9999 mem: storing 23 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 23
9999 mem: location 1199 is 24
9999 mem: storing 0 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1198 is 1145
9999 mem: skipping refcount at 1145
9998 run: base address is 1146
9999 mem: location 1200 is 23
9998 run: address to copy is 1170
9998 run: its type is character
9999 mem: location 1170 is 111
9999 mem: storing 111 in location 1203
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 111
9999 mem: location 1201 is 1304
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 111 in location 1207
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1304 in location 1208
9999 mem: incrementing refcount of 1304: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1308
9999 mem: storing 1308 in location 1209
9999 mem: incrementing refcount of 1308: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1209 is 1308
9999 mem: skipping refcount at 1308
9999 mem: location 1309 is 0
9999 mem: location 1310 is 0
9999 mem: location 1311 is 0
9999 mem: location 1207 is 111
9999 mem: location 1209 is 1308
9999 mem: skipping refcount at 1308
9998 run: address to copy to is 1309
9999 mem: storing 111 in location 1309
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1208 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1300
9999 mem: location 1208 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy is 1306
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1306 is 0
9999 mem: storing 0 in location 1210
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1208 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 0
9999 mem: location 1307 is 1300
9999 mem: location 1209 is 1308
9999 mem: location 1208 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy to is 1306
9999 mem: storing 1308 in location 1306
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1308
9999 mem: skipping refcount at 1308
9999 mem: location 1309 is 111
9999 mem: location 1310 is 0
9999 mem: location 1311 is 0
9999 mem: location 1208 is 1304
9999 mem: location 1209 is 1308
9999 mem: skipping refcount at 1308
9998 run: address to copy to is 1311
9999 mem: storing 1304 in location 1311
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1209 is 1308
9999 mem: skipping refcount at 1308
9999 mem: location 1309 is 111
9999 mem: location 1310 is 0
9999 mem: location 1311 is 1304
9999 mem: location 1210 is 0
9999 mem: location 1209 is 1308
9999 mem: skipping refcount at 1308
9998 run: address to copy to is 1310
9999 mem: storing 0 in location 1310
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1210 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1208 is 1304
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1201 is 1304
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1304 in location 1218
9999 mem: incrementing refcount of 1304: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1304
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 1308
9999 mem: location 1307 is 1300
9999 mem: location 1218 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy is 1306
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1306 is 1308
9999 mem: storing 1308 in location 1219
9999 mem: incrementing refcount of 1308: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1308
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1308
9999 mem: decrementing refcount of 1304: 5 -> 4
9999 mem: storing 1308 in location 1201
9999 mem: incrementing refcount of 1308: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1200 is 23
9999 mem: storing 24 in location 1200
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1200 is 24
9999 mem: location 1199 is 24
9999 mem: storing 1 in location 1202
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1197 is 1171
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 2 -> 1
9999 mem: storing 1171 in location 1143
9999 mem: incrementing refcount of 1171: 1 -> 2
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1140 is 1008
9999 mem: location 1143 is 1171
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1312
9999 mem: storing 26 in location 1313
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1316
9999 mem: incrementing refcount of 1171: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1316 is 1171
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1317
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1315 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 105 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 6
9999 mem: storing 6 in location 1318
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1319
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1190
9999 mem: storing 1190 in location 1320
9999 mem: incrementing refcount of 1190: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1190
9999 mem: storing 1190 in location 1321
9999 mem: incrementing refcount of 1190: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1218
9999 mem: incrementing refcount of 1190: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1190
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 167
9999 mem: location 1192 is 1211
9999 mem: location 1193 is 0
9999 mem: location 1218 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1211
9999 mem: storing 1211 in location 1219
9999 mem: incrementing refcount of 1211: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1190: 7 -> 6
9999 mem: storing 1211 in location 1320
9999 mem: incrementing refcount of 1211: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1322
9990 schedule: render/new-editor/scenario_editor-can-scroll-up-wrapped-lines
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1323
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1325
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1326
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1190
9999 mem: storing 1190 in location 1327
9999 mem: incrementing refcount of 1190: 6 -> 7
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 1
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1211
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1330
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1190
9999 mem: decrementing refcount of 1190: 7 -> 6
9999 mem: storing 1190 in location 1327
9999 mem: incrementing refcount of 1190: 6 -> 7
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 1220
9999 mem: location 1214 is 1190
9999 mem: location 1320 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 97
9999 mem: storing 97 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1340
9999 mem: storing 10 in location 1341
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 97
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 97
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 97
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 97
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1352
9999 mem: storing 23 in location 1353
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 97
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 0
9999 mem: storing 10 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 97
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 97
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1036
9999 mem: location 1374 is 1036
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1218
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 1220
9999 mem: location 1214 is 1190
9999 mem: location 1218 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1220
9999 mem: storing 1220 in location 1219
9999 mem: incrementing refcount of 1220: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1211: 7 -> 6
9999 mem: storing 1220 in location 1320
9999 mem: incrementing refcount of 1220: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1190
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1218
9999 mem: incrementing refcount of 1190: 7 -> 8
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1190
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 167
9999 mem: location 1192 is 1211
9999 mem: location 1193 is 0
9999 mem: location 1218 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1192 is 1211
9999 mem: storing 1211 in location 1219
9999 mem: incrementing refcount of 1211: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1190: 8 -> 7
9999 mem: storing 1211 in location 1321
9999 mem: incrementing refcount of 1211: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1220
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1330
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1320 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 10
9999 mem: storing 10 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1333
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 9 -> 10
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1
9999 mem: storing 11 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 3 -> 4
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1038
9999 mem: location 1374 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 10 -> 9
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 10 -> 11
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 2
9999 mem: storing 12 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 4 -> 5
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1040
9999 mem: location 1374 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 11 -> 10
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 3
9999 mem: storing 13 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1042
9999 mem: location 1374 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 1
9999 mem: storing 2 in location 1323
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 2
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 2
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 12 -> 13
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1218
9999 mem: incrementing refcount of 1220: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1218 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1219
9999 mem: incrementing refcount of 1224: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 7 -> 6
9999 mem: storing 1224 in location 1320
9999 mem: incrementing refcount of 1224: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1211
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1218
9999 mem: incrementing refcount of 1211: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1211
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 97
9999 mem: location 1213 is 1220
9999 mem: location 1214 is 1190
9999 mem: location 1218 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1220
9999 mem: storing 1220 in location 1219
9999 mem: incrementing refcount of 1220: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1211: 9 -> 8
9999 mem: storing 1220 in location 1321
9999 mem: incrementing refcount of 1220: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1224
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1320 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 98
9999 mem: storing 98 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 98
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 98
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 98
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 98
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 98
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 0
9999 mem: storing 20 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 98
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 98
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1056
9999 mem: location 1374 is 1056
9999 mem: storing 98 in location 1056
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1218
9999 mem: incrementing refcount of 1224: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1218 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1219
9999 mem: incrementing refcount of 1228: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 7 -> 6
9999 mem: storing 1228 in location 1320
9999 mem: incrementing refcount of 1228: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1220
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1218
9999 mem: incrementing refcount of 1220: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1220
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1218 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1219
9999 mem: incrementing refcount of 1224: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 9 -> 8
9999 mem: storing 1224 in location 1321
9999 mem: incrementing refcount of 1224: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1228
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1320 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
9990 schedule: get-color/render/new-editor/scenario_editor-can-scroll-up-wrapped-lines
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 15 -> 16
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1
9999 mem: storing 21 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 7 -> 8
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1058
9999 mem: location 1374 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 2
9999 mem: storing 22 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1060
9999 mem: location 1374 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 3
9999 mem: storing 23 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1062
9999 mem: location 1374 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 2
9999 mem: storing 3 in location 1323
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 3
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 3
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1218
9999 mem: incrementing refcount of 1228: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1218 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1219
9999 mem: incrementing refcount of 1232: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 7 -> 6
9999 mem: storing 1232 in location 1320
9999 mem: incrementing refcount of 1232: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1224
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1218
9999 mem: incrementing refcount of 1224: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1224
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1218 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1219
9999 mem: incrementing refcount of 1228: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 9 -> 8
9999 mem: storing 1228 in location 1321
9999 mem: incrementing refcount of 1228: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1232
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1320 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 99
9999 mem: storing 99 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 99
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 99
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 99
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 0
9999 mem: storing 30 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 99
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1076
9999 mem: location 1374 is 1076
9999 mem: storing 99 in location 1076
9999 mem: storing 7 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1218
9999 mem: incrementing refcount of 1232: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1218 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1219
9999 mem: incrementing refcount of 1236: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 7 -> 6
9999 mem: storing 1236 in location 1320
9999 mem: incrementing refcount of 1236: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1228
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1218
9999 mem: incrementing refcount of 1228: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1228
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1218 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1219
9999 mem: incrementing refcount of 1232: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 9 -> 8
9999 mem: storing 1232 in location 1321
9999 mem: incrementing refcount of 1232: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1236
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1320 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 100
9999 mem: storing 100 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 100
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 100
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 100
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 100
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1
9999 mem: storing 31 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 100
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1078
9999 mem: location 1374 is 1078
9999 mem: storing 100 in location 1078
9999 mem: storing 7 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1218
9999 mem: incrementing refcount of 1236: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1236
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1218 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 1240
9999 mem: storing 1240 in location 1219
9999 mem: incrementing refcount of 1240: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1236: 7 -> 6
9999 mem: storing 1240 in location 1320
9999 mem: incrementing refcount of 1240: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1232
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1218
9999 mem: incrementing refcount of 1232: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1232
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1218 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1219
9999 mem: incrementing refcount of 1236: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 9 -> 8
9999 mem: storing 1236 in location 1321
9999 mem: incrementing refcount of 1236: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 1
9999 mem: storing 2 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1240
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1320 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1241
9998 run: its type is "character"
9999 mem: location 1241 is 101
9999 mem: storing 101 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 101
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 101
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 101
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 101
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
9990 schedule: print/render/new-editor/scenario_editor-can-scroll-up-wrapped-lines
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 101
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 2
9999 mem: storing 32 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 101
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 101
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1080
9999 mem: location 1374 is 1080
9999 mem: storing 101 in location 1080
9999 mem: storing 7 in location 1081
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1240
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1218
9999 mem: incrementing refcount of 1240: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1240
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1218 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1242
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1242 is 1244
9999 mem: storing 1244 in location 1219
9999 mem: incrementing refcount of 1244: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1240: 7 -> 6
9999 mem: storing 1244 in location 1320
9999 mem: incrementing refcount of 1244: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1218
9999 mem: incrementing refcount of 1236: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1236
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1218 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 1240
9999 mem: storing 1240 in location 1219
9999 mem: incrementing refcount of 1240: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1236: 9 -> 8
9999 mem: storing 1240 in location 1321
9999 mem: incrementing refcount of 1240: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 2
9999 mem: storing 3 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1244
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9998 run: its type is "character"
9999 mem: location 1245 is 102
9999 mem: storing 102 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 102
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 102
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 102
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1319 is 3
9999 mem: storing 1 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 104 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1335
 104 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1315 is 1008
9999 mem: location 1335 is 8617
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 8617
  90 print-character: 8617 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 8617
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 3
9999 mem: storing 33 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 8617
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 8617
9999 mem: location 1357 is 245
9999 mem: location 1374 is 1082
9999 mem: location 1374 is 1082
9999 mem: storing 8617 in location 1082
9999 mem: storing 245 in location 1083
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 3
9999 mem: storing 4 in location 1323
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 4
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 4
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 23 -> 24
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1244
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9998 run: its type is "character"
9999 mem: location 1245 is 102
9999 mem: storing 102 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 102
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 102
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 102
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 102
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 102
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 0
9999 mem: storing 40 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 102
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 40
9999 mem: storing 1096 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 102
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1096
9999 mem: location 1374 is 1096
9999 mem: storing 102 in location 1096
9999 mem: storing 7 in location 1097
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1244
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1218
9999 mem: incrementing refcount of 1244: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1244
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1218 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1246 is 1248
9999 mem: storing 1248 in location 1219
9999 mem: incrementing refcount of 1248: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1244: 7 -> 6
9999 mem: storing 1248 in location 1320
9999 mem: incrementing refcount of 1248: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1240
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1218
9999 mem: incrementing refcount of 1240: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1240
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1218 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1242
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1242 is 1244
9999 mem: storing 1244 in location 1219
9999 mem: incrementing refcount of 1244: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1240: 9 -> 8
9999 mem: storing 1244 in location 1321
9999 mem: incrementing refcount of 1244: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1248
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1320 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1249
9998 run: its type is "character"
9999 mem: location 1249 is 103
9999 mem: storing 103 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 103
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 103
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 103
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 103
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 103
  90 print-character: 103 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 103
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 1
9999 mem: storing 41 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 103
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 41
9999 mem: storing 1098 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 103
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1098
9999 mem: location 1374 is 1098
9999 mem: storing 103 in location 1098
9999 mem: storing 7 in location 1099
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1248
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1218
9999 mem: incrementing refcount of 1248: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1248
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1218 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1250
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1250 is 1252
9999 mem: storing 1252 in location 1219
9999 mem: incrementing refcount of 1252: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1252
9999 mem: decrementing refcount of 1248: 7 -> 6
9999 mem: storing 1252 in location 1320
9999 mem: incrementing refcount of 1252: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1244
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1218
9999 mem: incrementing refcount of 1244: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1244
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1218 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1246 is 1248
9999 mem: storing 1248 in location 1219
9999 mem: incrementing refcount of 1248: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1244: 9 -> 8
9999 mem: storing 1248 in location 1321
9999 mem: incrementing refcount of 1248: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 1
9999 mem: storing 2 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1252
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1320 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1253
9998 run: its type is "character"
9999 mem: location 1253 is 104
9999 mem: storing 104 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 104
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 104
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 104
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 104
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 104
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 104
  90 print-character: 104 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 104
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 2
9999 mem: storing 42 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 104
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 42
9999 mem: storing 1100 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 104
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1100
9999 mem: location 1374 is 1100
9999 mem: storing 104 in location 1100
9999 mem: storing 7 in location 1101
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1252
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1218
9999 mem: incrementing refcount of 1252: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1252
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1218 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1254
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1254 is 1256
9999 mem: storing 1256 in location 1219
9999 mem: incrementing refcount of 1256: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1252: 7 -> 6
9999 mem: storing 1256 in location 1320
9999 mem: incrementing refcount of 1256: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1248
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1218
9999 mem: incrementing refcount of 1248: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1248
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1218 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1250
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1250 is 1252
9999 mem: storing 1252 in location 1219
9999 mem: incrementing refcount of 1252: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1252
9999 mem: decrementing refcount of 1248: 9 -> 8
9999 mem: storing 1252 in location 1321
9999 mem: incrementing refcount of 1252: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 2
9999 mem: storing 3 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1256
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1320 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1257
9998 run: its type is "character"
9999 mem: location 1257 is 10
9999 mem: storing 10 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
9990 schedule: get-color/render/new-editor/scenario_editor-can-scroll-up-wrapped-lines
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 3
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1198
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 3
9999 mem: storing 43 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 17 -> 18
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 43
9999 mem: storing 1102 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1102
9999 mem: location 1374 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 29 -> 28
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 4
9999 mem: storing 5 in location 1323
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 5
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 30 -> 29
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 29 -> 30
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1256
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 7 -> 6
9999 mem: storing 1260 in location 1320
9999 mem: incrementing refcount of 1260: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1252
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1218
9999 mem: incrementing refcount of 1252: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1252
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1218 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1254
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1254 is 1256
9999 mem: storing 1256 in location 1219
9999 mem: incrementing refcount of 1256: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1252: 9 -> 8
9999 mem: storing 1256 in location 1321
9999 mem: incrementing refcount of 1256: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1260
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1320 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 105
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 105
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 105
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 105
9999 mem: storing 0 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 105
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1356
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 105
  90 print-character: 105 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 105
9999 mem: storing 0 in location 1366
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 0
9999 mem: storing 50 in location 1369
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 18 -> 19
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 105
9999 mem: storing 0 in location 1372
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 50
9999 mem: storing 1116 in location 1374
 105 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 105
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1116
9999 mem: location 1374 is 1116
9999 mem: storing 105 in location 1116
9999 mem: storing 7 in location 1117
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1260
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 7 -> 6
9999 mem: storing 1264 in location 1320
9999 mem: incrementing refcount of 1264: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1256
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 9 -> 8
9999 mem: storing 1260 in location 1321
9999 mem: incrementing refcount of 1260: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1264
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1320 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1331
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1343
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1344
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1343 is 7
9999 mem: storing 1 in location 1345
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1346
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1347
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1345 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1344 is 10
9999 mem: storing 0 in location 1349
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1343 is 7
9999 mem: storing 0 in location 1350
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1350 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1343 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 32 -> 33
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 1
9999 mem: storing 51 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 19 -> 20
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 51
9999 mem: storing 1118 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1118
9999 mem: location 1374 is 1118
9999 mem: storing 32 in location 1118
9999 mem: storing 7 in location 1119
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 33 -> 32
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 33 -> 34
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 2
9999 mem: storing 52 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 20 -> 21
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 52
9999 mem: storing 1120 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1120
9999 mem: location 1374 is 1120
9999 mem: storing 32 in location 1120
9999 mem: storing 7 in location 1121
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 34 -> 33
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 34 -> 35
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 106 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 3
9999 mem: storing 53 in location 1369
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 21 -> 22
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 53
9999 mem: storing 1122 in location 1374
 106 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1122
9999 mem: location 1374 is 1122
9999 mem: storing 32 in location 1122
9999 mem: storing 7 in location 1123
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 106 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 35 -> 34
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 34 -> 35
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 5
9999 mem: storing 6 in location 1323
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 35 -> 36
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 6
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 36 -> 35
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1264
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 7 -> 6
9999 mem: storing 1268 in location 1320
9999 mem: incrementing refcount of 1268: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1260
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 9 -> 8
9999 mem: storing 1264 in location 1321
9999 mem: incrementing refcount of 1264: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1268
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1318 is 6
9999 mem: storing 1 in location 1328
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jumping to instruction 68
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 0
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1320 is 1268
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1174
9999 mem: storing 1268 in location 1174
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1336
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1329 is 0
9999 mem: location 1336 is 1
9999 mem: storing 0 in location 1337
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1338
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1339
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 80
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 0
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1323 is 6
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1178
9999 mem: storing 6 in location 1178
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1325 is 1
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1179
9999 mem: storing 1 in location 1179
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1326 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1327 is 1190
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1190 in location 1175
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 1171
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 6
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1171
9999 mem: decrementing refcount of 1008: 36 -> 35
9999 mem: storing 1008 in location 1140
9999 mem: incrementing refcount of 1008: 35 -> 36
9999 mem: decrementing refcount of 1171: 3 -> 2
9999 mem: storing 1171 in location 1143
9999 mem: incrementing refcount of 1171: 2 -> 3
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}, {1: "literal", "true": ()}
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1143 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1181
9999 mem: storing 1 in location 1181
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1143 is 1171
9999 mem: location 1140 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1171
9999 mem: storing 1171 in location 2
9999 mem: incrementing refcount of 1171: 3 -> 4
 102 run: screen-should-contain {"\n    .          .\n    .a         .\n    .b         .\n    .cde↩      .\n    .fgh       .\n    .i         .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-down\n    left-click 5, 0\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-down: ()}
9992 load: after rewriting: press {page-down: ()}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {5: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {5: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'press' event starting at 1379
9999 mem: storing 'left-click' event starting at 1383
9999 mem: storing 'press' event starting at 1387
9999 mem: storing console in 1391
9999 mem: storing console data in 1393
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1391
9999 mem: location 2 is 1171
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1394
9999 mem: storing 14 in location 1395
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 36 -> 37
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1398
9999 mem: incrementing refcount of 1391: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1399
9999 mem: incrementing refcount of 1171: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1400
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1401
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1397 is 1008
9999 mem: location 1400 is 1
9999 mem: location 1401 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 38 -> 37
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 37 -> 38
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1398 is 1391
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1410
9999 mem: storing 12 in location 1411
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1413
9999 mem: incrementing refcount of 1391: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1413 is 1391
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1392
9998 run: its type is "number"
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1414
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1393
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1393 is 1377
9999 mem: storing 1377 in location 1415
9999 mem: incrementing refcount of 1377: 1 -> 2
9990 schedule: read-event/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9999 mem: storing 3 in location 1416
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1416 is 3
9999 mem: storing 0 in location 1417
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9998 run: base address is 1378
9999 mem: location 1414 is 0
9998 run: address to copy is 1379
9998 run: its type is event
9999 mem: location 1379 is 1
9999 mem: location 1380 is 65518
9999 mem: location 1381 is 0
9999 mem: location 1382 is 0
9999 mem: storing 1 in location 1419
9999 mem: storing 65518 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1377
9999 mem: location 1414 is 1
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy to is 1392
9999 mem: storing 1 in location 1392
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1419 is 1
9999 mem: location 1420 is 65518
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: location 1413 is 1391
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65518, 0, 0]
9998 run: result 1 is 1391
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1402
9999 mem: storing 65518 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: decrementing refcount of 1391: 2 -> 1
9999 mem: storing 1391 in location 1398
9999 mem: incrementing refcount of 1391: 1 -> 2
9999 mem: storing 1 in location 1406
9999 mem: storing 0 in location 1407
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1402 is 1
9999 mem: location 1403 is 65518
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1408
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 mem: location 1402 is 1
9999 mem: location 1403 is 65518
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 mem: new alloc: 1424
9999 mem: storing 74 in location 1425
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1427
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 5 -> 6
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1429
9999 mem: storing 65518 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1433
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1428 is 1171
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 106 run: return {width: "number"}
9999 mem: location 1219 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1434
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 106 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 6
9999 mem: storing 6 in location 1435
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1436
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1437
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1190
9999 mem: storing 1190 in location 1438
9999 mem: incrementing refcount of 1190: 7 -> 8
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1439
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1440
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1439 is 1
9999 mem: storing 1 in location 1441
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1442
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1429 is 1
9999 mem: location 1430 is 65518
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 0 in location 1443
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1443 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1429 is 1
9999 mem: location 1430 is 65518
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 1430 in location 1487
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1487 is 1430
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65518
9999 mem: storing 0 in location 1460
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65518
9999 mem: storing 1 in location 1471
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 1
9998 run: jump-unless fell through
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1190
9999 mem: storing 1190 in location 1461
9999 mem: incrementing refcount of 1190: 8 -> 9
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1462
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1463
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1190
9999 mem: storing 1190 in location 1464
9999 mem: incrementing refcount of 1190: 9 -> 10
 105 run: page-down {editor: ("address" "shared" "editor-data")}
9999 mem: location 1428 is 1171
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1003
9999 mem: incrementing refcount of 1171: 6 -> 7
 106 run: {bottom-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1174
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1174 is 1268
9999 mem: storing 1268 in location 1004
9999 mem: incrementing refcount of 1268: 6 -> 7
 106 run: jump-if {bottom-of-screen: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1004 is 1268
9998 run: jumping to instruction 5
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1190
9999 mem: storing 1190 in location 1005
9999 mem: incrementing refcount of 1190: 10 -> 11
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- prev_2 {bottom-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1004 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 7 -> 8
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1271
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1271 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1190: 11 -> 10
9999 mem: storing 1264 in location 1005
9999 mem: incrementing refcount of 1264: 9 -> 10
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1190
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1005 is 1264
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1264 in location 1175
 106 run: {last: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1005 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1006
 106 run: {newline?: "boolean"} <- equal {last: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1006 is 10
9999 mem: storing 1 in location 1007
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 8 -> 9
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1264: 11 -> 10
9999 mem: storing 1260 in location 1005
9999 mem: incrementing refcount of 1260: 9 -> 10
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1264
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1005 is 1260
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1260 in location 1175
 106 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1003 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1500
9999 mem: storing 9 in location 1501
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1503
9999 mem: incrementing refcount of 1171: 7 -> 8
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1260
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1504
 107 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1504 is 0
9999 mem: storing 0 in location 1505
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1260
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1505 is 0
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1260
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1260
9999 mem: storing 1260 in location 1506
9999 mem: incrementing refcount of 1260: 10 -> 11
 107 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1260
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1190
9999 mem: storing 1190 in location 1507
9999 mem: incrementing refcount of 1190: 10 -> 11
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1506 is 1260
9999 mem: location 1507 is 1190
9999 mem: storing 0 in location 1508
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1506 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1506 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1509
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1509 is 105
9999 mem: storing 0 in location 1510
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jump-if fell through
 107 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- prev_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1506 is 1260
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 11 -> 12
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1256
9999 mem: storing 1256 in location 1219
9999 mem: incrementing refcount of 1256: 8 -> 9
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1219 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1260: 12 -> 11
9999 mem: storing 1256 in location 1506
9999 mem: incrementing refcount of 1256: 9 -> 10
 107 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1260
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1506 is 1256
9999 mem: location 1503 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1256 in location 1175
 107 run: assert {before-cursor: ("address" "shared" "duplex-list" "character")}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1506 is 1256
 107 run: jump {: "offset"}
9998 run: jumping to instruction 8
 107 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1506 is 1256
9999 mem: location 1507 is 1190
9999 mem: storing 0 in location 1508
 107 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 0
9998 run: jump-if fell through
 107 run: {prev: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1506 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1506 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1257
9998 run: its type is "character"
9999 mem: location 1257 is 10
9999 mem: storing 10 in location 1509
 107 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1509 is 10
9999 mem: storing 1 in location 1510
 107 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 1
9998 run: jumping to instruction 17
 107 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1503 is 1171
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1256
9999 mem: decrementing refcount of 1260: 11 -> 10
9999 mem: storing 1256 in location 1005
9999 mem: incrementing refcount of 1256: 10 -> 11
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1190
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1005 is 1256
9999 mem: location 1003 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1256 in location 1173
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1171
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1465
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1466
9999 mem: incrementing refcount of 1256: 11 -> 12
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1439
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1440
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 518
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1340
9999 mem: storing 1340 in location 1446
9999 mem: incrementing refcount of 1340: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1462 is 1
9999 mem: location 1463 is 0
9999 mem: location 1464 is 1190
9999 mem: location 1439 is 1
9999 mem: location 1440 is 0
9999 mem: location 1466 is 1256
9999 mem: location 1465 is 0
9999 mem: location 1446 is 1340
9999 mem: skipping refcount at 1340
9999 mem: location 1446 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 1 in location 1341
9999 mem: storing 1 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 1190 in location 1344
9999 mem: storing 1 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 1256 in location 1347
9999 mem: storing 0 in location 1348
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1428 is 1171
9999 mem: location 1446 is 1340
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1207
9999 mem: incrementing refcount of 1171: 8 -> 9
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1340 in location 1208
9999 mem: incrementing refcount of 1340: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1182
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1182 is 0
9999 mem: storing 0 in location 1209
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1208 is 1340
9999 mem: location 1209 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1340 in location 1187
9999 mem: incrementing refcount of 1340: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1188
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1511
9999 mem: storing 1511 in location 1189
9999 mem: incrementing refcount of 1511: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1187 is 1340
9999 mem: location 1188 is 0
9999 mem: location 1189 is 1511
9999 mem: skipping refcount at 1511
9999 mem: location 1189 is 1511
9999 mem: skipping refcount at 1511
9999 mem: storing 1340 in location 1512
9999 mem: storing 0 in location 1513
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1511
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1511
9999 mem: storing 1511 in location 1209
9999 mem: incrementing refcount of 1511: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1209 is 1511
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1182
9999 mem: storing 1511 in location 1182
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1210
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1210
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1210 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1183
9999 mem: storing 0 in location 1183
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1207 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 9 -> 8
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 8 -> 9
 105 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1469
9999 mem: incrementing refcount of 1256: 12 -> 13
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "shared" "duplex-list" "character")}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1469 is 1256
9999 mem: location 1461 is 1190
9999 mem: storing 0 in location 1470
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1470 is 0
9999 mem: storing 1 in location 1433
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1427 is 1008
9999 mem: location 1428 is 1171
9999 mem: location 1433 is 1
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1171
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 40 -> 41
9999 mem: decrementing refcount of 1171: 9 -> 8
9999 mem: storing 1171 in location 1399
9999 mem: incrementing refcount of 1171: 8 -> 9
9999 mem: storing 1 in location 1409
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1139
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1140
9999 mem: incrementing refcount of 1171: 9 -> 10
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1141
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1142
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1139 is 1008
9999 mem: location 1140 is 1171
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 42 -> 43
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1316
9999 mem: incrementing refcount of 1171: 10 -> 11
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1316 is 1171
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1317
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1315 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 107 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1318
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1319
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1320
9999 mem: incrementing refcount of 1256: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1256
9999 mem: storing 1256 in location 1321
9999 mem: incrementing refcount of 1256: 14 -> 15
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1256
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 15 -> 16
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 16 -> 15
9999 mem: storing 1260 in location 1320
9999 mem: incrementing refcount of 1260: 11 -> 12
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1322
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1325
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1326
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1256
9999 mem: storing 1256 in location 1327
9999 mem: incrementing refcount of 1256: 15 -> 16
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 1
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 44 -> 45
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1260
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1330
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1256
9999 mem: decrementing refcount of 1256: 16 -> 15
9999 mem: storing 1256 in location 1327
9999 mem: incrementing refcount of 1256: 15 -> 16
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1320 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 105
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1514
9999 mem: storing 10 in location 1515
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 105
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 105
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 105
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 105
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 45 -> 46
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 105
  90 print-character: 105 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 105
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 0
9999 mem: storing 10 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 105
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 105
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1036
9999 mem: location 1374 is 1036
9999 mem: storing 105 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1260
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 13 -> 12
9999 mem: storing 1264 in location 1320
9999 mem: incrementing refcount of 1264: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1256
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 17 -> 16
9999 mem: storing 1260 in location 1321
9999 mem: incrementing refcount of 1260: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1264
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1320 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 1
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1333
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 46 -> 47
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 47 -> 48
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1
9999 mem: storing 11 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 23 -> 24
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1038
9999 mem: location 1374 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 47 -> 48
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 48 -> 49
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 2
9999 mem: storing 12 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 24 -> 25
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1040
9999 mem: location 1374 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 49 -> 50
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 3
9999 mem: storing 13 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 25 -> 26
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1042
9999 mem: location 1374 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 50 -> 49
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 1
9999 mem: storing 2 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 2
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 2
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 50 -> 51
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 13 -> 12
9999 mem: storing 1268 in location 1320
9999 mem: incrementing refcount of 1268: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1260
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 15 -> 14
9999 mem: storing 1264 in location 1321
9999 mem: incrementing refcount of 1264: 13 -> 14
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1268
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1320 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1269
9998 run: its type is "character"
9999 mem: location 1269 is 106
9999 mem: storing 106 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 106
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 106
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 106
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 106
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 106
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 106
  90 print-character: 106 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 106
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 0
9999 mem: storing 20 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 26 -> 27
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 106
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 106
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1056
9999 mem: location 1374 is 1056
9999 mem: storing 106 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 11 -> 10
9999 mem: storing 1272 in location 1320
9999 mem: incrementing refcount of 1272: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 15 -> 14
9999 mem: storing 1268 in location 1321
9999 mem: incrementing refcount of 1268: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1272
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1320 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1273
9998 run: its type is "character"
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 52 -> 53
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 53 -> 54
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1
9999 mem: storing 21 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 27 -> 28
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1058
9999 mem: location 1374 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 54 -> 55
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 2
9999 mem: storing 22 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 28 -> 29
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1060
9999 mem: location 1374 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 55 -> 56
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 3
9999 mem: storing 23 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 29 -> 30
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1062
9999 mem: location 1374 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 2
9999 mem: storing 3 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 3
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 3
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 7 -> 6
9999 mem: storing 1276 in location 1320
9999 mem: incrementing refcount of 1276: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 13 -> 12
9999 mem: storing 1272 in location 1321
9999 mem: incrementing refcount of 1272: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1276
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1320 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1277
9998 run: its type is "character"
9999 mem: location 1277 is 107
9999 mem: storing 107 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 107
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 107
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 107
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 107
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 107
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 107
  90 print-character: 107 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 107
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 0
9999 mem: storing 30 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 30 -> 31
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 107
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 107
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1076
9999 mem: location 1374 is 1076
9999 mem: storing 107 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1276
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 7 -> 6
9999 mem: storing 1280 in location 1320
9999 mem: incrementing refcount of 1280: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 9 -> 8
9999 mem: storing 1276 in location 1321
9999 mem: incrementing refcount of 1276: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1280
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1320 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "character"
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 59 -> 60
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1
9999 mem: storing 31 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 31 -> 32
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1078
9999 mem: location 1374 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 60 -> 61
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 2
9999 mem: storing 32 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 32 -> 33
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1080
9999 mem: location 1374 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 61 -> 62
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 3
9999 mem: storing 33 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 33 -> 34
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1082
9999 mem: location 1374 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 3
9999 mem: storing 4 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 4
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 4
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 63 -> 62
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 62 -> 63
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1280
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 7 -> 6
9999 mem: storing 1284 in location 1320
9999 mem: incrementing refcount of 1284: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1276
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 9 -> 8
9999 mem: storing 1280 in location 1321
9999 mem: incrementing refcount of 1280: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1284
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1320 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1285
9998 run: its type is "character"
9999 mem: location 1285 is 108
9999 mem: storing 108 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 108
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 108
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 108
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 108
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 108
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 63 -> 64
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 108
  90 print-character: 108 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 108
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 0
9999 mem: storing 40 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 108
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 40
9999 mem: storing 1096 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 108
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1096
9999 mem: location 1374 is 1096
9999 mem: storing 108 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1284
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 7 -> 6
9999 mem: storing 1288 in location 1320
9999 mem: incrementing refcount of 1288: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1280
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 9 -> 8
9999 mem: storing 1284 in location 1321
9999 mem: incrementing refcount of 1284: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1288
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1320 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9998 run: its type is "character"
9999 mem: location 1289 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 64 -> 65
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 65 -> 66
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 1
9999 mem: storing 41 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 35 -> 36
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 41
9999 mem: storing 1098 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1098
9999 mem: location 1374 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 65 -> 66
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 66 -> 67
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 2
9999 mem: storing 42 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 36 -> 37
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 42
9999 mem: storing 1100 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1100
9999 mem: location 1374 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 67 -> 66
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 67 -> 68
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 3
9999 mem: storing 43 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 37 -> 38
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 43
9999 mem: storing 1102 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1102
9999 mem: location 1374 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 68 -> 67
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 67 -> 68
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 4
9999 mem: storing 5 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 5
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 68 -> 69
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1288
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 7 -> 6
9999 mem: storing 1292 in location 1320
9999 mem: incrementing refcount of 1292: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1284
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 9 -> 8
9999 mem: storing 1288 in location 1321
9999 mem: incrementing refcount of 1288: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1292
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1320 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1293
9998 run: its type is "character"
9999 mem: location 1293 is 109
9999 mem: storing 109 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 109
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 109 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 109
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 109
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 109
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 109
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 109 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 109
  90 print-character: 109 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 109
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 0
9999 mem: storing 50 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 109
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 50
9999 mem: storing 1116 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 109
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1116
9999 mem: location 1374 is 1116
9999 mem: storing 109 in location 1116
9999 mem: storing 7 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1292
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 7 -> 6
9999 mem: storing 1296 in location 1320
9999 mem: incrementing refcount of 1296: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1288
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 9 -> 8
9999 mem: storing 1292 in location 1321
9999 mem: incrementing refcount of 1292: 7 -> 8
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1296
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1320 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "character"
9999 mem: location 1297 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1517
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1518
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1517 is 7
9999 mem: storing 1 in location 1519
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1520
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1520 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1521
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1521 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1519 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1518 is 10
9999 mem: storing 0 in location 1523
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1523 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1517 is 7
9999 mem: storing 0 in location 1524
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1524 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1517 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 71 -> 72
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 1
9999 mem: storing 51 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 39 -> 40
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 51
9999 mem: storing 1118 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1118
9999 mem: location 1374 is 1118
9999 mem: storing 32 in location 1118
9999 mem: storing 7 in location 1119
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 72 -> 73
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 2
9999 mem: storing 52 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 40 -> 41
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 52
9999 mem: storing 1120 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1120
9999 mem: location 1374 is 1120
9999 mem: storing 32 in location 1120
9999 mem: storing 7 in location 1121
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 72 -> 73
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 73 -> 74
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 3
9999 mem: storing 53 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 41 -> 42
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 53
9999 mem: storing 1122 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1122
9999 mem: location 1374 is 1122
9999 mem: storing 32 in location 1122
9999 mem: storing 7 in location 1123
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 73 -> 74
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 5
9999 mem: storing 6 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 74 -> 75
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 6
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 74 -> 75
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1296
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1218
9999 mem: incrementing refcount of 1296: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1296
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1298 is 1300
9999 mem: storing 1300 in location 1219
9999 mem: incrementing refcount of 1300: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1300
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1300
9999 mem: decrementing refcount of 1296: 7 -> 6
9999 mem: storing 1300 in location 1320
9999 mem: incrementing refcount of 1300: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1292
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 8 -> 9
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 9 -> 8
9999 mem: storing 1296 in location 1321
9999 mem: incrementing refcount of 1296: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1300
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1318 is 6
9999 mem: storing 1 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jumping to instruction 68
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1268
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1320 is 1300
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1174
9999 mem: storing 1300 in location 1174
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1329
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1336
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1329 is 0
9999 mem: location 1336 is 1
9999 mem: storing 0 in location 1337
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 1
9999 mem: storing 0 in location 1338
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1339
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 80
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1323 is 6
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1178
9999 mem: storing 6 in location 1178
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1325 is 1
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1179
9999 mem: storing 1 in location 1179
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1326 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1327 is 1256
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1256 in location 1175
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 1171
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 6
9998 run: result 1 is 0
9999 mem: storing 6 in location 1143
9999 mem: storing 0 in location 1144
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1139 is 1008
9999 mem: location 1144 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 75 -> 76
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1198
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 0
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 76 -> 77
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 0
9999 mem: storing 1 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 77 -> 78
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 77 -> 78
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 78 -> 79
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 79 -> 80
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 80 -> 79
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1143 is 6
9999 mem: storing 7 in location 1143
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1139 is 1008
9999 mem: location 1143 is 7
9999 mem: location 1141 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1413
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1414
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1415
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1416
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1417
9999 mem: storing 1 in location 1418
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1419
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1421
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1414 is 7
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 81 -> 82
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 7
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1413
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 0
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 82 -> 83
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 0
9999 mem: storing 1 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 1
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 83 -> 84
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 1
9999 mem: storing 2 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 2
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 84 -> 85
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 2
9999 mem: storing 3 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 3
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 85 -> 86
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 3
9999 mem: storing 4 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 4
9999 mem: location 1416 is 3
9999 mem: storing 0 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1413 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1143 is 7
9999 mem: storing 8 in location 1143
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1139 is 1008
9999 mem: location 1143 is 8
9999 mem: location 1141 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 86 -> 87
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 8
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 87 -> 88
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 8
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 88 -> 87
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 87 -> 88
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 88 -> 89
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 0
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 89 -> 90
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 90 -> 89
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 0
9999 mem: storing 1 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 90 -> 91
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 91 -> 92
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 92 -> 91
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 92 -> 93
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 93 -> 92
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 8
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1526
9999 mem: storing 7 in location 1527
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1529
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1530
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1531
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1532
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1530 is 8
9999 mem: storing 9 in location 1530
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1529 is 1008
9999 mem: location 1530 is 9
9999 mem: location 1531 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 94 -> 95
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1188
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 9
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1529
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1529 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 95 -> 96
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 108 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 6
9999 mem: storing 6 in location 1533
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1530 is 9
9999 mem: location 1533 is 6
9999 mem: storing 1 in location 1534
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1534 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1529 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1139 is 1008
9999 mem: location 1140 is 1171
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 95 -> 96
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1400
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1401
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1397 is 1008
9999 mem: location 1400 is 1
9999 mem: location 1401 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1398 is 1391
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1413
9999 mem: incrementing refcount of 1391: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1413 is 1391
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 1
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1392
9998 run: its type is "number"
9999 mem: location 1392 is 1
9999 mem: storing 1 in location 1414
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 1
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1393
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1393 is 1377
9999 mem: storing 1377 in location 1415
9999 mem: incrementing refcount of 1377: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9999 mem: storing 3 in location 1416
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1416 is 3
9999 mem: storing 0 in location 1417
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9998 run: base address is 1378
9999 mem: location 1414 is 1
9998 run: address to copy is 1383
9998 run: its type is event
9999 mem: location 1383 is 2
9999 mem: location 1384 is 65513
9999 mem: location 1385 is 5
9999 mem: location 1386 is 0
9999 mem: storing 2 in location 1419
9999 mem: storing 65513 in location 1420
9999 mem: storing 5 in location 1421
9999 mem: storing 0 in location 1422
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1414 is 1
9999 mem: storing 2 in location 1414
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 1
9999 mem: location 1393 is 1377
9999 mem: location 1414 is 2
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy to is 1392
9999 mem: storing 2 in location 1392
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1419 is 2
9999 mem: location 1420 is 65513
9999 mem: location 1421 is 5
9999 mem: location 1422 is 0
9999 mem: location 1413 is 1391
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 5, 0]
9998 run: result 1 is 1391
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1402
9999 mem: storing 65513 in location 1403
9999 mem: storing 5 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: decrementing refcount of 1391: 3 -> 2
9999 mem: storing 1391 in location 1398
9999 mem: incrementing refcount of 1391: 2 -> 3
9999 mem: storing 1 in location 1406
9999 mem: storing 0 in location 1407
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1402 is 2
9999 mem: location 1403 is 65513
9999 mem: location 1404 is 5
9999 mem: location 1405 is 0
9999 mem: storing 1403 in location 1408
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 1403
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 mem: location 1408 is 1403
9999 mem: location 1403 is 65513
9999 mem: location 1404 is 5
9999 mem: location 1405 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1535
9999 mem: storing 24 in location 1536
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1538
9999 mem: incrementing refcount of 1008: 97 -> 98
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1539
9999 mem: incrementing refcount of 1171: 11 -> 12
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1540
9999 mem: storing 5 in location 1541
9999 mem: storing 0 in location 1542
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1539 is 1171
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1540 is 65513
9999 mem: location 1541 is 5
9999 mem: location 1542 is 0
9998 run: address to copy is 1541
9998 run: its type is "number"
9999 mem: location 1541 is 5
9999 mem: storing 5 in location 1543
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1543 is 5
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1540 is 65513
9999 mem: location 1541 is 5
9999 mem: location 1542 is 0
9998 run: address to copy is 1542
9998 run: its type is "number"
9999 mem: location 1542 is 0
9999 mem: storing 0 in location 1544
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1545
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: storing 0 in location 1546
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1546 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1547
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1544 is 0
9999 mem: location 1547 is 3
9999 mem: storing 0 in location 1548
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1548 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 1
9999 mem: storing 1 in location 1549
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1550
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1551
9999 mem: incrementing refcount of 1256: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1538 is 1008
9999 mem: location 1539 is 1171
9999 mem: location 1543 is 5
9999 mem: location 1544 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 98 -> 99
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1316
9999 mem: incrementing refcount of 1171: 12 -> 13
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1317
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1318
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1316 is 1171
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1319
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1320
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1315 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 99 -> 100
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 107 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1321
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1322
9999 mem: incrementing refcount of 1256: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1256
9999 mem: storing 1256 in location 1323
9999 mem: incrementing refcount of 1256: 18 -> 19
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1256
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 20 -> 19
9999 mem: storing 1260 in location 1322
9999 mem: incrementing refcount of 1260: 15 -> 16
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1324
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1325
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 1
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1317 is 5
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1179
9999 mem: storing 5 in location 1179
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1317 is 5
9999 mem: storing 5 in location 1326
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1318 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1318 is 0
9999 mem: storing 0 in location 1327
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1256
9999 mem: storing 1256 in location 1328
9999 mem: incrementing refcount of 1256: 19 -> 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1260
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1322 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 105
9999 mem: storing 0 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1320 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1260
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 17 -> 16
9999 mem: storing 1264 in location 1322
9999 mem: incrementing refcount of 1264: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1256
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 21 -> 20
9999 mem: storing 1260 in location 1323
9999 mem: incrementing refcount of 1260: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1325
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1264
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1322 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 10
9999 mem: storing 1 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1324 is 1
9999 mem: storing 2 in location 1324
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1325
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 17 -> 16
9999 mem: storing 1268 in location 1322
9999 mem: incrementing refcount of 1268: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1260
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 19 -> 18
9999 mem: storing 1264 in location 1323
9999 mem: incrementing refcount of 1264: 17 -> 18
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1268
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1322 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1269
9998 run: its type is "character"
9999 mem: location 1269 is 106
9999 mem: storing 106 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 106
9999 mem: storing 0 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1320 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 15 -> 14
9999 mem: storing 1272 in location 1322
9999 mem: incrementing refcount of 1272: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 19 -> 18
9999 mem: storing 1268 in location 1323
9999 mem: incrementing refcount of 1268: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1325
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1272
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1322 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1273
9998 run: its type is "character"
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 10
9999 mem: storing 1 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1324 is 2
9999 mem: storing 3 in location 1324
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1325
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 11 -> 10
9999 mem: storing 1276 in location 1322
9999 mem: incrementing refcount of 1276: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 17 -> 16
9999 mem: storing 1272 in location 1323
9999 mem: incrementing refcount of 1272: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1276
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1322 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1277
9998 run: its type is "character"
9999 mem: location 1277 is 107
9999 mem: storing 107 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 107
9999 mem: storing 0 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1320 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1276
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 11 -> 10
9999 mem: storing 1280 in location 1322
9999 mem: incrementing refcount of 1280: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 13 -> 12
9999 mem: storing 1276 in location 1323
9999 mem: incrementing refcount of 1276: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1325
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1280
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1322 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "character"
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 10
9999 mem: storing 1 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1324 is 3
9999 mem: storing 4 in location 1324
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1325
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1280
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 11 -> 10
9999 mem: storing 1284 in location 1322
9999 mem: incrementing refcount of 1284: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1276
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 13 -> 12
9999 mem: storing 1280 in location 1323
9999 mem: incrementing refcount of 1280: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1284
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 4
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 4
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1322 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1285
9998 run: its type is "character"
9999 mem: location 1285 is 108
9999 mem: storing 108 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 108
9999 mem: storing 0 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1320 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1284
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 11 -> 10
9999 mem: storing 1288 in location 1322
9999 mem: incrementing refcount of 1288: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1280
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 13 -> 12
9999 mem: storing 1284 in location 1323
9999 mem: incrementing refcount of 1284: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1325
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1288
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 4
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 4
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1322 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9998 run: its type is "character"
9999 mem: location 1289 is 10
9999 mem: storing 10 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 10
9999 mem: storing 1 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 4
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1324 is 4
9999 mem: storing 5 in location 1324
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1325
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1288
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 11 -> 10
9999 mem: storing 1292 in location 1322
9999 mem: incrementing refcount of 1292: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1284
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 13 -> 12
9999 mem: storing 1288 in location 1323
9999 mem: incrementing refcount of 1288: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1292
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 5
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 5
9999 mem: location 1326 is 5
9999 mem: storing 1 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1327 is 0
9999 mem: storing 1 in location 1331
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1288
9999 mem: decrementing refcount of 1256: 20 -> 19
9999 mem: storing 1288 in location 1328
9999 mem: incrementing refcount of 1288: 12 -> 13
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1256
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1328 is 1288
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1288 in location 1175
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1322 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1293
9998 run: its type is "character"
9999 mem: location 1293 is 109
9999 mem: storing 109 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 109
9999 mem: storing 0 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1320 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1292
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 11 -> 10
9999 mem: storing 1296 in location 1322
9999 mem: incrementing refcount of 1296: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1288
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 14 -> 13
9999 mem: storing 1292 in location 1323
9999 mem: incrementing refcount of 1292: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1325
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1296
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 5
9999 mem: location 1321 is 6
9999 mem: storing 0 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 5
9999 mem: location 1326 is 5
9999 mem: storing 1 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 1
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1331
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1322 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1322 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "character"
9999 mem: location 1297 is 10
9999 mem: storing 10 in location 1332
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1332 is 10
9999 mem: storing 1 in location 1333
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 5
9999 mem: location 1326 is 5
9999 mem: storing 1 in location 1330
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 1
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1334
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 46
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1324 is 5
9999 mem: storing 6 in location 1324
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1319 is 0
9999 mem: storing 0 in location 1325
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1322 is 1296
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1218
9999 mem: incrementing refcount of 1296: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1296
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1298 is 1300
9999 mem: storing 1300 in location 1219
9999 mem: incrementing refcount of 1300: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1300
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1300
9999 mem: decrementing refcount of 1296: 11 -> 10
9999 mem: storing 1300 in location 1322
9999 mem: incrementing refcount of 1300: 7 -> 8
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1323 is 1292
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 13 -> 12
9999 mem: storing 1296 in location 1323
9999 mem: incrementing refcount of 1296: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1322 is 1300
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1324 is 6
9999 mem: location 1321 is 6
9999 mem: storing 1 in location 1329
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 6
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1330
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1325 is 0
9999 mem: location 1327 is 0
9999 mem: storing 1 in location 1336
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1330 is 0
9999 mem: location 1336 is 1
9999 mem: storing 0 in location 1337
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1324 is 6
9999 mem: location 1326 is 5
9999 mem: storing 0 in location 1338
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1339
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1316 is 1171
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 13 -> 12
9999 mem: storing 1171 in location 1539
9999 mem: incrementing refcount of 1171: 12 -> 13
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1552
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1553
9999 mem: incrementing refcount of 1256: 19 -> 20
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1554
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1539 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1555
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1552 is 0
9998 run: jumping to instruction 41
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1514
9999 mem: storing 1514 in location 1557
9999 mem: incrementing refcount of 1514: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1549 is 1
9999 mem: location 1550 is 0
9999 mem: location 1551 is 1256
9999 mem: location 1554 is 5
9999 mem: location 1555 is 0
9999 mem: location 1553 is 1256
9999 mem: location 1552 is 0
9999 mem: location 1557 is 1514
9999 mem: skipping refcount at 1514
9999 mem: location 1557 is 1514
9999 mem: skipping refcount at 1514
9999 mem: storing 1 in location 1515
9999 mem: storing 1 in location 1516
9999 mem: storing 0 in location 1517
9999 mem: storing 1256 in location 1518
9999 mem: storing 5 in location 1519
9999 mem: storing 0 in location 1520
9999 mem: storing 1256 in location 1521
9999 mem: storing 0 in location 1522
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1539 is 1171
9999 mem: location 1557 is 1514
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1207
9999 mem: incrementing refcount of 1171: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1514 in location 1208
9999 mem: incrementing refcount of 1514: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1182
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1182 is 1511
9999 mem: storing 1511 in location 1209
9999 mem: incrementing refcount of 1511: 2 -> 3
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1208 is 1514
9999 mem: location 1209 is 1511
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1514 in location 1187
9999 mem: incrementing refcount of 1514: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1511 in location 1188
9999 mem: incrementing refcount of 1511: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1561
9999 mem: storing 1561 in location 1189
9999 mem: incrementing refcount of 1561: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1187 is 1514
9999 mem: location 1188 is 1511
9999 mem: location 1189 is 1561
9999 mem: skipping refcount at 1561
9999 mem: location 1189 is 1561
9999 mem: skipping refcount at 1561
9999 mem: storing 1514 in location 1562
9999 mem: storing 1511 in location 1563
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1561
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1561
9999 mem: decrementing refcount of 1511: 4 -> 3
9999 mem: storing 1561 in location 1209
9999 mem: incrementing refcount of 1561: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1511
9999 mem: location 1183 is 0
9999 mem: location 1209 is 1561
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1182
9999 mem: storing 1561 in location 1182
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1210
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1210
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1210 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1183
9999 mem: storing 0 in location 1183
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1207 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 14 -> 13
9999 mem: storing 1171 in location 1539
9999 mem: incrementing refcount of 1171: 13 -> 14
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1539 is 1171
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1400
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1401
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1397 is 1008
9999 mem: location 1400 is 5
9999 mem: location 1401 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 100 -> 101
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 101 -> 100
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 100 -> 101
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1398 is 1391
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1413
9999 mem: incrementing refcount of 1391: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1413 is 1391
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1392
9998 run: its type is "number"
9999 mem: location 1392 is 2
9999 mem: storing 2 in location 1414
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1393
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1393 is 1377
9999 mem: storing 1377 in location 1415
9999 mem: incrementing refcount of 1377: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9999 mem: storing 3 in location 1416
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1414 is 2
9999 mem: location 1416 is 3
9999 mem: storing 0 in location 1417
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9998 run: base address is 1378
9999 mem: location 1414 is 2
9998 run: address to copy is 1387
9998 run: its type is event
9999 mem: location 1387 is 1
9999 mem: location 1388 is 65516
9999 mem: location 1389 is 0
9999 mem: location 1390 is 0
9999 mem: storing 1 in location 1419
9999 mem: storing 65516 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1414 is 2
9999 mem: storing 3 in location 1414
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1377
9999 mem: location 1414 is 3
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy to is 1392
9999 mem: storing 3 in location 1392
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1419 is 1
9999 mem: location 1420 is 65516
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: location 1413 is 1391
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1391
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1402
9999 mem: storing 65516 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: decrementing refcount of 1391: 4 -> 3
9999 mem: storing 1391 in location 1398
9999 mem: incrementing refcount of 1391: 3 -> 4
9999 mem: storing 1 in location 1406
9999 mem: storing 0 in location 1407
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1402 is 1
9999 mem: location 1403 is 65516
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1408
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 mem: location 1402 is 1
9999 mem: location 1403 is 65516
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1424
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1427
9999 mem: incrementing refcount of 1008: 101 -> 102
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 14 -> 15
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1429
9999 mem: storing 65516 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1433
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1428 is 1171
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1219
 106 run: return {width: "number"}
9999 mem: location 1219 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1434
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 106 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 6
9999 mem: storing 6 in location 1435
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1436
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1437
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1288
9999 mem: storing 1288 in location 1438
9999 mem: incrementing refcount of 1288: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1439
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1440
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1439 is 5
9999 mem: storing 5 in location 1441
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1442
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1429 is 1
9999 mem: location 1430 is 65516
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 0 in location 1443
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1443 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1429 is 1
9999 mem: location 1430 is 65516
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 1430 in location 1487
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1487 is 1430
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65516
9999 mem: storing 0 in location 1460
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 490
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65516
9999 mem: storing 0 in location 1471
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jumping to instruction 528
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65516
9999 mem: storing 0 in location 1476
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 563
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65516
9999 mem: storing 0 in location 1477
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 0
9998 run: jumping to instruction 598
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65516
9999 mem: storing 1 in location 1488
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1462
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1463
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1464
9999 mem: incrementing refcount of 1256: 20 -> 21
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1428 is 1171
9999 mem: location 1435 is 6
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1355
9999 mem: incrementing refcount of 1171: 15 -> 16
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1356
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1357
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1358
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1288
9999 mem: storing 1288 in location 1359
9999 mem: incrementing refcount of 1288: 14 -> 15
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1360
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1361
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1356 is 6
9999 mem: storing 5 in location 1362
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: "number"}, {last-line: "number"}
9999 mem: location 1357 is 5
9999 mem: location 1362 is 5
9999 mem: storing 1 in location 1363
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 1
9998 run: jumping to instruction 45
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"scroll down": "literal-string"}
  10 app: scroll down 
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1256
9999 mem: storing 1256 in location 1374
9999 mem: incrementing refcount of 1256: 21 -> 22
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1360
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1361
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1361 is 3
9999 mem: location 1360 is 0
9999 mem: storing 3 in location 1364
 106 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1256
9999 mem: storing 1256 in location 1375
9999 mem: incrementing refcount of 1256: 22 -> 23
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- before-start-of-next-line {top-of-screen: ("address" "shared" "duplex-list" "character")}, {max: "number"}
9999 mem: location 1374 is 1256
9999 mem: location 1364 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1197
9999 mem: incrementing refcount of 1256: 23 -> 24
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1198
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1199
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1256
9999 mem: storing 1256 in location 1200
9999 mem: incrementing refcount of 1256: 24 -> 25
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1200 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1200 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1257
9998 run: its type is "character"
9999 mem: location 1257 is 10
9999 mem: storing 10 in location 1201
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1201 is 10
9999 mem: storing 1 in location 1202
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 1
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1256
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1218
9999 mem: incrementing refcount of 1256: 25 -> 26
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1256
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1218 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1219
9999 mem: incrementing refcount of 1260: 18 -> 19
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 26 -> 25
9999 mem: storing 1260 in location 1200
9999 mem: incrementing refcount of 1260: 19 -> 20
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1199 is 0
9999 mem: storing 1 in location 1199
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1200 is 1260
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1198 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1200 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1200 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1201
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1201 is 105
9999 mem: storing 0 in location 1202
9990 schedule: before-start-of-next-line/move-to-next-line/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1260
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1218
9999 mem: incrementing refcount of 1260: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1260
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1218 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1219
9999 mem: incrementing refcount of 1264: 18 -> 19
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 21 -> 20
9999 mem: storing 1264 in location 1200
9999 mem: incrementing refcount of 1264: 19 -> 20
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1199 is 1
9999 mem: storing 2 in location 1199
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1200 is 1264
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1199 is 2
9999 mem: location 1198 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1200 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1200 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1201
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1201 is 10
9999 mem: storing 1 in location 1202
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 1
9998 run: jumping to instruction 23
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1200 is 1264
9998 run: jumping to instruction 26
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1200 is 1264
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1256: 25 -> 24
9999 mem: storing 1264 in location 1374
9999 mem: incrementing refcount of 1264: 20 -> 21
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1374 is 1264
9999 mem: location 1355 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1264 in location 1173
 106 run: {no-movement?: "boolean"} <- equal {old-top: ("address" "shared" "duplex-list" "character")}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1375 is 1256
9999 mem: location 1374 is 1264
9999 mem: storing 0 in location 1376
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1368
 106 run: jump-unless {no-movement?: "boolean"}, {1: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 60
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1368
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1355 is 1171
9999 mem: location 1368 is 1
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9998 run: result 1 is 1
9999 mem: decrementing refcount of 1171: 16 -> 15
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 15 -> 16
9999 mem: storing 1 in location 1433
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1465
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1264
9999 mem: storing 1264 in location 1466
9999 mem: incrementing refcount of 1264: 21 -> 22
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1439
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1440
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1465 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1182
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1182 is 1561
9999 mem: storing 1561 in location 1447
9999 mem: incrementing refcount of 1561: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1447 is 1561
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1447 is 1561
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1561 in location 1218
9999 mem: incrementing refcount of 1561: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1218 is 1561
9999 mem: skipping refcount at 1561
9999 mem: location 1562 is 1514
9999 mem: location 1563 is 1511
9999 mem: location 1218 is 1561
9999 mem: skipping refcount at 1561
9998 run: address to copy is 1562
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1562 is 1514
9999 mem: storing 1514 in location 1219
9999 mem: incrementing refcount of 1514: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1219 is 1514
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1514
9999 mem: storing 1514 in location 1446
9999 mem: incrementing refcount of 1514: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1446 is 1514
9999 mem: skipping refcount at 1514
9999 mem: location 1515 is 1
9999 mem: location 1516 is 1
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1256
9999 mem: location 1519 is 5
9999 mem: location 1520 is 0
9999 mem: location 1521 is 1256
9999 mem: location 1522 is 0
9999 mem: location 1523 is 0
9999 mem: location 1524 is 0
9999 mem: location 1525 is 0
9999 mem: location 1446 is 1514
9999 mem: skipping refcount at 1514
9999 mem: storing 1516 in location 1453
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1453 is 1516
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1453 is 1516
9999 mem: location 1516 is 1
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1256
9999 mem: location 1519 is 5
9999 mem: location 1520 is 0
9999 mem: location 1521 is 1256
9999 mem: location 1522 is 0
9999 mem: location 1453 is 1516
9998 run: address to copy is 1522
9998 run: its type is "number"
9999 mem: location 1522 is 0
9999 mem: storing 0 in location 1467
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1465 is 4
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1468
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 625
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1564
9999 mem: decrementing refcount of 1514: 5 -> 4
9999 mem: storing 1564 in location 1446
9999 mem: incrementing refcount of 1564: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1462 is 5
9999 mem: location 1463 is 0
9999 mem: location 1464 is 1256
9999 mem: location 1439 is 5
9999 mem: location 1440 is 0
9999 mem: location 1466 is 1264
9999 mem: location 1465 is 4
9999 mem: location 1446 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1446 is 1564
9999 mem: skipping refcount at 1564
9999 mem: storing 1 in location 1565
9999 mem: storing 5 in location 1566
9999 mem: storing 0 in location 1567
9999 mem: storing 1256 in location 1568
9999 mem: storing 5 in location 1569
9999 mem: storing 0 in location 1570
9999 mem: storing 1264 in location 1571
9999 mem: storing 4 in location 1572
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1428 is 1171
9999 mem: location 1446 is 1564
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1207
9999 mem: incrementing refcount of 1171: 16 -> 17
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1564 in location 1208
9999 mem: incrementing refcount of 1564: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1182
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1182 is 1561
9999 mem: storing 1561 in location 1209
9999 mem: incrementing refcount of 1561: 4 -> 5
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1208 is 1564
9999 mem: location 1209 is 1561
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1564 in location 1187
9999 mem: incrementing refcount of 1564: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1561 in location 1188
9999 mem: incrementing refcount of 1561: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1576
9999 mem: storing 1576 in location 1189
9999 mem: incrementing refcount of 1576: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1187 is 1564
9999 mem: location 1188 is 1561
9999 mem: location 1189 is 1576
9999 mem: skipping refcount at 1576
9999 mem: location 1189 is 1576
9999 mem: skipping refcount at 1576
9999 mem: storing 1564 in location 1577
9999 mem: storing 1561 in location 1578
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1576
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1576
9999 mem: decrementing refcount of 1561: 6 -> 5
9999 mem: storing 1576 in location 1209
9999 mem: incrementing refcount of 1576: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1561
9999 mem: location 1183 is 0
9999 mem: location 1209 is 1576
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1182
9999 mem: storing 1576 in location 1182
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1210
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1210
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1210 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1183
9999 mem: storing 0 in location 1183
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1207 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 17 -> 16
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 16 -> 17
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1427 is 1008
9999 mem: location 1428 is 1171
9999 mem: location 1433 is 1
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1171
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 104 -> 103
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 103 -> 104
9999 mem: decrementing refcount of 1171: 17 -> 16
9999 mem: storing 1171 in location 1399
9999 mem: incrementing refcount of 1171: 16 -> 17
9999 mem: storing 1 in location 1409
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1139
9999 mem: incrementing refcount of 1008: 104 -> 105
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1140
9999 mem: incrementing refcount of 1171: 17 -> 18
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1141
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1142
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1139 is 1008
9999 mem: location 1140 is 1171
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 105 -> 106
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1316
9999 mem: incrementing refcount of 1171: 18 -> 19
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1316 is 1171
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1317
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1315 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 106 -> 107
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 107 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1318
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1319
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1264
9999 mem: storing 1264 in location 1320
9999 mem: incrementing refcount of 1264: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1264
9999 mem: storing 1264 in location 1321
9999 mem: incrementing refcount of 1264: 23 -> 24
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 25 -> 24
9999 mem: storing 1268 in location 1320
9999 mem: incrementing refcount of 1268: 17 -> 18
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1322
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1325
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1326
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1288
9999 mem: storing 1288 in location 1327
9999 mem: incrementing refcount of 1288: 15 -> 16
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 1
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 107 -> 108
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 107 -> 108
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1268
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1320 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1269
9998 run: its type is "character"
9999 mem: location 1269 is 106
9999 mem: storing 106 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 106
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1579
9999 mem: storing 10 in location 1580
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 106
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 106
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 106
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 106
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 108 -> 109
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 106
  90 print-character: 106 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 106
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 0
9999 mem: storing 10 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 42 -> 43
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 106
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 106
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1036
9999 mem: location 1374 is 1036
9999 mem: storing 106 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 19 -> 18
9999 mem: storing 1272 in location 1320
9999 mem: incrementing refcount of 1272: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1218
9999 mem: incrementing refcount of 1264: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1218 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1219
9999 mem: incrementing refcount of 1268: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 25 -> 24
9999 mem: storing 1268 in location 1321
9999 mem: incrementing refcount of 1268: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1272
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1320 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1273
9998 run: its type is "character"
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 109 -> 110
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 110 -> 111
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1
9999 mem: storing 11 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 43 -> 44
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1038
9999 mem: location 1374 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 110 -> 111
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 111 -> 112
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 2
9999 mem: storing 12 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 44 -> 45
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1040
9999 mem: location 1374 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 112 -> 111
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 111 -> 112
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 112 -> 113
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 3
9999 mem: storing 13 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 45 -> 46
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1042
9999 mem: location 1374 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 112 -> 113
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 1
9999 mem: storing 2 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 2
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 2
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 114 -> 113
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 113 -> 114
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 15 -> 14
9999 mem: storing 1276 in location 1320
9999 mem: incrementing refcount of 1276: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1218
9999 mem: incrementing refcount of 1268: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1218 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1219
9999 mem: incrementing refcount of 1272: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 21 -> 20
9999 mem: storing 1272 in location 1321
9999 mem: incrementing refcount of 1272: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1276
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1320 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1277
9998 run: its type is "character"
9999 mem: location 1277 is 107
9999 mem: storing 107 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 107
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 107
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 107
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 107
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 107
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 107
  90 print-character: 107 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 107
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 0
9999 mem: storing 20 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 46 -> 47
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 107
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 107
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1056
9999 mem: location 1374 is 1056
9999 mem: storing 107 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1276
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 15 -> 14
9999 mem: storing 1280 in location 1320
9999 mem: incrementing refcount of 1280: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1218
9999 mem: incrementing refcount of 1272: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1218 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1219
9999 mem: incrementing refcount of 1276: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 17 -> 16
9999 mem: storing 1276 in location 1321
9999 mem: incrementing refcount of 1276: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1280
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1320 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1281
9998 run: its type is "character"
9999 mem: location 1281 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 116 -> 117
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1
9999 mem: storing 21 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 47 -> 48
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1058
9999 mem: location 1374 is 1058
9999 mem: storing 32 in location 1058
9999 mem: storing 7 in location 1059
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 117 -> 116
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 117 -> 118
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 2
9999 mem: storing 22 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 48 -> 49
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1060
9999 mem: location 1374 is 1060
9999 mem: storing 32 in location 1060
9999 mem: storing 7 in location 1061
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 118 -> 117
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 118 -> 119
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 3
9999 mem: storing 23 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 49 -> 50
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1062
9999 mem: location 1374 is 1062
9999 mem: storing 32 in location 1062
9999 mem: storing 7 in location 1063
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 119 -> 118
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 2
9999 mem: storing 3 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 3
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 3
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 119 -> 120
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1280
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 15 -> 14
9999 mem: storing 1284 in location 1320
9999 mem: incrementing refcount of 1284: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1276
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1276 in location 1218
9999 mem: incrementing refcount of 1276: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1276
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9999 mem: location 1277 is 107
9999 mem: location 1278 is 1280
9999 mem: location 1279 is 1272
9999 mem: location 1218 is 1276
9999 mem: skipping refcount at 1276
9998 run: address to copy is 1278
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1278 is 1280
9999 mem: storing 1280 in location 1219
9999 mem: incrementing refcount of 1280: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1280
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1280
9999 mem: decrementing refcount of 1276: 17 -> 16
9999 mem: storing 1280 in location 1321
9999 mem: incrementing refcount of 1280: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1284
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1320 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1285
9998 run: its type is "character"
9999 mem: location 1285 is 108
9999 mem: storing 108 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 108
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 108
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 108
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 108
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 108
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 108 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 108
  90 print-character: 108 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 108
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 0
9999 mem: storing 30 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 108
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 108
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1076
9999 mem: location 1374 is 1076
9999 mem: storing 108 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1284
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 15 -> 14
9999 mem: storing 1288 in location 1320
9999 mem: incrementing refcount of 1288: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1280
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1280 in location 1218
9999 mem: incrementing refcount of 1280: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1280
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9999 mem: location 1281 is 10
9999 mem: location 1282 is 1284
9999 mem: location 1283 is 1276
9999 mem: location 1218 is 1280
9999 mem: skipping refcount at 1280
9998 run: address to copy is 1282
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1282 is 1284
9999 mem: storing 1284 in location 1219
9999 mem: incrementing refcount of 1284: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1284
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1284
9999 mem: decrementing refcount of 1280: 17 -> 16
9999 mem: storing 1284 in location 1321
9999 mem: incrementing refcount of 1284: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1288
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1320 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9998 run: its type is "character"
9999 mem: location 1289 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 122 -> 123
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1
9999 mem: storing 31 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 51 -> 52
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1078
9999 mem: location 1374 is 1078
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 123 -> 124
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 2
9999 mem: storing 32 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 52 -> 53
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1080
9999 mem: location 1374 is 1080
9999 mem: storing 32 in location 1080
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 124 -> 125
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 3
9999 mem: storing 33 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 53 -> 54
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1082
9999 mem: location 1374 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 3
9999 mem: storing 4 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 4
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 4
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 125 -> 126
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1288
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 19 -> 18
9999 mem: storing 1292 in location 1320
9999 mem: incrementing refcount of 1292: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1284
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1284 in location 1218
9999 mem: incrementing refcount of 1284: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1284
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9999 mem: location 1285 is 108
9999 mem: location 1286 is 1288
9999 mem: location 1287 is 1280
9999 mem: location 1218 is 1284
9999 mem: skipping refcount at 1284
9998 run: address to copy is 1286
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1286 is 1288
9999 mem: storing 1288 in location 1219
9999 mem: incrementing refcount of 1288: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1288
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1288
9999 mem: decrementing refcount of 1284: 17 -> 16
9999 mem: storing 1288 in location 1321
9999 mem: incrementing refcount of 1288: 19 -> 20
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1292
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1320 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1293
9998 run: its type is "character"
9999 mem: location 1293 is 109
9999 mem: storing 109 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 109
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 109 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 109
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 109
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 109
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 109
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 126 -> 127
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 109 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 109
  90 print-character: 109 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 109
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 0
9999 mem: storing 40 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 109
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 40
9999 mem: storing 1096 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 109
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1096
9999 mem: location 1374 is 1096
9999 mem: storing 109 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1292
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 15 -> 14
9999 mem: storing 1296 in location 1320
9999 mem: incrementing refcount of 1296: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1288
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1218
9999 mem: incrementing refcount of 1288: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1288
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 10
9999 mem: location 1290 is 1292
9999 mem: location 1291 is 1284
9999 mem: location 1218 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1290 is 1292
9999 mem: storing 1292 in location 1219
9999 mem: incrementing refcount of 1292: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1292
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1292
9999 mem: decrementing refcount of 1288: 21 -> 20
9999 mem: storing 1292 in location 1321
9999 mem: incrementing refcount of 1292: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1296
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1320 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1297
9998 run: its type is "character"
9999 mem: location 1297 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 128 -> 129
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 1
9999 mem: storing 41 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 55 -> 56
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 41
9999 mem: storing 1098 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1098
9999 mem: location 1374 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 129 -> 128
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 129 -> 130
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 2
9999 mem: storing 42 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 56 -> 57
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 42
9999 mem: storing 1100 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1100
9999 mem: location 1374 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 130 -> 129
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 130 -> 131
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 3
9999 mem: storing 43 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 57 -> 58
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 43
9999 mem: storing 1102 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1102
9999 mem: location 1374 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 131 -> 130
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 4
9999 mem: storing 5 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 5
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 132 -> 131
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 131 -> 132
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1296
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1218
9999 mem: incrementing refcount of 1296: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1296
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1298 is 1300
9999 mem: storing 1300 in location 1219
9999 mem: incrementing refcount of 1300: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1300
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1300
9999 mem: decrementing refcount of 1296: 15 -> 14
9999 mem: storing 1300 in location 1320
9999 mem: incrementing refcount of 1300: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1292
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/render/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1292 in location 1218
9999 mem: incrementing refcount of 1292: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1292
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9999 mem: location 1293 is 109
9999 mem: location 1294 is 1296
9999 mem: location 1295 is 1288
9999 mem: location 1218 is 1292
9999 mem: skipping refcount at 1292
9998 run: address to copy is 1294
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1294 is 1296
9999 mem: storing 1296 in location 1219
9999 mem: incrementing refcount of 1296: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1296
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1296
9999 mem: decrementing refcount of 1292: 17 -> 16
9999 mem: storing 1296 in location 1321
9999 mem: incrementing refcount of 1296: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1300
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 5
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1330
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1296
9999 mem: decrementing refcount of 1288: 20 -> 19
9999 mem: storing 1296 in location 1327
9999 mem: incrementing refcount of 1296: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 1304
9999 mem: location 1303 is 1296
9999 mem: location 1320 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1301
9998 run: its type is "character"
9999 mem: location 1301 is 110
9999 mem: storing 110 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 110
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 110 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 110
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 110
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 110
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 110
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 110 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 110
  90 print-character: 110 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 110
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 0
9999 mem: storing 50 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 110
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 50
9999 mem: storing 1116 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 110
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1116
9999 mem: location 1374 is 1116
9999 mem: storing 110 in location 1116
9999 mem: storing 7 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1300
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1218
9999 mem: incrementing refcount of 1300: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1300
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 1304
9999 mem: location 1303 is 1296
9999 mem: location 1218 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1302 is 1304
9999 mem: storing 1304 in location 1219
9999 mem: incrementing refcount of 1304: 4 -> 5
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1304
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1304
9999 mem: decrementing refcount of 1300: 11 -> 10
9999 mem: storing 1304 in location 1320
9999 mem: incrementing refcount of 1304: 5 -> 6
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1296
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1296 in location 1218
9999 mem: incrementing refcount of 1296: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1296
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9999 mem: location 1297 is 10
9999 mem: location 1298 is 1300
9999 mem: location 1299 is 1292
9999 mem: location 1218 is 1296
9999 mem: skipping refcount at 1296
9998 run: address to copy is 1298
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1298 is 1300
9999 mem: storing 1300 in location 1219
9999 mem: incrementing refcount of 1300: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1300
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1300
9999 mem: decrementing refcount of 1296: 18 -> 17
9999 mem: storing 1300 in location 1321
9999 mem: incrementing refcount of 1300: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1304
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 5
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 1308
9999 mem: location 1307 is 1300
9999 mem: location 1320 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy is 1305
9998 run: its type is "character"
9999 mem: location 1305 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1582
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1583
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1582 is 7
9999 mem: storing 1 in location 1584
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1585
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1585 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1586
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1586 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1584 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1583 is 10
9999 mem: storing 0 in location 1588
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1588 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1582 is 7
9999 mem: storing 0 in location 1589
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1589 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1582 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 5
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1333
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 134 -> 135
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 1
9999 mem: storing 51 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 59 -> 60
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 51
9999 mem: storing 1118 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1118
9999 mem: location 1374 is 1118
9999 mem: storing 32 in location 1118
9999 mem: storing 7 in location 1119
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 135 -> 134
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 135 -> 136
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 2
9999 mem: storing 52 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 60 -> 61
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 52
9999 mem: storing 1120 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1120
9999 mem: location 1374 is 1120
9999 mem: storing 32 in location 1120
9999 mem: storing 7 in location 1121
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 136 -> 135
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 136 -> 137
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 3
9999 mem: storing 53 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 61 -> 62
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 53
9999 mem: storing 1122 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1122
9999 mem: location 1374 is 1122
9999 mem: storing 32 in location 1122
9999 mem: storing 7 in location 1123
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 137 -> 136
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 5
9999 mem: storing 6 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 6
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 138 -> 137
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 137 -> 138
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1304
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1304 in location 1218
9999 mem: incrementing refcount of 1304: 6 -> 7
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1304
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1304
9999 mem: skipping refcount at 1304
9999 mem: location 1305 is 10
9999 mem: location 1306 is 1308
9999 mem: location 1307 is 1300
9999 mem: location 1218 is 1304
9999 mem: skipping refcount at 1304
9998 run: address to copy is 1306
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1306 is 1308
9999 mem: storing 1308 in location 1219
9999 mem: incrementing refcount of 1308: 3 -> 4
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1308
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1308
9999 mem: decrementing refcount of 1304: 7 -> 6
9999 mem: storing 1308 in location 1320
9999 mem: incrementing refcount of 1308: 4 -> 5
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1300
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1300 in location 1218
9999 mem: incrementing refcount of 1300: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1218 is 1300
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1300
9999 mem: skipping refcount at 1300
9999 mem: location 1301 is 110
9999 mem: location 1302 is 1304
9999 mem: location 1303 is 1296
9999 mem: location 1218 is 1300
9999 mem: skipping refcount at 1300
9998 run: address to copy is 1302
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1302 is 1304
9999 mem: storing 1304 in location 1219
9999 mem: incrementing refcount of 1304: 6 -> 7
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1219 is 1304
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1304
9999 mem: decrementing refcount of 1300: 13 -> 12
9999 mem: storing 1304 in location 1321
9999 mem: incrementing refcount of 1304: 7 -> 8
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1308
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1318 is 6
9999 mem: storing 1 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jumping to instruction 68
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1300
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1320 is 1308
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1174
9999 mem: storing 1308 in location 1174
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1336
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1329 is 0
9999 mem: location 1336 is 1
9999 mem: storing 0 in location 1337
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1338
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1339
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 80
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1323 is 6
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1178
9999 mem: storing 6 in location 1178
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1325 is 5
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1179
9999 mem: storing 5 in location 1179
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1326 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1288
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1327 is 1296
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1296 in location 1175
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 1171
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 6
9998 run: result 1 is 0
9999 mem: storing 6 in location 1143
9999 mem: storing 0 in location 1144
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1139 is 1008
9999 mem: location 1144 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 138 -> 139
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1198
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 0
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 139 -> 140
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 0
9999 mem: storing 1 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 141 -> 140
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 140 -> 141
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 141 -> 142
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 142 -> 143
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 142 -> 143
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
9990 schedule: clear-line-delimited/editor-render/editor-event-loop/run_1001/scenario_editor-can-scroll-up-wrapped-lines
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1143 is 6
9999 mem: storing 7 in location 1143
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1139 is 1008
9999 mem: location 1143 is 7
9999 mem: location 1141 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1413
9999 mem: incrementing refcount of 1008: 143 -> 144
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1414
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1415
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1416
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1417
9999 mem: storing 1 in location 1418
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1419
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1421
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1414 is 7
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 144 -> 145
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 7
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 1008 in location 1413
9999 mem: incrementing refcount of 1008: 144 -> 145
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 0
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 0
9999 mem: storing 1 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 1
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 146 -> 147
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 1
9999 mem: storing 2 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 2
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 147 -> 148
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 2
9999 mem: storing 3 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 3
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 148 -> 149
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 3
9999 mem: storing 4 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 4
9999 mem: location 1416 is 3
9999 mem: storing 0 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1413 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1143 is 7
9999 mem: storing 8 in location 1143
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1139 is 1008
9999 mem: location 1143 is 8
9999 mem: location 1141 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 149 -> 150
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 8
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 150 -> 151
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 8
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 150 -> 151
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 151 -> 152
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 0
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 152 -> 153
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 152 -> 153
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 0
9999 mem: storing 1 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 153 -> 154
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 153 -> 154
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 154 -> 155
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 154 -> 155
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 155 -> 156
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 156 -> 155
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 155 -> 156
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 8
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1526
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1529
9999 mem: incrementing refcount of 1008: 156 -> 157
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1530
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1531
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1532
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1530 is 8
9999 mem: storing 9 in location 1530
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1529 is 1008
9999 mem: location 1530 is 9
9999 mem: location 1531 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 157 -> 158
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1188
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 9
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1529
9999 mem: incrementing refcount of 1008: 157 -> 158
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1529 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1218
9999 mem: incrementing refcount of 1008: 158 -> 159
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1218 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1219
 108 run: return {height: "number"}
9999 mem: location 1219 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 6
9999 mem: storing 6 in location 1533
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1530 is 9
9999 mem: location 1533 is 6
9999 mem: storing 1 in location 1534
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1534 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1529 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1139 is 1008
9999 mem: location 1140 is 1171
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 159 -> 158
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 158 -> 159
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1400
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1401
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1397 is 1008
9999 mem: location 1400 is 5
9999 mem: location 1401 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 159 -> 160
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 160 -> 159
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 159 -> 160
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1398 is 1391
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1391 in location 1413
9999 mem: incrementing refcount of 1391: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1413 is 1391
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 3
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1392
9998 run: its type is "number"
9999 mem: location 1392 is 3
9999 mem: storing 3 in location 1414
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9999 mem: location 1392 is 3
9999 mem: location 1393 is 1377
9999 mem: location 1413 is 1391
9999 mem: skipping refcount at 1391
9998 run: address to copy is 1393
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1393 is 1377
9999 mem: storing 1377 in location 1415
9999 mem: incrementing refcount of 1377: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1415 is 1377
9999 mem: skipping refcount at 1377
9999 mem: storing 3 in location 1416
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1414 is 3
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1417
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1215
9999 mem: storing 1215 in location 1418
9999 mem: incrementing refcount of 1215: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1418 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1413 is 1391
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1391
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: decrementing refcount of 1391: 5 -> 4
9999 mem: storing 1391 in location 1398
9999 mem: incrementing refcount of 1391: 4 -> 5
9999 mem: storing 1 in location 1406
9999 mem: storing 1 in location 1407
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1397 is 1008
9999 mem: location 1398 is 1391
9999 mem: location 1399 is 1171
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .j         .\n    .k         .\n    .l         .\n    .m         .\n    .n         .\n  ": "literal-string"}
 102 run: assume-console {"\n    press page-up\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {page-up: ()}
9992 load: after rewriting: press {page-up: ()}
9999 mem: storing 'press' event starting at 1593
9999 mem: storing console in 1597
9999 mem: storing console data in 1599
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1597
9999 mem: location 2 is 1171
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1394
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 160 -> 161
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1398
9999 mem: incrementing refcount of 1597: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1399
9999 mem: incrementing refcount of 1171: 19 -> 20
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1400
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1401
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1397 is 1008
9999 mem: location 1400 is 5
9999 mem: location 1401 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 161 -> 162
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 162 -> 161
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 161 -> 162
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1398 is 1597
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1413
9999 mem: incrementing refcount of 1597: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1413 is 1597
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 0
9999 mem: location 1599 is 1591
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1598
9998 run: its type is "number"
9999 mem: location 1598 is 0
9999 mem: storing 0 in location 1414
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 0
9999 mem: location 1599 is 1591
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1599
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1599 is 1591
9999 mem: storing 1591 in location 1415
9999 mem: incrementing refcount of 1591: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1415 is 1591
9999 mem: skipping refcount at 1591
9999 mem: storing 1 in location 1416
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1414 is 0
9999 mem: location 1416 is 1
9999 mem: storing 0 in location 1417
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1415 is 1591
9999 mem: skipping refcount at 1591
9998 run: base address is 1592
9999 mem: location 1414 is 0
9998 run: address to copy is 1593
9998 run: its type is event
9999 mem: location 1593 is 1
9999 mem: location 1594 is 65519
9999 mem: location 1595 is 0
9999 mem: location 1596 is 0
9999 mem: storing 1 in location 1419
9999 mem: storing 65519 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1414 is 0
9999 mem: storing 1 in location 1414
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 0
9999 mem: location 1599 is 1591
9999 mem: location 1414 is 1
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy to is 1598
9999 mem: storing 1 in location 1598
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1419 is 1
9999 mem: location 1420 is 65519
9999 mem: location 1421 is 0
9999 mem: location 1422 is 0
9999 mem: location 1413 is 1597
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65519, 0, 0]
9998 run: result 1 is 1597
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1402
9999 mem: storing 65519 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: decrementing refcount of 1597: 2 -> 1
9999 mem: storing 1597 in location 1398
9999 mem: incrementing refcount of 1597: 1 -> 2
9999 mem: storing 1 in location 1406
9999 mem: storing 0 in location 1407
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1402 is 1
9999 mem: location 1403 is 65519
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1408
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 mem: location 1402 is 1
9999 mem: location 1403 is 65519
9999 mem: location 1404 is 0
9999 mem: location 1405 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 74
9999 mem: allocating size 76
9999 abandon: picking up space from free-list of size 76
9999 mem: new alloc from free list: 1424
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1427
9999 mem: incrementing refcount of 1008: 162 -> 163
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 20 -> 21
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1429
9999 mem: storing 65519 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1433
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1428 is 1171
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1600
9999 mem: storing 3 in location 1601
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1603
9999 mem: incrementing refcount of 1008: 163 -> 164
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1603 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1604
 106 run: return {width: "number"}
9999 mem: location 1604 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1434
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1427 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1603
9999 mem: incrementing refcount of 1008: 164 -> 165
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1603 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1604
 106 run: return {height: "number"}
9999 mem: location 1604 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 6
9999 mem: storing 6 in location 1435
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1436
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1437
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1296
9999 mem: storing 1296 in location 1438
9999 mem: incrementing refcount of 1296: 17 -> 18
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1439
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1440
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1439 is 5
9999 mem: storing 5 in location 1441
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1442
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1429 is 1
9999 mem: location 1430 is 65519
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 0 in location 1443
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1443 is 0
9998 run: jumping to instruction 449
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1429 is 1
9999 mem: location 1430 is 65519
9999 mem: location 1431 is 0
9999 mem: location 1432 is 0
9999 mem: storing 1430 in location 1487
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1487 is 1430
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1487 is 1430
9999 mem: location 1430 is 65519
9999 mem: storing 1 in location 1460
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 1
9998 run: jump-unless fell through
 105 run: {old-top: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1264
9999 mem: storing 1264 in location 1461
9999 mem: incrementing refcount of 1264: 24 -> 25
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1462
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1463
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1264
9999 mem: storing 1264 in location 1464
9999 mem: incrementing refcount of 1264: 25 -> 26
 105 run: {editor: ("address" "shared" "editor-data")} <- page-up {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1428 is 1171
9999 mem: location 1435 is 6
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1197
9999 mem: incrementing refcount of 1171: 21 -> 22
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1198
 106 run: {max: "number"} <- subtract {screen-height: "number"}, {1: "literal", "menu-bar": ()}, {1: "literal", "overlapping-line": ()}
9999 mem: location 1198 is 6
9999 mem: storing 4 in location 1199
 106 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1200
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1264
9999 mem: storing 1264 in location 1201
9999 mem: incrementing refcount of 1264: 26 -> 27
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1200 is 0
9999 mem: location 1199 is 4
9999 mem: storing 0 in location 1202
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1201 is 1264
9999 mem: location 1197 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1605
9999 mem: storing 14 in location 1606
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1608
9999 mem: incrementing refcount of 1264: 27 -> 28
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1609
9999 mem: incrementing refcount of 1171: 22 -> 23
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1608 is 1264
9999 mem: storing 1264 in location 1610
9999 mem: incrementing refcount of 1264: 28 -> 29
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1610 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1610 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1611
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1612
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1613
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1613 is 3
9999 mem: location 1612 is 0
9999 mem: storing 3 in location 1614
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1190
9999 mem: storing 1190 in location 1615
9999 mem: incrementing refcount of 1190: 11 -> 12
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1264
9999 mem: location 1615 is 1190
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1139
9999 mem: incrementing refcount of 1264: 29 -> 30
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1140
9999 mem: incrementing refcount of 1190: 12 -> 13
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1141
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1139 is 1264
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1264
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1142 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1264
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1603
9999 mem: incrementing refcount of 1264: 30 -> 31
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1264
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1260
9999 mem: storing 1260 in location 1604
9999 mem: incrementing refcount of 1260: 20 -> 21
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1264: 31 -> 30
9999 mem: storing 1260 in location 1139
9999 mem: incrementing refcount of 1260: 21 -> 22
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1260
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1260
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1139 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 105
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 0
9999 mem: storing 1 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1260
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1603
9999 mem: incrementing refcount of 1260: 22 -> 23
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1260
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1256
9999 mem: storing 1256 in location 1604
9999 mem: incrementing refcount of 1256: 24 -> 25
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1260: 23 -> 22
9999 mem: storing 1256 in location 1139
9999 mem: incrementing refcount of 1256: 25 -> 26
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1256
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1256
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1139 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1257
9998 run: its type is "character"
9999 mem: location 1257 is 10
9999 mem: storing 10 in location 1143
9990 schedule: previous-line-length/before-previous-line/page-up/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-can-scroll-up-wrapped-lines
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 10
9999 mem: storing 1 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1141 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1
9999 mem: storing 1 in location 1616
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1616 is 1
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1616 is 1
9999 mem: location 1614 is 3
9999 mem: storing 1 in location 1618
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1618 is 1
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1618 is 1
9999 mem: storing 2 in location 1618
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1619
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 0
9999 mem: location 1618 is 2
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1264
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1603
9999 mem: incrementing refcount of 1264: 30 -> 31
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1264
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1267
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1267 is 1260
9999 mem: storing 1260 in location 1604
9999 mem: incrementing refcount of 1260: 22 -> 23
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1260
9999 mem: storing 1260 in location 1617
9999 mem: incrementing refcount of 1260: 23 -> 24
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1260
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1260
9999 mem: decrementing refcount of 1264: 31 -> 30
9999 mem: storing 1260 in location 1610
9999 mem: incrementing refcount of 1260: 24 -> 25
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 0
9999 mem: storing 1 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 1
9999 mem: location 1618 is 2
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1260
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1603
9999 mem: incrementing refcount of 1260: 25 -> 26
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1260
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1263
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1263 is 1256
9999 mem: storing 1256 in location 1604
9999 mem: incrementing refcount of 1256: 26 -> 27
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1260: 26 -> 25
9999 mem: storing 1256 in location 1617
9999 mem: incrementing refcount of 1256: 27 -> 28
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1256
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1256
9999 mem: decrementing refcount of 1260: 25 -> 24
9999 mem: storing 1256 in location 1610
9999 mem: incrementing refcount of 1256: 28 -> 29
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 1
9999 mem: storing 2 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 2
9999 mem: location 1618 is 2
9999 mem: storing 1 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1256
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1256
9999 mem: storing 1256 in location 1203
9999 mem: incrementing refcount of 1256: 29 -> 30
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1203 is 1256
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 1256
9999 mem: decrementing refcount of 1264: 30 -> 29
9999 mem: storing 1256 in location 1201
9999 mem: incrementing refcount of 1256: 30 -> 31
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1264
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1256
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1256 in location 1173
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1200 is 1
9999 mem: location 1199 is 4
9999 mem: storing 0 in location 1202
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1201 is 1256
9999 mem: location 1197 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1605
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1608
9999 mem: incrementing refcount of 1256: 31 -> 32
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1609
9999 mem: incrementing refcount of 1171: 23 -> 24
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1608 is 1256
9999 mem: storing 1256 in location 1610
9999 mem: incrementing refcount of 1256: 32 -> 33
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1610 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1610 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1257
9998 run: its type is "character"
9999 mem: location 1257 is 10
9999 mem: storing 10 in location 1611
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1612
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1613
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1613 is 3
9999 mem: location 1612 is 0
9999 mem: storing 3 in location 1614
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1190
9999 mem: storing 1190 in location 1615
9999 mem: incrementing refcount of 1190: 13 -> 14
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1256
9999 mem: location 1615 is 1190
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1139
9999 mem: incrementing refcount of 1256: 33 -> 34
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1140
9999 mem: incrementing refcount of 1190: 14 -> 15
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1141
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1139 is 1256
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1256
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1142 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1256
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1603
9999 mem: incrementing refcount of 1256: 34 -> 35
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1256
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1252
9999 mem: storing 1252 in location 1604
9999 mem: incrementing refcount of 1252: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1252
9999 mem: decrementing refcount of 1256: 35 -> 34
9999 mem: storing 1252 in location 1139
9999 mem: incrementing refcount of 1252: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1252
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1252
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1139 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1253
9998 run: its type is "character"
9999 mem: location 1253 is 104
9999 mem: storing 104 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 104
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 0
9999 mem: storing 1 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1252
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1603
9999 mem: incrementing refcount of 1252: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1252
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1248
9999 mem: storing 1248 in location 1604
9999 mem: incrementing refcount of 1248: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1252: 11 -> 10
9999 mem: storing 1248 in location 1139
9999 mem: incrementing refcount of 1248: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1248
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1248
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1139 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1249
9998 run: its type is "character"
9999 mem: location 1249 is 103
9999 mem: storing 103 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 103
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 1
9999 mem: storing 2 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1248
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1603
9999 mem: incrementing refcount of 1248: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1248
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1244
9999 mem: storing 1244 in location 1604
9999 mem: incrementing refcount of 1244: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1248: 11 -> 10
9999 mem: storing 1244 in location 1139
9999 mem: incrementing refcount of 1244: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1244
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1244
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1139 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9998 run: its type is "character"
9999 mem: location 1245 is 102
9999 mem: storing 102 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 102
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 2
9999 mem: storing 3 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1244
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1603
9999 mem: incrementing refcount of 1244: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1244
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1240
9999 mem: storing 1240 in location 1604
9999 mem: incrementing refcount of 1240: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1244: 11 -> 10
9999 mem: storing 1240 in location 1139
9999 mem: incrementing refcount of 1240: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1240
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1240
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1139 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1241
9998 run: its type is "character"
9999 mem: location 1241 is 101
9999 mem: storing 101 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 101
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 3
9999 mem: storing 4 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1240
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1603
9999 mem: incrementing refcount of 1240: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1240
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1236
9999 mem: storing 1236 in location 1604
9999 mem: incrementing refcount of 1236: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1240: 11 -> 10
9999 mem: storing 1236 in location 1139
9999 mem: incrementing refcount of 1236: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1236
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1236
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1139 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 100
9999 mem: storing 100 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 100
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 4
9999 mem: storing 5 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1236
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1603
9999 mem: incrementing refcount of 1236: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1236
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1232
9999 mem: storing 1232 in location 1604
9999 mem: incrementing refcount of 1232: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1236: 11 -> 10
9999 mem: storing 1232 in location 1139
9999 mem: incrementing refcount of 1232: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1232
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1232
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1139 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 99
9999 mem: storing 99 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 99
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 5
9999 mem: storing 6 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1232
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1603
9999 mem: incrementing refcount of 1232: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1232
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1228
9999 mem: storing 1228 in location 1604
9999 mem: incrementing refcount of 1228: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1232: 11 -> 10
9999 mem: storing 1228 in location 1139
9999 mem: incrementing refcount of 1228: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1228
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1228
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1139 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 10
9999 mem: storing 1 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1141 is 6
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 6
9999 mem: storing 6 in location 1616
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1616 is 6
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1616 is 6
9999 mem: location 1614 is 3
9999 mem: storing 0 in location 1618
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1618 is 0
9998 run: jump-if fell through
 107 run: {max: "number"} <- copy {max-line-length: "number"}
9999 mem: location 1614 is 3
9999 mem: storing 3 in location 1618
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1618 is 3
9999 mem: storing 4 in location 1618
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1619
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 0
9999 mem: location 1618 is 4
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1256
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1603
9999 mem: incrementing refcount of 1256: 34 -> 35
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1256
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1259
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1259 is 1252
9999 mem: storing 1252 in location 1604
9999 mem: incrementing refcount of 1252: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1252
9999 mem: storing 1252 in location 1617
9999 mem: incrementing refcount of 1252: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1252
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1252
9999 mem: decrementing refcount of 1256: 35 -> 34
9999 mem: storing 1252 in location 1610
9999 mem: incrementing refcount of 1252: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 0
9999 mem: storing 1 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 1
9999 mem: location 1618 is 4
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1252
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1603
9999 mem: incrementing refcount of 1252: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1252
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1255
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1255 is 1248
9999 mem: storing 1248 in location 1604
9999 mem: incrementing refcount of 1248: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1252: 14 -> 13
9999 mem: storing 1248 in location 1617
9999 mem: incrementing refcount of 1248: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1248
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1248
9999 mem: decrementing refcount of 1252: 13 -> 12
9999 mem: storing 1248 in location 1610
9999 mem: incrementing refcount of 1248: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 1
9999 mem: storing 2 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 2
9999 mem: location 1618 is 4
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1248
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1603
9999 mem: incrementing refcount of 1248: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1248
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1251
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1251 is 1244
9999 mem: storing 1244 in location 1604
9999 mem: incrementing refcount of 1244: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1248: 14 -> 13
9999 mem: storing 1244 in location 1617
9999 mem: incrementing refcount of 1244: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1244
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1244
9999 mem: decrementing refcount of 1248: 13 -> 12
9999 mem: storing 1244 in location 1610
9999 mem: incrementing refcount of 1244: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 2
9999 mem: storing 3 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 3
9999 mem: location 1618 is 4
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1244
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1603
9999 mem: incrementing refcount of 1244: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1244
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1247
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1247 is 1240
9999 mem: storing 1240 in location 1604
9999 mem: incrementing refcount of 1240: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1244: 14 -> 13
9999 mem: storing 1240 in location 1617
9999 mem: incrementing refcount of 1240: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1240
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1240
9999 mem: decrementing refcount of 1244: 13 -> 12
9999 mem: storing 1240 in location 1610
9999 mem: incrementing refcount of 1240: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 3
9999 mem: storing 4 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 4
9999 mem: location 1618 is 4
9999 mem: storing 1 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1240
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1256: 34 -> 33
9999 mem: storing 1240 in location 1203
9999 mem: incrementing refcount of 1240: 13 -> 14
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1203 is 1240
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 1240
9999 mem: decrementing refcount of 1256: 33 -> 32
9999 mem: storing 1240 in location 1201
9999 mem: incrementing refcount of 1240: 14 -> 15
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1256
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1240
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1240 in location 1173
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1200 is 2
9999 mem: location 1199 is 4
9999 mem: storing 0 in location 1202
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1201 is 1240
9999 mem: location 1197 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1605
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1608
9999 mem: incrementing refcount of 1240: 15 -> 16
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1609
9999 mem: incrementing refcount of 1171: 24 -> 25
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1608 is 1240
9999 mem: storing 1240 in location 1610
9999 mem: incrementing refcount of 1240: 16 -> 17
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1610 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1610 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1241
9998 run: its type is "character"
9999 mem: location 1241 is 101
9999 mem: storing 101 in location 1611
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1240
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1612
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1240
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1613
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1613 is 3
9999 mem: location 1612 is 0
9999 mem: storing 3 in location 1614
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1240
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1190
9999 mem: storing 1190 in location 1615
9999 mem: incrementing refcount of 1190: 15 -> 16
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1240
9999 mem: location 1615 is 1190
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1139
9999 mem: incrementing refcount of 1240: 17 -> 18
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1140
9999 mem: incrementing refcount of 1190: 16 -> 17
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1141
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1139 is 1240
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1240
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1142 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1240
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1603
9999 mem: incrementing refcount of 1240: 18 -> 19
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1240
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1236
9999 mem: storing 1236 in location 1604
9999 mem: incrementing refcount of 1236: 10 -> 11
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1240: 19 -> 18
9999 mem: storing 1236 in location 1139
9999 mem: incrementing refcount of 1236: 11 -> 12
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1236
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1236
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1139 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 100
9999 mem: storing 100 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 100
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 0
9999 mem: storing 1 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1236
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1603
9999 mem: incrementing refcount of 1236: 12 -> 13
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1236
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1232
9999 mem: storing 1232 in location 1604
9999 mem: incrementing refcount of 1232: 10 -> 11
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1236: 13 -> 12
9999 mem: storing 1232 in location 1139
9999 mem: incrementing refcount of 1232: 11 -> 12
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1232
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1232
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1139 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 99
9999 mem: storing 99 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 99
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 1
9999 mem: storing 2 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1232
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1603
9999 mem: incrementing refcount of 1232: 12 -> 13
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1232
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1228
9999 mem: storing 1228 in location 1604
9999 mem: incrementing refcount of 1228: 10 -> 11
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1232: 13 -> 12
9999 mem: storing 1228 in location 1139
9999 mem: incrementing refcount of 1228: 11 -> 12
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1228
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1228
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1139 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 10
9999 mem: storing 1 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1141 is 2
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 2
9999 mem: storing 2 in location 1616
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1616 is 2
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1616 is 2
9999 mem: location 1614 is 3
9999 mem: storing 2 in location 1618
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1618 is 2
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1618 is 2
9999 mem: storing 3 in location 1618
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1619
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 0
9999 mem: location 1618 is 3
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1240
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1603
9999 mem: incrementing refcount of 1240: 18 -> 19
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1240
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1243
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1243 is 1236
9999 mem: storing 1236 in location 1604
9999 mem: incrementing refcount of 1236: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1236
9999 mem: storing 1236 in location 1617
9999 mem: incrementing refcount of 1236: 13 -> 14
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1236
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1236
9999 mem: decrementing refcount of 1240: 19 -> 18
9999 mem: storing 1236 in location 1610
9999 mem: incrementing refcount of 1236: 14 -> 15
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 0
9999 mem: storing 1 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 1
9999 mem: location 1618 is 3
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1236
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1603
9999 mem: incrementing refcount of 1236: 15 -> 16
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1236
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1239
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1239 is 1232
9999 mem: storing 1232 in location 1604
9999 mem: incrementing refcount of 1232: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1236: 16 -> 15
9999 mem: storing 1232 in location 1617
9999 mem: incrementing refcount of 1232: 13 -> 14
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1232
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1232
9999 mem: decrementing refcount of 1236: 15 -> 14
9999 mem: storing 1232 in location 1610
9999 mem: incrementing refcount of 1232: 14 -> 15
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 1
9999 mem: storing 2 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 2
9999 mem: location 1618 is 3
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1232
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1603
9999 mem: incrementing refcount of 1232: 15 -> 16
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1232
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1235
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1235 is 1228
9999 mem: storing 1228 in location 1604
9999 mem: incrementing refcount of 1228: 12 -> 13
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1232: 16 -> 15
9999 mem: storing 1228 in location 1617
9999 mem: incrementing refcount of 1228: 13 -> 14
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1228
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1228
9999 mem: decrementing refcount of 1232: 15 -> 14
9999 mem: storing 1228 in location 1610
9999 mem: incrementing refcount of 1228: 14 -> 15
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 2
9999 mem: storing 3 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 3
9999 mem: location 1618 is 3
9999 mem: storing 1 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1228
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1240: 18 -> 17
9999 mem: storing 1228 in location 1203
9999 mem: incrementing refcount of 1228: 15 -> 16
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1203 is 1228
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 1228
9999 mem: decrementing refcount of 1240: 17 -> 16
9999 mem: storing 1228 in location 1201
9999 mem: incrementing refcount of 1228: 16 -> 17
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1240
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1228
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1228 in location 1173
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1200 is 3
9999 mem: location 1199 is 4
9999 mem: storing 0 in location 1202
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- before-previous-line {top-of-screen: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1201 is 1228
9999 mem: location 1197 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1605
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1608
9999 mem: incrementing refcount of 1228: 17 -> 18
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1609
9999 mem: incrementing refcount of 1171: 25 -> 26
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1608 is 1228
9999 mem: storing 1228 in location 1610
9999 mem: incrementing refcount of 1228: 18 -> 19
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1610 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1610 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1611
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1228
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1612
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1228
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1613
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1613 is 3
9999 mem: location 1612 is 0
9999 mem: storing 3 in location 1614
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1228
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1609 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1190
9999 mem: storing 1190 in location 1615
9999 mem: incrementing refcount of 1190: 17 -> 18
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1228
9999 mem: location 1615 is 1190
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1139
9999 mem: incrementing refcount of 1228: 19 -> 20
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1140
9999 mem: incrementing refcount of 1190: 18 -> 19
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1141
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1139 is 1228
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1228
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1142 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1228
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1603
9999 mem: incrementing refcount of 1228: 20 -> 21
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1228
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1224
9999 mem: storing 1224 in location 1604
9999 mem: incrementing refcount of 1224: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1228: 21 -> 20
9999 mem: storing 1224 in location 1139
9999 mem: incrementing refcount of 1224: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1224
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1224
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1139 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 98
9999 mem: storing 98 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 98
9999 mem: storing 0 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1141 is 0
9999 mem: storing 1 in location 1141
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1224
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1603
9999 mem: incrementing refcount of 1224: 10 -> 11
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1224
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1220
9999 mem: storing 1220 in location 1604
9999 mem: incrementing refcount of 1220: 8 -> 9
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1224: 11 -> 10
9999 mem: storing 1220 in location 1139
9999 mem: incrementing refcount of 1220: 9 -> 10
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1139 is 1220
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1139 is 1220
9999 mem: location 1140 is 1190
9999 mem: storing 0 in location 1142
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1142 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1139 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1139 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 10
9999 mem: storing 10 in location 1143
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1143 is 10
9999 mem: storing 1 in location 1144
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1144 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1141 is 1
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1
9999 mem: storing 1 in location 1616
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1616 is 1
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1616 is 1
9999 mem: location 1614 is 3
9999 mem: storing 1 in location 1618
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1618 is 1
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1618 is 1
9999 mem: storing 2 in location 1618
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1619
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 0
9999 mem: location 1618 is 2
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1228
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1603
9999 mem: incrementing refcount of 1228: 20 -> 21
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1228
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1231
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1231 is 1224
9999 mem: storing 1224 in location 1604
9999 mem: incrementing refcount of 1224: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1224
9999 mem: storing 1224 in location 1617
9999 mem: incrementing refcount of 1224: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1224
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1224
9999 mem: decrementing refcount of 1228: 21 -> 20
9999 mem: storing 1224 in location 1610
9999 mem: incrementing refcount of 1224: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 0
9999 mem: storing 1 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 1
9999 mem: location 1618 is 2
9999 mem: storing 0 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1224
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1603
9999 mem: incrementing refcount of 1224: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1224
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1220
9999 mem: storing 1220 in location 1604
9999 mem: incrementing refcount of 1220: 10 -> 11
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1604 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1224: 14 -> 13
9999 mem: storing 1220 in location 1617
9999 mem: incrementing refcount of 1220: 11 -> 12
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1617 is 1220
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1617 is 1220
9999 mem: decrementing refcount of 1224: 13 -> 12
9999 mem: storing 1220 in location 1610
9999 mem: incrementing refcount of 1220: 12 -> 13
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1619 is 1
9999 mem: storing 2 in location 1619
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1619 is 2
9999 mem: location 1618 is 2
9999 mem: storing 1 in location 1620
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1620 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1610 is 1220
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1228: 20 -> 19
9999 mem: storing 1220 in location 1203
9999 mem: incrementing refcount of 1220: 13 -> 14
 106 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1203 is 1220
9998 run: jump-unless fell through
 106 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1203 is 1220
9999 mem: decrementing refcount of 1228: 19 -> 18
9999 mem: storing 1220 in location 1201
9999 mem: incrementing refcount of 1220: 14 -> 15
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {top-of-screen: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1228
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1220
9999 mem: location 1197 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 1220 in location 1173
 106 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1200 is 3
9999 mem: storing 4 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1200 is 4
9999 mem: location 1199 is 4
9999 mem: storing 1 in location 1202
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 1
9998 run: jumping to instruction 15
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1171
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 26 -> 25
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 25 -> 26
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1465
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1220
9999 mem: storing 1220 in location 1466
9999 mem: incrementing refcount of 1220: 15 -> 16
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1439
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1440
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 480
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1579
9999 mem: storing 1579 in location 1446
9999 mem: incrementing refcount of 1579: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1462 is 5
9999 mem: location 1463 is 0
9999 mem: location 1464 is 1264
9999 mem: location 1439 is 5
9999 mem: location 1440 is 0
9999 mem: location 1466 is 1220
9999 mem: location 1465 is 0
9999 mem: location 1446 is 1579
9999 mem: skipping refcount at 1579
9999 mem: location 1446 is 1579
9999 mem: skipping refcount at 1579
9999 mem: storing 1 in location 1580
9999 mem: storing 5 in location 1581
9999 mem: storing 0 in location 1582
9999 mem: storing 1264 in location 1583
9999 mem: storing 5 in location 1584
9999 mem: storing 0 in location 1585
9999 mem: storing 1220 in location 1586
9999 mem: storing 0 in location 1587
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1428 is 1171
9999 mem: location 1446 is 1579
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1204
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1207
9999 mem: incrementing refcount of 1171: 26 -> 27
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1579 in location 1208
9999 mem: incrementing refcount of 1579: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1182
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1182 is 1576
9999 mem: storing 1576 in location 1209
9999 mem: incrementing refcount of 1576: 2 -> 3
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1208 is 1579
9999 mem: location 1209 is 1576
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1579 in location 1187
9999 mem: incrementing refcount of 1579: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1576 in location 1188
9999 mem: incrementing refcount of 1576: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1621
9999 mem: storing 1621 in location 1189
9999 mem: incrementing refcount of 1621: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1187 is 1579
9999 mem: location 1188 is 1576
9999 mem: location 1189 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1189 is 1621
9999 mem: skipping refcount at 1621
9999 mem: storing 1579 in location 1622
9999 mem: storing 1576 in location 1623
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1189 is 1621
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1621
9999 mem: decrementing refcount of 1576: 4 -> 3
9999 mem: storing 1621 in location 1209
9999 mem: incrementing refcount of 1621: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1576
9999 mem: location 1183 is 0
9999 mem: location 1209 is 1621
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1182
9999 mem: storing 1621 in location 1182
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1183
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1183 is 0
9999 mem: storing 0 in location 1210
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1210
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1210 is 0
9999 mem: location 1207 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1183
9999 mem: storing 0 in location 1183
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1207 is 1171
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1171: 27 -> 26
9999 mem: storing 1171 in location 1428
9999 mem: incrementing refcount of 1171: 26 -> 27
 105 run: {top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1428 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1220
9999 mem: storing 1220 in location 1469
9999 mem: incrementing refcount of 1220: 16 -> 17
 105 run: {no-movement?: "boolean"} <- equal {top-of-screen: ("address" "shared" "duplex-list" "character")}, {old-top: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1469 is 1220
9999 mem: location 1461 is 1264
9999 mem: storing 0 in location 1470
 105 run: {go-render?: "boolean"} <- not {no-movement?: "boolean"}
9999 mem: location 1470 is 0
9999 mem: storing 1 in location 1433
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1427 is 1008
9999 mem: location 1428 is 1171
9999 mem: location 1433 is 1
9999 abandon: saving in free-list of size 76
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1171
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 165 -> 164
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 164 -> 165
9999 mem: decrementing refcount of 1171: 27 -> 26
9999 mem: storing 1171 in location 1399
9999 mem: incrementing refcount of 1171: 26 -> 27
9999 mem: storing 1 in location 1409
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1397 is 1008
9999 mem: location 1399 is 1171
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1136
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1139
9999 mem: incrementing refcount of 1008: 165 -> 166
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1140
9999 mem: incrementing refcount of 1171: 27 -> 28
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1141
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1140 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1142
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1139 is 1008
9999 mem: location 1140 is 1171
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1312
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 166 -> 167
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1316
9999 mem: incrementing refcount of 1171: 28 -> 29
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1316 is 1171
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1176
9998 run: its type is "number"
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1317
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1315 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1603
9999 mem: incrementing refcount of 1008: 167 -> 168
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1603 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1604
9990 schedule: screen-height/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-wrapped-lines
 107 run: return {height: "number"}
9999 mem: location 1604 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1318
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1177
9998 run: its type is "number"
9999 mem: location 1177 is 3
9999 mem: storing 3 in location 1319
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 1220
9999 mem: storing 1220 in location 1320
9999 mem: incrementing refcount of 1220: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1220
9999 mem: storing 1220 in location 1321
9999 mem: incrementing refcount of 1220: 18 -> 19
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1603
9999 mem: incrementing refcount of 1220: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1603 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1604
9999 mem: incrementing refcount of 1224: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 20 -> 19
9999 mem: storing 1224 in location 1320
9999 mem: incrementing refcount of 1224: 13 -> 14
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1322
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1325
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1326
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1296
9999 mem: storing 1296 in location 1327
9999 mem: incrementing refcount of 1296: 18 -> 19
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 1
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 1
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 169 -> 168
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 168 -> 169
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1224
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1320 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 98
9999 mem: storing 98 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1624
9999 mem: storing 10 in location 1625
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 98
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 98
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 98
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 98
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 98
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 0
9999 mem: storing 10 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 98
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 10
9999 mem: storing 1036 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 98
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1036
9999 mem: location 1374 is 1036
9999 mem: storing 98 in location 1036
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1603
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1224
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1604
9999 mem: incrementing refcount of 1228: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 15 -> 14
9999 mem: storing 1228 in location 1320
9999 mem: incrementing refcount of 1228: 19 -> 20
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1603
9999 mem: incrementing refcount of 1220: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 10
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1211
9999 mem: location 1603 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1604
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 20 -> 19
9999 mem: storing 1224 in location 1321
9999 mem: incrementing refcount of 1224: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1228
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1320 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 1
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 170 -> 171
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 171 -> 172
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 1
9999 mem: storing 11 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 63 -> 64
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 11
9999 mem: storing 1038 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1038
9999 mem: location 1374 is 1038
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 171 -> 172
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 172 -> 173
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 2
9999 mem: storing 12 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 64 -> 65
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 12
9999 mem: storing 1040 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1040
9999 mem: location 1374 is 1040
9999 mem: storing 32 in location 1040
9999 mem: storing 7 in location 1041
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 173 -> 172
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 172 -> 173
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 173 -> 174
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 1
9999 mem: location 1361 is 10
9999 mem: storing 10 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 10
9999 mem: location 1365 is 3
9999 mem: storing 13 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 65 -> 66
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 13
9999 mem: storing 1042 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1042
9999 mem: location 1374 is 1042
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 174 -> 173
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 173 -> 174
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 1
9999 mem: storing 2 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 2
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 174 -> 175
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 2
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 175 -> 174
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 174 -> 175
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1603
9999 mem: incrementing refcount of 1228: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1228
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1604
9999 mem: incrementing refcount of 1232: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 21 -> 20
9999 mem: storing 1232 in location 1320
9999 mem: incrementing refcount of 1232: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1603
9999 mem: incrementing refcount of 1224: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1224
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 98
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1603 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1604
9999 mem: incrementing refcount of 1228: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 17 -> 16
9999 mem: storing 1228 in location 1321
9999 mem: incrementing refcount of 1228: 21 -> 22
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1232
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1320 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 99
9999 mem: storing 99 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 99
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 99
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 99
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 99
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 175 -> 176
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 0
9999 mem: storing 20 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 99
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 20
9999 mem: storing 1056 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 99
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1056
9999 mem: location 1374 is 1056
9999 mem: storing 99 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1232
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1603
9999 mem: incrementing refcount of 1232: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1232
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1604
9999 mem: incrementing refcount of 1236: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 17 -> 16
9999 mem: storing 1236 in location 1320
9999 mem: incrementing refcount of 1236: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1603
9999 mem: incrementing refcount of 1228: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1228
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 10
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1603 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1604
9999 mem: incrementing refcount of 1232: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 23 -> 22
9999 mem: storing 1232 in location 1321
9999 mem: incrementing refcount of 1232: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1236
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1320 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 100
9999 mem: storing 100 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
9990 schedule: get-color/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-wrapped-lines
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 100
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 100
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 100
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 100
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 176 -> 177
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 1
9999 mem: storing 21 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 100
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 21
9999 mem: storing 1058 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 100
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1058
9999 mem: location 1374 is 1058
9999 mem: storing 100 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1236
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1603
9999 mem: incrementing refcount of 1236: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1236
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 1240
9999 mem: storing 1240 in location 1604
9999 mem: incrementing refcount of 1240: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1236: 17 -> 16
9999 mem: storing 1240 in location 1320
9999 mem: incrementing refcount of 1240: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1232
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1603
9999 mem: incrementing refcount of 1232: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1232
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 99
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1603 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1604
9999 mem: incrementing refcount of 1236: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 19 -> 18
9999 mem: storing 1236 in location 1321
9999 mem: incrementing refcount of 1236: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 1
9999 mem: storing 2 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1240
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1320 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1241
9998 run: its type is "character"
9999 mem: location 1241 is 101
9999 mem: storing 101 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 101
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 101
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 101
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 101
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 177 -> 178
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 101
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 2
9999 mem: storing 22 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 101
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 22
9999 mem: storing 1060 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 101
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1060
9999 mem: location 1374 is 1060
9999 mem: storing 101 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1240
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1603
9999 mem: incrementing refcount of 1240: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1240
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1242
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1242 is 1244
9999 mem: storing 1244 in location 1604
9999 mem: incrementing refcount of 1244: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1240: 19 -> 18
9999 mem: storing 1244 in location 1320
9999 mem: incrementing refcount of 1244: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1236
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1603
9999 mem: incrementing refcount of 1236: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1236
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 100
9999 mem: location 1238 is 1240
9999 mem: location 1239 is 1232
9999 mem: location 1603 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 1240
9999 mem: storing 1240 in location 1604
9999 mem: incrementing refcount of 1240: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1240
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1240
9999 mem: decrementing refcount of 1236: 19 -> 18
9999 mem: storing 1240 in location 1321
9999 mem: incrementing refcount of 1240: 19 -> 20
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 2
9999 mem: storing 3 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1244
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 2
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9998 run: its type is "character"
9999 mem: location 1245 is 102
9999 mem: storing 102 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 102
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 102
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 102
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 3
9999 mem: location 1319 is 3
9999 mem: storing 1 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1335
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1315 is 1008
9999 mem: location 1335 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 178 -> 179
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 8617
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 2
9999 mem: location 1361 is 10
9999 mem: storing 20 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 20
9999 mem: location 1365 is 3
9999 mem: storing 23 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 69 -> 70
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 8617
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 23
9999 mem: storing 1062 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 8617
9999 mem: location 1357 is 245
9999 mem: location 1374 is 1062
9999 mem: location 1374 is 1062
9999 mem: storing 8617 in location 1062
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 2
9999 mem: storing 3 in location 1323
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 3
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 179 -> 180
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 3
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 180 -> 179
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 179 -> 180
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1244
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1320 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1245
9998 run: its type is "character"
9999 mem: location 1245 is 102
9999 mem: storing 102 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 102
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 102
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 102
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 102
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 180 -> 181
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 102
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 0
9999 mem: storing 30 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 70 -> 71
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 102
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 30
9999 mem: storing 1076 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 102
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1076
9999 mem: location 1374 is 1076
9999 mem: storing 102 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1244
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1603
9999 mem: incrementing refcount of 1244: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1244
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1246 is 1248
9999 mem: storing 1248 in location 1604
9999 mem: incrementing refcount of 1248: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1244: 15 -> 14
9999 mem: storing 1248 in location 1320
9999 mem: incrementing refcount of 1248: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1240
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1240 in location 1603
9999 mem: incrementing refcount of 1240: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1240
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9999 mem: location 1241 is 101
9999 mem: location 1242 is 1244
9999 mem: location 1243 is 1236
9999 mem: location 1603 is 1240
9999 mem: skipping refcount at 1240
9998 run: address to copy is 1242
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1242 is 1244
9999 mem: storing 1244 in location 1604
9999 mem: incrementing refcount of 1244: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1244
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1244
9999 mem: decrementing refcount of 1240: 21 -> 20
9999 mem: storing 1244 in location 1321
9999 mem: incrementing refcount of 1244: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1248
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1320 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1249
9998 run: its type is "character"
9999 mem: location 1249 is 103
9999 mem: storing 103 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 103
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 103
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 103
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 103
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 181 -> 182
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 103
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 1
9999 mem: storing 31 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 71 -> 72
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 103
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 31
9999 mem: storing 1078 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 103
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1078
9999 mem: location 1374 is 1078
9999 mem: storing 103 in location 1078
9999 mem: storing 7 in location 1079
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
9990 schedule: print/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-wrapped-lines
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1248
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1603
9999 mem: incrementing refcount of 1248: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1248
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1250
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1250 is 1252
9999 mem: storing 1252 in location 1604
9999 mem: incrementing refcount of 1252: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1252
9999 mem: decrementing refcount of 1248: 15 -> 14
9999 mem: storing 1252 in location 1320
9999 mem: incrementing refcount of 1252: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1244
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1244 in location 1603
9999 mem: incrementing refcount of 1244: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1244
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9999 mem: location 1245 is 102
9999 mem: location 1246 is 1248
9999 mem: location 1247 is 1240
9999 mem: location 1603 is 1244
9999 mem: skipping refcount at 1244
9998 run: address to copy is 1246
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1246 is 1248
9999 mem: storing 1248 in location 1604
9999 mem: incrementing refcount of 1248: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1248
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1248
9999 mem: decrementing refcount of 1244: 17 -> 16
9999 mem: storing 1248 in location 1321
9999 mem: incrementing refcount of 1248: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 1
9999 mem: storing 2 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1252
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1320 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1253
9998 run: its type is "character"
9999 mem: location 1253 is 104
9999 mem: storing 104 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 104
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 104
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 104
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 104
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 2
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 104
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 182 -> 183
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 104
  90 print-character: 104 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 104
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 2
9999 mem: storing 32 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 72 -> 73
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 104
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 32
9999 mem: storing 1080 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 104
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1080
9999 mem: location 1374 is 1080
9999 mem: storing 104 in location 1080
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1252
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1603
9999 mem: incrementing refcount of 1252: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1252
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1254
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1254 is 1256
9999 mem: storing 1256 in location 1604
9999 mem: incrementing refcount of 1256: 32 -> 33
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1252: 15 -> 14
9999 mem: storing 1256 in location 1320
9999 mem: incrementing refcount of 1256: 33 -> 34
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1248
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1248 in location 1603
9999 mem: incrementing refcount of 1248: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1248
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9999 mem: location 1249 is 103
9999 mem: location 1250 is 1252
9999 mem: location 1251 is 1244
9999 mem: location 1603 is 1248
9999 mem: skipping refcount at 1248
9998 run: address to copy is 1250
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1250 is 1252
9999 mem: storing 1252 in location 1604
9999 mem: incrementing refcount of 1252: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1252
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1252
9999 mem: decrementing refcount of 1248: 17 -> 16
9999 mem: storing 1252 in location 1321
9999 mem: incrementing refcount of 1252: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 2
9999 mem: storing 3 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1256
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1320 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1257
9998 run: its type is "character"
9999 mem: location 1257 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 3
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 3
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 183 -> 184
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 184 -> 185
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 3
9999 mem: location 1361 is 10
9999 mem: storing 30 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 30
9999 mem: location 1365 is 3
9999 mem: storing 33 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 33
9999 mem: storing 1082 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1082
9999 mem: location 1374 is 1082
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 185 -> 184
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 184 -> 185
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 3
9999 mem: storing 4 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 4
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 185 -> 186
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 4
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 186 -> 185
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 185 -> 186
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1256
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1603
9999 mem: incrementing refcount of 1256: 34 -> 35
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1256
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1604
9999 mem: incrementing refcount of 1260: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 35 -> 34
9999 mem: storing 1260 in location 1320
9999 mem: incrementing refcount of 1260: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1252
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1252 in location 1603
9999 mem: incrementing refcount of 1252: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1252
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9999 mem: location 1253 is 104
9999 mem: location 1254 is 1256
9999 mem: location 1255 is 1248
9999 mem: location 1603 is 1252
9999 mem: skipping refcount at 1252
9998 run: address to copy is 1254
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1254 is 1256
9999 mem: storing 1256 in location 1604
9999 mem: incrementing refcount of 1256: 34 -> 35
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1256
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1256
9999 mem: decrementing refcount of 1252: 17 -> 16
9999 mem: storing 1256 in location 1321
9999 mem: incrementing refcount of 1256: 35 -> 36
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1260
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1320 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1261
9998 run: its type is "character"
9999 mem: location 1261 is 105
9999 mem: storing 105 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 105
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 105
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 105
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 105
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 105
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 186 -> 187
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 105 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 105
  90 print-character: 105 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 105
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 0
9999 mem: storing 40 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 74 -> 75
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 105
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 40
9999 mem: storing 1096 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 105
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1096
9999 mem: location 1374 is 1096
9999 mem: storing 105 in location 1096
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1260
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1603
9999 mem: incrementing refcount of 1260: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1260
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1604
9999 mem: incrementing refcount of 1264: 29 -> 30
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 27 -> 26
9999 mem: storing 1264 in location 1320
9999 mem: incrementing refcount of 1264: 30 -> 31
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1256
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1256 in location 1603
9999 mem: incrementing refcount of 1256: 36 -> 37
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1256
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9999 mem: location 1257 is 10
9999 mem: location 1258 is 1260
9999 mem: location 1259 is 1252
9999 mem: location 1603 is 1256
9999 mem: skipping refcount at 1256
9998 run: address to copy is 1258
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1258 is 1260
9999 mem: storing 1260 in location 1604
9999 mem: incrementing refcount of 1260: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1260
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1260
9999 mem: decrementing refcount of 1256: 37 -> 36
9999 mem: storing 1260 in location 1321
9999 mem: incrementing refcount of 1260: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1264
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1320 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1265
9998 run: its type is "character"
9999 mem: location 1265 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 4
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 187 -> 188
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 188 -> 189
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 1
9999 mem: storing 41 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 41
9999 mem: storing 1098 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1098
9999 mem: location 1374 is 1098
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 189 -> 188
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 188 -> 189
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 189 -> 190
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
9990 schedule: print/clear-line-delimited/render/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-wrapped-lines
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 2
9999 mem: storing 42 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 42
9999 mem: storing 1100 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1100
9999 mem: location 1374 is 1100
9999 mem: storing 32 in location 1100
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 190 -> 189
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 189 -> 190
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 190 -> 191
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 4
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 4
9999 mem: location 1361 is 10
9999 mem: storing 40 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 40
9999 mem: location 1365 is 3
9999 mem: storing 43 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 43
9999 mem: storing 1102 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1102
9999 mem: location 1374 is 1102
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 191 -> 190
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 190 -> 191
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 4
9999 mem: storing 5 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 5
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 191 -> 192
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 192 -> 191
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 191 -> 192
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1603
9999 mem: incrementing refcount of 1264: 31 -> 32
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1604
9999 mem: incrementing refcount of 1268: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 32 -> 31
9999 mem: storing 1268 in location 1320
9999 mem: incrementing refcount of 1268: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1260
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1260 in location 1603
9999 mem: incrementing refcount of 1260: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1260
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9999 mem: location 1261 is 105
9999 mem: location 1262 is 1264
9999 mem: location 1263 is 1256
9999 mem: location 1603 is 1260
9999 mem: skipping refcount at 1260
9998 run: address to copy is 1262
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1262 is 1264
9999 mem: storing 1264 in location 1604
9999 mem: incrementing refcount of 1264: 31 -> 32
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1264
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1264
9999 mem: decrementing refcount of 1260: 29 -> 28
9999 mem: storing 1264 in location 1321
9999 mem: incrementing refcount of 1264: 32 -> 33
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1268
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 5
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1330
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1264
9999 mem: decrementing refcount of 1296: 19 -> 18
9999 mem: storing 1264 in location 1327
9999 mem: incrementing refcount of 1264: 33 -> 34
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1320 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1269
9998 run: its type is "character"
9999 mem: location 1269 is 106
9999 mem: storing 106 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 106
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 106
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 106
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 106
9999 mem: storing 0 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1319 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1331 is 106
9999 mem: location 1322 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 192 -> 193
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 106 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1359
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 106
  90 print-character: 106 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1365
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 106
9999 mem: storing 0 in location 1366
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 0
9999 mem: storing 50 in location 1369
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 78 -> 79
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 106
9999 mem: storing 0 in location 1372
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 50
9999 mem: storing 1116 in location 1374
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 106
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1116
9999 mem: location 1374 is 1116
9999 mem: storing 106 in location 1116
9999 mem: storing 7 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 0
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 0
9999 mem: storing 1 in location 1365
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 1
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1603
9999 mem: incrementing refcount of 1268: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1603 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1604
9999 mem: incrementing refcount of 1272: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 23 -> 22
9999 mem: storing 1272 in location 1320
9999 mem: incrementing refcount of 1272: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1264
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1264 in location 1603
9999 mem: incrementing refcount of 1264: 34 -> 35
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1264
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9999 mem: location 1265 is 10
9999 mem: location 1266 is 1268
9999 mem: location 1267 is 1260
9999 mem: location 1603 is 1264
9999 mem: skipping refcount at 1264
9998 run: address to copy is 1266
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1266 is 1268
9999 mem: storing 1268 in location 1604
9999 mem: incrementing refcount of 1268: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1268
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1268
9999 mem: decrementing refcount of 1264: 35 -> 34
9999 mem: storing 1268 in location 1321
9999 mem: incrementing refcount of 1268: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1324 is 0
9999 mem: storing 1 in location 1324
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1272
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1318 is 6
9999 mem: storing 0 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 5
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1330
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1320 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1320 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1273
9998 run: its type is "character"
9999 mem: location 1273 is 10
9999 mem: storing 10 in location 1331
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1322 is 7
9999 mem: location 1331 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1624
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1627
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1628
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1627 is 7
9999 mem: storing 1 in location 1629
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1630
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1630 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1631
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1631 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1629 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1628 is 10
9999 mem: storing 0 in location 1633
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1633 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1627 is 7
9999 mem: storing 0 in location 1634
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1634 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1627 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1322
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1331 is 10
9999 mem: storing 1 in location 1332
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 5
9999 mem: location 1325 is 5
9999 mem: storing 1 in location 1329
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1329 is 1
9998 run: jump-unless fell through
 106 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 1
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1333
 106 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 193 -> 194
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 194 -> 195
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 1
9999 mem: storing 51 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 79 -> 80
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 51
9999 mem: storing 1118 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1118
9999 mem: location 1374 is 1118
9999 mem: storing 32 in location 1118
9999 mem: storing 7 in location 1119
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 1
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 1
9999 mem: storing 2 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 2
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 195 -> 194
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 194 -> 195
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 195 -> 196
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 2
9999 mem: storing 52 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 80 -> 81
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 52
9999 mem: storing 1120 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1120
9999 mem: location 1374 is 1120
9999 mem: storing 32 in location 1120
9999 mem: storing 7 in location 1121
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 2
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 2
9999 mem: storing 3 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 3
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 196 -> 195
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 195 -> 196
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 196 -> 197
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 5
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1362 is 6
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 25
 108 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1365
 108 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1361 is 10
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1366
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 45
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1363 is 5
9999 mem: location 1361 is 10
9999 mem: storing 50 in location 1369
 108 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1369 is 50
9999 mem: location 1365 is 3
9999 mem: storing 53 in location 1369
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1370
9999 mem: incrementing refcount of 1014: 81 -> 82
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 60 in location 1371
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1356 is 32
9999 mem: storing 0 in location 1372
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1370 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1369 is 53
9999 mem: storing 1122 in location 1374
 108 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1356 is 32
9999 mem: location 1357 is 7
9999 mem: location 1374 is 1122
9999 mem: location 1374 is 1122
9999 mem: storing 32 in location 1122
9999 mem: storing 7 in location 1123
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1361 is 10
9999 mem: storing 9 in location 1375
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1365 is 3
9999 mem: location 1375 is 9
9999 mem: storing 0 in location 1376
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jump-if fell through
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1365 is 3
9999 mem: storing 4 in location 1365
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1365 is 4
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 197 -> 196
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 196 -> 197
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1323 is 5
9999 mem: storing 6 in location 1323
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1324
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1315 is 1008
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 197 -> 198
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 6
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 198 -> 197
9999 mem: storing 1008 in location 1315
9999 mem: incrementing refcount of 1008: 197 -> 198
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1320 is 1272
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1272 in location 1603
9999 mem: incrementing refcount of 1272: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1272
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1272
9999 mem: skipping refcount at 1272
9999 mem: location 1273 is 10
9999 mem: location 1274 is 1276
9999 mem: location 1275 is 1268
9999 mem: location 1603 is 1272
9999 mem: skipping refcount at 1272
9998 run: address to copy is 1274
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1274 is 1276
9999 mem: storing 1276 in location 1604
9999 mem: incrementing refcount of 1276: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1276
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1276
9999 mem: decrementing refcount of 1272: 19 -> 18
9999 mem: storing 1276 in location 1320
9999 mem: incrementing refcount of 1276: 17 -> 18
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1268
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1268 in location 1603
9999 mem: incrementing refcount of 1268: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1603 is 1268
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1603 is 1268
9999 mem: skipping refcount at 1268
9999 mem: location 1269 is 106
9999 mem: location 1270 is 1272
9999 mem: location 1271 is 1264
9999 mem: location 1603 is 1268
9999 mem: skipping refcount at 1268
9998 run: address to copy is 1270
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1270 is 1272
9999 mem: storing 1272 in location 1604
9999 mem: incrementing refcount of 1272: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1604 is 1272
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1272
9999 mem: decrementing refcount of 1268: 25 -> 24
9999 mem: storing 1272 in location 1321
9999 mem: incrementing refcount of 1272: 19 -> 20
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1320 is 1276
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1318 is 6
9999 mem: storing 1 in location 1328
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jumping to instruction 68
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1308
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1320 is 1276
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1174
9999 mem: storing 1276 in location 1174
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1329
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1324 is 0
9999 mem: location 1326 is 0
9999 mem: storing 1 in location 1336
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1329 is 0
9999 mem: location 1336 is 1
9999 mem: storing 0 in location 1337
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1323 is 6
9999 mem: location 1325 is 5
9999 mem: storing 0 in location 1338
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1337 is 0
9999 mem: location 1338 is 0
9999 mem: storing 0 in location 1339
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 80
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1276
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1323 is 6
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1178
9999 mem: storing 6 in location 1178
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1276
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1325 is 5
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1179
9999 mem: storing 5 in location 1179
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1276
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1326 is 0
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1180
9999 mem: storing 0 in location 1180
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1276
9999 mem: location 1175 is 1296
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1327 is 1264
9999 mem: location 1316 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1175
9999 mem: storing 1264 in location 1175
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1323 is 6
9999 mem: location 1324 is 0
9999 mem: location 1315 is 1008
9999 mem: location 1316 is 1171
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 6
9998 run: result 1 is 0
9999 mem: storing 6 in location 1143
9999 mem: storing 0 in location 1144
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1139 is 1008
9999 mem: location 1144 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 198 -> 199
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1198
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 0
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 199 -> 200
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1002/scenario_editor-can-scroll-up-wrapped-lines
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 200 -> 199
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 199 -> 200
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 0
9999 mem: storing 1 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 200 -> 201
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 201 -> 200
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 200 -> 201
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 201 -> 202
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 202 -> 201
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 201 -> 202
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 202 -> 203
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 6
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 6
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 203 -> 202
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 202 -> 203
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1143 is 6
9999 mem: storing 7 in location 1143
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1139 is 1008
9999 mem: location 1143 is 7
9999 mem: location 1141 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1413
9999 mem: incrementing refcount of 1008: 203 -> 204
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1414
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1415
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1416
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1417
9999 mem: storing 1 in location 1418
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1420 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1419
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1421
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1414 is 7
9999 mem: location 1415 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 204 -> 205
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 7
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 205 -> 204
9999 mem: storing 1008 in location 1413
9999 mem: incrementing refcount of 1008: 204 -> 205
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 0
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 205 -> 206
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 0
9999 mem: storing 1 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 1
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 206 -> 207
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 1
9999 mem: storing 2 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 2
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 207 -> 208
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 2
9999 mem: storing 3 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 3
9999 mem: location 1416 is 3
9999 mem: storing 1 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1413 is 1008
9999 mem: location 1417 is 9480
9999 mem: location 1419 is 245
9999 mem: location 1421 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 208 -> 209
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1356
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1357
9999 mem: storing 1 in location 1358
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1363
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 7
9999 mem: storing 1 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 7
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1415 is 3
9999 mem: storing 4 in location 1415
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1415 is 4
9999 mem: location 1416 is 3
9999 mem: storing 0 in location 1423
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1413 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1143 is 7
9999 mem: storing 8 in location 1143
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1139 is 1008
9999 mem: location 1143 is 8
9999 mem: location 1141 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 209 -> 210
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 8
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 210 -> 211
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1188
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 8
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 211 -> 210
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 210 -> 211
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1194
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 211 -> 212
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1198
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1199
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1200
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1201
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 0
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 212 -> 213
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 213 -> 212
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 212 -> 213
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 0
9999 mem: storing 1 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 213 -> 214
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 214 -> 213
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 213 -> 214
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 1
9999 mem: storing 2 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 2
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 214 -> 215
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 215 -> 214
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 214 -> 215
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 2
9999 mem: storing 3 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 3
9999 mem: location 1199 is 3
9999 mem: storing 0 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1197 is 1008
9999 mem: location 1200 is 32
9999 mem: location 1201 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1352
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1355
9999 mem: incrementing refcount of 1008: 215 -> 216
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1356
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1357
9999 mem: storing 1 in location 1358
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1358 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1359
9999 mem: storing 1 in location 1360
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1356 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1355 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1361
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1362
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1355 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1363
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1363 is 8
9999 mem: storing 1 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1363 is 8
9999 mem: location 1362 is 6
9999 mem: storing 0 in location 1364
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1364 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1355 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 216 -> 215
9999 mem: storing 1008 in location 1197
9999 mem: incrementing refcount of 1008: 215 -> 216
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1198 is 3
9999 mem: storing 4 in location 1198
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1198 is 4
9999 mem: location 1199 is 3
9999 mem: storing 1 in location 1203
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1197 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 8
9999 mem: location 1006 is 0
9999 mem: location 1007 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1526
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1529
9999 mem: incrementing refcount of 1008: 216 -> 217
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1530
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1531
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1532
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1530 is 8
9999 mem: storing 9 in location 1530
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1529 is 1008
9999 mem: location 1530 is 9
9999 mem: location 1531 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 217 -> 218
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1188
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 9
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 108 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 218 -> 217
9999 mem: storing 1008 in location 1529
9999 mem: incrementing refcount of 1008: 217 -> 218
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1529 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1603
9999 mem: incrementing refcount of 1008: 218 -> 219
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1603 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1603 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 6
9999 mem: storing 6 in location 1604
 108 run: return {height: "number"}
9999 mem: location 1604 is 6
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 6
9999 mem: storing 6 in location 1533
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1530 is 9
9999 mem: location 1533 is 6
9999 mem: storing 1 in location 1534
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1534 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1529 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1139 is 1008
9999 mem: location 1140 is 1171
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 219 -> 218
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 218 -> 219
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1276
9999 mem: location 1175 is 1264
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1179
9998 run: its type is "number"
9999 mem: location 1179 is 5
9999 mem: storing 5 in location 1400
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 1190
9999 mem: location 1173 is 1220
9999 mem: location 1174 is 1276
9999 mem: location 1175 is 1264
9999 mem: location 1176 is 0
9999 mem: location 1177 is 3
9999 mem: location 1178 is 6
9999 mem: location 1179 is 5
9999 mem: location 1180 is 0
9999 mem: location 1181 is 1
9999 mem: location 1182 is 1621
9999 mem: location 1183 is 0
9999 mem: location 1399 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1180
9998 run: its type is "number"
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1401
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1397 is 1008
9999 mem: location 1400 is 5
9999 mem: location 1401 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1184
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1187
9999 mem: incrementing refcount of 1008: 219 -> 220
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1188
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1189
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1187 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1188 is 5
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 6
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1189 is 0
9999 mem: location 1187 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1187 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 220 -> 219
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 219 -> 220
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1398 is 1597
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1410
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1597 in location 1413
9999 mem: incrementing refcount of 1597: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1413 is 1597
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 1
9999 mem: location 1599 is 1591
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1598
9998 run: its type is "number"
9999 mem: location 1598 is 1
9999 mem: storing 1 in location 1414
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9999 mem: location 1598 is 1
9999 mem: location 1599 is 1591
9999 mem: location 1413 is 1597
9999 mem: skipping refcount at 1597
9998 run: address to copy is 1599
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1599 is 1591
9999 mem: storing 1591 in location 1415
9999 mem: incrementing refcount of 1591: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1415 is 1591
9999 mem: skipping refcount at 1591
9999 mem: storing 1 in location 1416
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1414 is 1
9999 mem: location 1416 is 1
9999 mem: storing 1 in location 1417
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1600
9999 mem: storing 1600 in location 1418
9999 mem: incrementing refcount of 1600: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1418 is 1600
9999 mem: skipping refcount at 1600
9999 mem: location 1601 is 0
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: location 1604 is 0
9999 mem: location 1413 is 1597
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1597
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: decrementing refcount of 1597: 3 -> 2
9999 mem: storing 1597 in location 1398
9999 mem: incrementing refcount of 1597: 2 -> 3
9999 mem: storing 1 in location 1406
9999 mem: storing 1 in location 1407
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1397 is 1008
9999 mem: location 1398 is 1597
9999 mem: location 1399 is 1171
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .b         .\n    .cde↩      .\n    .fgh       .\n    .i         .\n    .j         .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
