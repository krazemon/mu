9991 parse: --- defining scenario_editor-can-undo-and-redo-ctrl-u-2
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [abc]\n    press ctrl-u\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [abc]\n    press ctrl-u\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9999 parse: recipe scenario_editor-can-undo-and-redo-ctrl-u-2 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- deduce types for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- collect surrounding spaces for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- transform names for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- transform braces for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- perform checks for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- type-check calls inside recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- type-check merge instructions in recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- check types of reply instructions in recipe scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- checking reply instructions against header for scenario_editor-can-undo-and-redo-ctrl-u-2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-can-undo-and-redo-ctrl-u-2
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1000
9999 mem: storing 10 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1012
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 0 -> 1
 103 run: {width: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 0
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9999 mem: storing 1014 in location 1006
 103 run: {width: ("address" "number"), "lookup": ()} <- copy {w: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1006 is 1014
9999 mem: storing 10 in location 1014
 103 run: {height: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 0
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9999 mem: storing 1013 in location 1007
 103 run: {height: ("address" "number"), "lookup": ()} <- copy {h: "number"}
9999 mem: location 1004 is 5
9999 mem: location 1007 is 1013
9999 mem: storing 5 in location 1013
 103 run: {row: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1008
 103 run: {row: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1008 is 1015
9999 mem: storing 0 in location 1015
 103 run: {column: ("address" "number")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1009
 103 run: {column: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1009 is 1016
9999 mem: storing 0 in location 1016
 103 run: {bufsize: "number"} <- multiply {width: ("address" "number"), "lookup": ()}, {height: ("address" "number"), "lookup": ()}
9999 mem: location 1006 is 1014
9999 mem: location 1014 is 10
9999 mem: location 1007 is 1013
9999 mem: location 1013 is 5
9999 mem: storing 50 in location 1010
 103 run: {buf: ("address" "address" "shared" "array" "screen-cell")} <- get-address {result: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 0
9999 mem: location 1005 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9999 mem: storing 1017 in location 1011
 103 run: {buf: ("address" "address" "shared" "array" "screen-cell"), "lookup": ()} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1010 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1018
9999 mem: storing 50 in location 1019
9999 mem: location 1011 is 1017
9999 mem: storing 1018 in location 1017
9999 mem: incrementing refcount of 1018: 0 -> 1
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1012
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1120
9999 mem: storing 10 in location 1121
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1123
9999 mem: incrementing refcount of 1012: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1123 is 1012
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1124
9999 mem: incrementing refcount of 1018: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1125
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1126
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 0
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 0
9999 mem: storing 1020 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1020
9999 mem: storing 1020 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1020
9999 mem: storing 0 in location 1020
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1020
9999 mem: location 1020 is 0
9999 mem: location 1021 is 0
9999 mem: location 1128 is 1020
9998 run: address to copy is 1021
9999 mem: storing 1021 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1021
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 0
9999 mem: storing 1 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 1
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 1
9999 mem: storing 1022 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1022
9999 mem: storing 1022 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1022
9999 mem: storing 0 in location 1022
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1022
9999 mem: location 1022 is 0
9999 mem: location 1023 is 0
9999 mem: location 1128 is 1022
9998 run: address to copy is 1023
9999 mem: storing 1023 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1023
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 1
9999 mem: storing 2 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 2
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 2
9999 mem: storing 1024 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1024
9999 mem: storing 1024 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1024
9999 mem: storing 0 in location 1024
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1024
9999 mem: location 1024 is 0
9999 mem: location 1025 is 0
9999 mem: location 1128 is 1024
9998 run: address to copy is 1025
9999 mem: storing 1025 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1025
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 2
9999 mem: storing 3 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 3
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 3
9999 mem: storing 1026 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1026
9999 mem: storing 0 in location 1026
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 0
9999 mem: location 1128 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1027
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 3
9999 mem: storing 4 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 4
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 4
9999 mem: storing 1028 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1028
9999 mem: storing 0 in location 1028
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 0
9999 mem: location 1128 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1029
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 4
9999 mem: storing 5 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 5
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 5
9999 mem: storing 1030 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1030
9999 mem: storing 0 in location 1030
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 0
9999 mem: location 1128 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1031
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 5
9999 mem: storing 6 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 6
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 6
9999 mem: storing 1032 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1032
9999 mem: storing 0 in location 1032
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1128 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1033
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 6
9999 mem: storing 7 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 7
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 7
9999 mem: storing 1034 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1034
9999 mem: storing 0 in location 1034
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1128 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1035
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 7
9999 mem: storing 8 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 8
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 8
9999 mem: storing 1036 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1036
9999 mem: storing 0 in location 1036
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 0
9999 mem: location 1128 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1037
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 8
9999 mem: storing 9 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 9
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 9
9999 mem: storing 1038 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1038
9999 mem: storing 0 in location 1038
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1128 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1039
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 9
9999 mem: storing 10 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 10
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 10
9999 mem: storing 1040 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1040
9999 mem: storing 0 in location 1040
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1128 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1041
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 10
9999 mem: storing 11 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 11
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 11
9999 mem: storing 1042 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1042
9999 mem: storing 0 in location 1042
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1128 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1043
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 11
9999 mem: storing 12 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 12
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 12
9999 mem: storing 1044 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1044
9999 mem: storing 0 in location 1044
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1128 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1045
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 12
9999 mem: storing 13 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 13
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 13
9999 mem: storing 1046 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1046
9999 mem: storing 0 in location 1046
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1128 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1047
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 13
9999 mem: storing 14 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 14
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 14
9999 mem: storing 1048 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1048
9999 mem: storing 0 in location 1048
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1128 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1049
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 14
9999 mem: storing 15 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 15
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 15
9999 mem: storing 1050 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1050
9999 mem: storing 0 in location 1050
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1128 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1051
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 15
9999 mem: storing 16 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 16
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 16
9999 mem: storing 1052 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1052
9999 mem: storing 0 in location 1052
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1128 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1053
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 16
9999 mem: storing 17 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 17
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 17
9999 mem: storing 1054 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1054
9999 mem: storing 0 in location 1054
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1128 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1055
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 17
9999 mem: storing 18 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 18
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 18
9999 mem: storing 1056 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1056
9999 mem: storing 0 in location 1056
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1128 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1057
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 18
9999 mem: storing 19 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 19
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 19
9999 mem: storing 1058 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1058
9999 mem: storing 0 in location 1058
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1128 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1059
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 19
9999 mem: storing 20 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 20
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 20
9999 mem: storing 1060 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1060
9999 mem: storing 0 in location 1060
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1128 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1061
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 20
9999 mem: storing 21 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 21
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 21
9999 mem: storing 1062 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1062
9999 mem: storing 0 in location 1062
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1128 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1063
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 21
9999 mem: storing 22 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 22
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 22
9999 mem: storing 1064 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1064
9999 mem: storing 0 in location 1064
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1128 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1065
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 22
9999 mem: storing 23 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 23
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 23
9999 mem: storing 1066 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1066
9999 mem: storing 0 in location 1066
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1128 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1067
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 23
9999 mem: storing 24 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 24
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 24
9999 mem: storing 1068 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1068
9999 mem: storing 0 in location 1068
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1128 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1069
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 24
9999 mem: storing 25 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 25
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 25
9999 mem: storing 1070 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1070
9999 mem: storing 0 in location 1070
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1128 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1071
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 25
9999 mem: storing 26 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 26
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 26
9999 mem: storing 1072 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1072
9999 mem: storing 0 in location 1072
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1128 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1073
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 26
9999 mem: storing 27 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 27
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 27
9999 mem: storing 1074 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1074
9999 mem: storing 0 in location 1074
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1128 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1075
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 27
9999 mem: storing 28 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 28
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 28
9999 mem: storing 1076 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1076
9999 mem: storing 0 in location 1076
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1128 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1077
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 28
9999 mem: storing 29 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 29
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 29
9999 mem: storing 1078 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1078
9999 mem: storing 0 in location 1078
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1128 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1079
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 29
9999 mem: storing 30 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 30
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 30
9999 mem: storing 1080 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1080
9999 mem: storing 0 in location 1080
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1128 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1081
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 30
9999 mem: storing 31 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 31
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 31
9999 mem: storing 1082 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1082
9999 mem: storing 0 in location 1082
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1128 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1083
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 31
9999 mem: storing 32 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 32
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 32
9999 mem: storing 1084 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1084
9999 mem: storing 0 in location 1084
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1128 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1085
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 32
9999 mem: storing 33 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 33
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 33
9999 mem: storing 1086 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1086
9999 mem: storing 0 in location 1086
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 0
9999 mem: location 1128 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1087
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 33
9999 mem: storing 34 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 34
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 34
9999 mem: storing 1088 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1088
9999 mem: storing 0 in location 1088
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 0
9999 mem: location 1128 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1089
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 34
9999 mem: storing 35 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 35
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 35
9999 mem: storing 1090 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1090
9999 mem: storing 0 in location 1090
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 0
9999 mem: location 1128 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1091
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 35
9999 mem: storing 36 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 36
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 36
9999 mem: storing 1092 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1092
9999 mem: storing 0 in location 1092
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1128 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1093
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 36
9999 mem: storing 37 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 37
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 37
9999 mem: storing 1094 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1094
9999 mem: storing 0 in location 1094
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1128 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1095
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 37
9999 mem: storing 38 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 38
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 38
9999 mem: storing 1096 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1096
9999 mem: storing 0 in location 1096
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1128 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1097
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 38
9999 mem: storing 39 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 39
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 39
9999 mem: storing 1098 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1098
9999 mem: storing 0 in location 1098
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1128 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1099
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 39
9999 mem: storing 40 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 40
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 40
9999 mem: storing 1100 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1100
9999 mem: storing 0 in location 1100
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1128 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1101
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 40
9999 mem: storing 41 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 41
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 41
9999 mem: storing 1102 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 0
9999 mem: location 1128 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1103
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 41
9999 mem: storing 42 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 42
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 42
9999 mem: storing 1104 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1104
9999 mem: storing 0 in location 1104
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 0
9999 mem: location 1128 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1105
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 42
9999 mem: storing 43 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 43
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 43
9999 mem: storing 1106 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1106
9999 mem: storing 0 in location 1106
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 0
9999 mem: location 1128 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1107
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 43
9999 mem: storing 44 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 44
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 44
9999 mem: storing 1108 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1108
9999 mem: storing 0 in location 1108
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 0
9999 mem: location 1128 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1109
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 44
9999 mem: storing 45 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 45
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 45
9999 mem: storing 1110 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1110
9999 mem: storing 0 in location 1110
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1128 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1111
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 45
9999 mem: storing 46 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 46
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 46
9999 mem: storing 1112 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1112
9999 mem: storing 0 in location 1112
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 0
9999 mem: location 1128 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1113
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 46
9999 mem: storing 47 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 47
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 47
9999 mem: storing 1114 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1114
9999 mem: storing 0 in location 1114
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 0
9999 mem: location 1128 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1115
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 47
9999 mem: storing 48 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 48
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 48
9999 mem: storing 1116 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1116
9999 mem: storing 0 in location 1116
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 0
9999 mem: location 1128 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1117
9999 mem: storing 7 in location 1117
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 48
9999 mem: storing 49 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 49
9999 mem: location 1125 is 50
9999 mem: storing 0 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1124 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1126 is 49
9999 mem: storing 1118 in location 1128
 104 run: {curr-content: ("address" "character")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1129
 104 run: {curr-content: ("address" "character"), "lookup": ()} <- copy {0: "literal", "empty": ()}
9999 mem: location 1129 is 1118
9999 mem: storing 0 in location 1118
 104 run: {curr-color: ("address" "number")} <- get-address {curr: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 0
9999 mem: location 1128 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1130
 104 run: {curr-color: ("address" "number"), "lookup": ()} <- copy {7: "literal", "white": ()}
9999 mem: location 1130 is 1119
9999 mem: storing 7 in location 1119
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1126 is 49
9999 mem: storing 50 in location 1126
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1126 is 50
9999 mem: location 1125 is 50
9999 mem: storing 1 in location 1127
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1127 is 1
9998 run: jumping to instruction 17
 104 run: {x: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1131
 104 run: {x: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1131 is 1015
9999 mem: storing 0 in location 1015
 104 run: {x: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1123 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1131
 104 run: {x: ("address" "number"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1131 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1123 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 2 -> 1
9999 mem: storing 1012 in location 1005
9999 mem: incrementing refcount of 1012: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1012
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 900
9999 mem: incrementing refcount of 1012: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"": "literal-string"}
9999 mem: new string alloc: 1132
9999 mem: storing 1132 in location 1
9999 mem: incrementing refcount of 1132: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1132
9999 mem: location 900 is 1012
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1134
9999 mem: storing 11 in location 1135
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1137
9999 mem: incrementing refcount of 1132: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1138
9999 mem: incrementing refcount of 1012: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1139
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1140
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1140 is 10
9999 mem: storing 9 in location 1140
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1147
9999 mem: storing 1147 in location 1141
9999 mem: incrementing refcount of 1147: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1142
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1139 is 0
9999 mem: location 1142 is 1152
9999 mem: storing 0 in location 1152
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9999 mem: storing 1153 in location 1142
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1140 is 9
9999 mem: location 1142 is 1153
9999 mem: storing 9 in location 1153
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 0
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1142
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1142 is 1155
9999 mem: storing 1 in location 1155
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1142
9990 schedule: new-editor/scenario_editor-can-undo-and-redo-ctrl-u-2
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1139 is 0
9999 mem: location 1142 is 1156
9999 mem: storing 0 in location 1156
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1143
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1160
9999 mem: storing 4 in location 1161
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1163
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1164
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1166
9999 mem: storing 1166 in location 1165
9999 mem: incrementing refcount of 1166: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1163 is 167
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1165 is 1166
9999 mem: skipping refcount at 1166
9999 mem: storing 167 in location 1167
9999 mem: storing 0 in location 1168
9999 mem: storing 0 in location 1169
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1164 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1166
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1166
9999 mem: location 1143 is 1148
9999 mem: storing 1166 in location 1148
9999 mem: incrementing refcount of 1166: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1144
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1143 is 1148
9999 mem: location 1148 is 1166
9999 mem: location 1144 is 1149
9999 mem: storing 1166 in location 1149
9999 mem: incrementing refcount of 1166: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1145
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1143 is 1148
9999 mem: location 1148 is 1166
9999 mem: location 1145 is 1151
9999 mem: storing 1166 in location 1151
9999 mem: incrementing refcount of 1166: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1141 is 1147
9999 mem: location 1137 is 1132
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1170
9999 mem: storing 8 in location 1171
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1173
9999 mem: incrementing refcount of 1147: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1132 in location 1174
9999 mem: incrementing refcount of 1132: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1174 is 1132
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1174 is 1132
9999 mem: skipping refcount at 1132
9999 mem: storing 0 in location 1175
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 104 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1173 is 1147
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 2 -> 1
9999 mem: storing 1147 in location 1141
9999 mem: incrementing refcount of 1147: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1145
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1143 is 1148
9999 mem: location 1148 is 1166
9999 mem: location 1145 is 1151
9999 mem: decrementing refcount of 1166: 4 -> 3
9999 mem: storing 1166 in location 1151
9999 mem: incrementing refcount of 1166: 3 -> 4
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1138 is 1012
9999 mem: location 1141 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1180
9999 mem: storing 28 in location 1181
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1184
9999 mem: incrementing refcount of 1147: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1184 is 1147
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1185
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1183 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1210
9999 mem: storing 3 in location 1211
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1186
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1187
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1188
9999 mem: incrementing refcount of 1166: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 mem: storing 1166 in location 1189
9999 mem: incrementing refcount of 1166: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1214
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1166: 7 -> 6
9999 mem: storing 0 in location 1188
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1190
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1191
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1192
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1193
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1194
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1195
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1215
9999 mem: storing 6 in location 1216
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 0
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 0
9999 mem: location 1204 is 1150
9999 mem: storing 0 in location 1150
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1205
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1197 is 1
9999 mem: location 1205 is 1
9999 mem: storing 1 in location 1206
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1207
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1206 is 1
9999 mem: location 1207 is 0
9999 mem: storing 1 in location 1208
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 104 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: storing 1 in location 1155
 104 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: storing 0 in location 1156
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1166
9999 mem: location 1195 is 1151
9999 mem: decrementing refcount of 1166: 6 -> 5
9999 mem: storing 1166 in location 1151
9999 mem: incrementing refcount of 1166: 5 -> 6
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1209
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1209 is 1154
9999 mem: storing 1 in location 1154
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 mem: location 1183 is 1012
9999 mem: location 1184 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 0
9998 run: result 2 is 1012
9998 run: result 3 is 1147
9999 mem: decrementing refcount of 1012: 7 -> 6
9999 mem: storing 1012 in location 1138
9999 mem: incrementing refcount of 1012: 6 -> 7
9999 mem: decrementing refcount of 1147: 3 -> 2
9999 mem: storing 1147 in location 1141
9999 mem: incrementing refcount of 1147: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1141 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1146
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1146 is 1157
9999 mem: storing 1 in location 1157
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1141 is 1147
9999 mem: location 1138 is 1012
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1147
9999 mem: storing 1147 in location 2
9999 mem: incrementing refcount of 1147: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1223
9999 mem: storing 7 in location 1224
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 7 -> 8
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1227
9999 mem: incrementing refcount of 1147: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1228
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1229
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1180
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 8 -> 9
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1184
9999 mem: incrementing refcount of 1147: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1184 is 1147
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1185
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1183 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 9 -> 10
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1186
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1187
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1188
9999 mem: incrementing refcount of 1166: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 mem: storing 1166 in location 1189
9999 mem: incrementing refcount of 1166: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1214
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1166: 9 -> 8
9999 mem: storing 0 in location 1188
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1190
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1191
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1192
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1193
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1194
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1195
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 10 -> 11
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 11 -> 10
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 10 -> 11
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 0
9999 mem: location 1204 is 1150
9999 mem: storing 0 in location 1150
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1205
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1197 is 1
9999 mem: location 1205 is 1
9999 mem: storing 1 in location 1206
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1207
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1206 is 1
9999 mem: location 1207 is 0
9999 mem: storing 1 in location 1208
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 104 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: storing 1 in location 1155
 104 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: storing 0 in location 1156
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1166
9999 mem: location 1195 is 1151
9999 mem: decrementing refcount of 1166: 8 -> 7
9999 mem: storing 1166 in location 1151
9999 mem: incrementing refcount of 1166: 7 -> 8
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1209
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1209 is 1154
9999 mem: storing 1 in location 1154
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 mem: location 1183 is 1012
9999 mem: location 1184 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 0
9999 mem: storing 1 in location 1230
9999 mem: storing 0 in location 1231
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1226 is 1012
9999 mem: location 1231 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 11 -> 12
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1232
9999 mem: storing 25 in location 1233
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 12 -> 13
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 10
9999 mem: storing 1040 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1040
9999 mem: storing 32 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 13 -> 12
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 12 -> 13
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 11
9999 mem: storing 1042 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1042
9999 mem: storing 32 in location 1042
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1043
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 14 -> 13
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 13 -> 14
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 12
9999 mem: storing 1044 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1044
9999 mem: storing 32 in location 1044
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1045
9999 mem: storing 7 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 15 -> 14
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 14 -> 15
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 5 -> 6
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 13
9999 mem: storing 1046 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1254 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1046
9999 mem: storing 32 in location 1046
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1254 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1047
9999 mem: storing 7 in location 1047
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 16 -> 15
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 15 -> 16
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 16 -> 17
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 14
9999 mem: storing 1048 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1254 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1048
9999 mem: storing 32 in location 1048
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1254 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1049
9999 mem: storing 7 in location 1049
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 17 -> 16
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 16 -> 17
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 17 -> 18
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 15
9999 mem: storing 1050 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1254 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1050
9999 mem: storing 32 in location 1050
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1254 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1051
9999 mem: storing 7 in location 1051
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 18 -> 17
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 17 -> 18
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
9990 schedule: clear-line-delimited/editor-render/scenario_editor-can-undo-and-redo-ctrl-u-2
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 18 -> 19
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 16
9999 mem: storing 1052 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1254 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1052
9999 mem: storing 32 in location 1052
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1254 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1053
9999 mem: storing 7 in location 1053
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 19 -> 18
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 18 -> 19
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 9 -> 10
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 17
9999 mem: storing 1054 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1254 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1054
9999 mem: storing 32 in location 1054
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1254 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1055
9999 mem: storing 7 in location 1055
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 20 -> 19
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 19 -> 20
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 18
9999 mem: storing 1056 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1254 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1056
9999 mem: storing 32 in location 1056
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1254 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1057
9999 mem: storing 7 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 21 -> 20
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 20 -> 21
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 19
9999 mem: storing 1058 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1254 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1058
9999 mem: storing 32 in location 1058
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1254 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1059
9999 mem: storing 7 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 22 -> 21
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 21 -> 22
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1226 is 1012
9999 mem: location 1230 is 2
9999 mem: location 1228 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1259
9999 mem: storing 12 in location 1260
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
9999 mem: incrementing refcount of 1012: 22 -> 23
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1265
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1266
9999 mem: storing 1 in location 1267
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1268
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1270
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1263 is 2
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 23 -> 24
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1219
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 24 -> 23
9999 mem: storing 1012 in location 1262
9999 mem: incrementing refcount of 1012: 23 -> 24
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 0
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 24 -> 25
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 20
9999 mem: storing 1060 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1254 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1060
9999 mem: storing 9480 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 7
9999 mem: location 1254 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1061
9999 mem: storing 245 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 0
9999 mem: storing 1 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 1
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 21
9999 mem: storing 1062 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1254 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1062
9999 mem: storing 9480 in location 1062
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 7
9999 mem: location 1254 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1063
9999 mem: storing 245 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 1
9999 mem: storing 2 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 2
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 26 -> 27
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 22
9999 mem: storing 1064 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1254 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1064
9999 mem: storing 9480 in location 1064
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 7
9999 mem: location 1254 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1065
9999 mem: storing 245 in location 1065
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 2
9999 mem: storing 3 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 3
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 27 -> 28
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 23
9999 mem: storing 1066 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1254 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1066
9999 mem: storing 9480 in location 1066
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 7
9999 mem: location 1254 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1067
9999 mem: storing 245 in location 1067
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 3
9999 mem: storing 4 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 4
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 28 -> 29
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-can-undo-and-redo-ctrl-u-2
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 24
9999 mem: storing 1068 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1254 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1068
9999 mem: storing 9480 in location 1068
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 7
9999 mem: location 1254 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1069
9999 mem: storing 245 in location 1069
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 4
9999 mem: storing 5 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 5
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 29 -> 30
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 17 -> 18
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 25
9999 mem: storing 1070 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1254 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1070
9999 mem: storing 9480 in location 1070
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 7
9999 mem: location 1254 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1071
9999 mem: storing 245 in location 1071
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 5
9999 mem: storing 6 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 6
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 30 -> 31
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 18 -> 19
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 26
9999 mem: storing 1072 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1254 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1072
9999 mem: storing 9480 in location 1072
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 7
9999 mem: location 1254 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1073
9999 mem: storing 245 in location 1073
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 6
9999 mem: storing 7 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 7
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 19 -> 20
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 27
9999 mem: storing 1074 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1254 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1074
9999 mem: storing 9480 in location 1074
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 7
9999 mem: location 1254 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1075
9999 mem: storing 245 in location 1075
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 7
9999 mem: storing 8 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 8
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 20 -> 21
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 28
9999 mem: storing 1076 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1254 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1076
9999 mem: storing 9480 in location 1076
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 7
9999 mem: location 1254 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1077
9999 mem: storing 245 in location 1077
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 8
9999 mem: storing 9 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 9
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 33 -> 34
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 105 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 105 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1249
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 21 -> 22
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 29
9999 mem: storing 1078 in location 1254
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1254 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1255
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1078
9999 mem: storing 9480 in location 1078
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 7
9999 mem: location 1254 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1256
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1079
9999 mem: storing 245 in location 1079
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 9
9999 mem: storing 10 in location 1264
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 10
9999 mem: location 1265 is 9
9999 mem: storing 0 in location 1272
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1226 is 1012
9999 mem: location 1230 is 3
9999 mem: location 1228 is 0
9999 mem: location 1228 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 34 -> 35
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1219
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1221
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1222
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1219 is 3
9999 mem: location 1220 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1273
9999 mem: storing 6 in location 1274
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 35 -> 36
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 36 -> 35
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 35 -> 36
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1220 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 36 -> 37
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 37 -> 38
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 22 -> 23
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 30
9999 mem: storing 1080 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1254 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1080
9999 mem: storing 32 in location 1080
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1254 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1081
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 38 -> 37
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 37 -> 38
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 38 -> 39
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 23 -> 24
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 31
9999 mem: storing 1082 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1254 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1254 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 39 -> 38
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 38 -> 39
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 39 -> 40
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 24 -> 25
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 32
9999 mem: storing 1084 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1254 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1084
9999 mem: storing 32 in location 1084
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1254 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1256
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/scenario_editor-can-undo-and-redo-ctrl-u-2
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1085
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 40 -> 39
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 39 -> 40
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 40 -> 41
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 25 -> 26
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 33
9999 mem: storing 1086 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1254 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1086
9999 mem: storing 32 in location 1086
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1254 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1087
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 41 -> 40
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 40 -> 41
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 41 -> 42
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 26 -> 27
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 34
9999 mem: storing 1088 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1254 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1088
9999 mem: storing 32 in location 1088
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1254 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1089
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 42 -> 41
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 41 -> 42
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 42 -> 43
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 27 -> 28
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 35
9999 mem: storing 1090 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1254 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1090
9999 mem: storing 32 in location 1090
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1254 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1091
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 43 -> 42
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 42 -> 43
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 43 -> 44
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 28 -> 29
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 36
9999 mem: storing 1092 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1254 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1092
9999 mem: storing 32 in location 1092
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1254 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1093
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 44 -> 43
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 43 -> 44
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 44 -> 45
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 29 -> 30
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 37
9999 mem: storing 1094 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1254 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1094
9999 mem: storing 32 in location 1094
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1254 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1095
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 45 -> 44
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 44 -> 45
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 45 -> 46
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 30 -> 31
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 38
9999 mem: storing 1096 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1254 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1096
9999 mem: storing 32 in location 1096
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1254 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1097
9999 mem: storing 7 in location 1097
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 46 -> 45
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 45 -> 46
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 46 -> 47
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 31 -> 32
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 39
9999 mem: storing 1098 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1254 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1098
9999 mem: storing 32 in location 1098
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1254 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1099
9999 mem: storing 7 in location 1099
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 47 -> 46
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 46 -> 47
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1219 is 3
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1281
9999 mem: storing 7 in location 1282
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 47 -> 48
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1285
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1286
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1287
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1285 is 4
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 48 -> 49
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 49 -> 48
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 48 -> 49
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1284 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 49 -> 50
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 106 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1288
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1288 is 5
9999 mem: storing 0 in location 1289
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1285 is 4
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 50 -> 51
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 51 -> 50
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 50 -> 51
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1286 is 0
9999 mem: location 1287 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 51 -> 52
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 52 -> 53
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 32 -> 33
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 40
9999 mem: storing 1100 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1254 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1100
9999 mem: storing 32 in location 1100
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1254 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1101
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario_editor-can-undo-and-redo-ctrl-u-2
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 53 -> 52
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 52 -> 53
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 53 -> 54
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 33 -> 34
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 41
9999 mem: storing 1102 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1254 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1102
9999 mem: storing 32 in location 1102
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1254 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1103
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 54 -> 53
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 53 -> 54
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 42
9999 mem: storing 1104 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1254 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1104
9999 mem: storing 32 in location 1104
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1254 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1105
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 55 -> 54
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 54 -> 55
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 43
9999 mem: storing 1106 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1254 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1106
9999 mem: storing 32 in location 1106
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1254 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1107
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 56 -> 55
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 55 -> 56
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 56 -> 57
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 44
9999 mem: storing 1108 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1254 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1108
9999 mem: storing 32 in location 1108
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1254 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1109
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 57 -> 56
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 56 -> 57
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 57 -> 58
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 45
9999 mem: storing 1110 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1254 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1110
9999 mem: storing 32 in location 1110
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1254 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1111
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 58 -> 57
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 57 -> 58
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 46
9999 mem: storing 1112 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1254 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1112
9999 mem: storing 32 in location 1112
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1254 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1113
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 59 -> 58
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 58 -> 59
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 47
9999 mem: storing 1114 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1254 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1114
9999 mem: storing 32 in location 1114
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1254 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1115
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 60 -> 59
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 59 -> 60
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 48
9999 mem: storing 1116 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1116
9999 mem: location 1116 is 0
9999 mem: location 1117 is 7
9999 mem: location 1254 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1116
9999 mem: storing 32 in location 1116
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1254 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1117
9999 mem: storing 7 in location 1117
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 61 -> 60
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 60 -> 61
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 41 -> 42
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 49
9999 mem: storing 1118 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1118
9999 mem: location 1118 is 0
9999 mem: location 1119 is 7
9999 mem: location 1254 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1118
9999 mem: storing 32 in location 1118
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1254 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1119
9999 mem: storing 7 in location 1119
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 62 -> 61
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 61 -> 62
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
9990 schedule: clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario_editor-can-undo-and-redo-ctrl-u-2
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 105 run: jump {: "offset"}
9998 run: jumping to instruction 9
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1288 is 5
9999 mem: storing 1 in location 1289
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    type [abc]\n    press ctrl-u\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9992 load: after rewriting: type {"abc": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-u: ()}
9992 load: after rewriting: press {ctrl-u: ()}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'type' event starting at 1292
9999 mem: storing 'text' tag at 1292
9999 mem: storing character 97 at 1293
9999 mem: storing 'text' tag at 1296
9999 mem: storing character 98 at 1297
9999 mem: storing 'text' tag at 1300
9999 mem: storing character 99 at 1301
9999 mem: storing 'press' event starting at 1304
9999 mem: storing 'press' event starting at 1308
9999 mem: storing console in 1312
9999 mem: storing console data in 1314
 102 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1312
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1315
9999 mem: storing 14 in location 1316
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 62 -> 63
 103 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 0 -> 1
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1320
9999 mem: incrementing refcount of 1147: 6 -> 7
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1321
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1322
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1318 is 1012
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 63 -> 64
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 64 -> 63
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 63 -> 64
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1319 is 1312
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1262
9999 mem: incrementing refcount of 1312: 1 -> 2
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1262 is 1312
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 0
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1263
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 0
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1314
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1314 is 1290
9999 mem: storing 1290 in location 1264
9999 mem: incrementing refcount of 1290: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 5 in location 1265
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 0
9999 mem: location 1265 is 5
9999 mem: storing 0 in location 1266
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 0
9998 run: address to copy is 1292
9998 run: its type is event
9999 mem: location 1292 is 0
9999 mem: location 1293 is 97
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: storing 0 in location 1268
9999 mem: storing 97 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 0
9999 mem: location 1263 is 1313
9999 mem: storing 1 in location 1313
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1268 is 0
9999 mem: location 1269 is 97
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1262 is 1312
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1312
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1323
9999 mem: storing 97 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: decrementing refcount of 1312: 2 -> 1
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 1 -> 2
9999 mem: storing 1 in location 1327
9999 mem: storing 0 in location 1328
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1323 is 0
9999 mem: location 1324 is 97
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1329
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 mem: location 1323 is 0
9999 mem: location 1324 is 97
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1331
9999 mem: storing 85 in location 1332
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 64 -> 65
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 7 -> 8
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
9999 mem: storing 97 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1335 is 1147
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 65 -> 66
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 105 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 66 -> 67
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1342
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1343
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1344
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1345
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1346
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1347
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1348
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1349
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 97
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 1337 in location 1350
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1350 is 1337
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1351
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1362
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1367
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1383
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1384
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1389
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1390
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1391
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1392
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1396
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 0 in location 1400
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: storing 1 in location 1403
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1403 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1385
9999 mem: incrementing refcount of 1166: 8 -> 9
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1166
9999 mem: storing 1166 in location 1397
9999 mem: incrementing refcount of 1166: 9 -> 10
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1335 is 1147
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 97
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1418
9999 mem: storing 31 in location 1419
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1421
9999 mem: incrementing refcount of 1147: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1422
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1423
9999 mem: incrementing refcount of 1012: 67 -> 68
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1424
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1422 is 97
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1451
9999 mem: storing 5 in location 1452
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1454
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1455
9999 mem: incrementing refcount of 1166: 10 -> 11
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1458
9999 mem: storing 1458 in location 1456
9999 mem: incrementing refcount of 1458: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1456 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1461 is 0
9999 mem: location 1454 is 97
9999 mem: location 1456 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy to is 1459
9999 mem: storing 97 in location 1459
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1455 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1455 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1457
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1456 is 1458
9999 mem: location 1455 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy to is 1168
9999 mem: storing 1458 in location 1168
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 0
9999 mem: location 1461 is 0
9999 mem: location 1455 is 1166
9999 mem: location 1456 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy to is 1461
9999 mem: storing 1166 in location 1461
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 0
9999 mem: location 1461 is 1166
9999 mem: location 1457 is 0
9999 mem: location 1456 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy to is 1460
9999 mem: storing 0 in location 1460
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1457 is 0
9998 run: jump-if fell through
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1455 is 1166
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1458
9999 mem: storing 1458 in location 1214
9999 mem: incrementing refcount of 1458: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1458
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1458
9999 mem: location 1424 is 1151
9999 mem: decrementing refcount of 1166: 12 -> 11
9999 mem: storing 1458 in location 1151
9999 mem: incrementing refcount of 1458: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1425
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1426
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1427
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1428
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1425 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1429
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1430
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 68 -> 69
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 106 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1431
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 106 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1432
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1428 is 9
9999 mem: storing 8 in location 1433
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1433 is 8
9999 mem: storing 0 in location 1434
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1434 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1426 is 1156
9999 mem: storing 1 in location 1156
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 0
9999 mem: location 1461 is 1166
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1441
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1441 is 0
9999 mem: storing 1 in location 1442
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1442 is 1
9998 run: jump-unless fell through
 105 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1432 is 5
9999 mem: storing 4 in location 1443
 105 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1429 is 1
9999 mem: location 1443 is 4
9999 mem: storing 0 in location 1444
 105 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1430 is 0
9999 mem: location 1428 is 9
9999 mem: storing 0 in location 1445
 105 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1446
 105 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jump-if fell through
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1423 is 1012
9999 mem: location 1429 is 1
9999 mem: location 1430 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 70 -> 71
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1423 is 1012
9999 mem: location 1422 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 71 -> 72
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 42 -> 43
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 10
9999 mem: storing 1040 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 97
9999 mem: location 1255 is 1040
9999 mem: storing 97 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1440
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1421 is 1147
9999 mem: location 1423 is 1012
9999 mem: location 1440 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 9 -> 8
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 8 -> 9
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 71 -> 72
9999 mem: storing 0 in location 1340
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1387
9999 mem: incrementing refcount of 1166: 11 -> 12
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1354
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 0
9998 run: jumping to instruction 429
 104 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1397 is 1166
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1458
9999 mem: storing 1458 in location 1214
9999 mem: incrementing refcount of 1458: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1458
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1458
9999 mem: storing 1458 in location 1361
9999 mem: incrementing refcount of 1458: 5 -> 6
 104 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1361 is 1458
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 0
9999 mem: location 1461 is 1166
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 0
9999 mem: storing 0 in location 1214
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1399
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1353
9999 mem: incrementing refcount of 1000: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1348 is 1
9999 mem: location 1349 is 0
9999 mem: location 1385 is 1166
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1387 is 1166
9999 mem: location 1361 is 1458
9999 mem: location 1399 is 0
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1166 in location 1004
9999 mem: storing 1 in location 1005
9999 mem: storing 1 in location 1006
9999 mem: storing 1166 in location 1007
9999 mem: storing 1458 in location 1008
9999 mem: storing 0 in location 1009
9999 mem: storing 1 in location 1010
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1335 is 1147
9999 mem: location 1353 is 1000
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1451
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1454
9999 mem: incrementing refcount of 1147: 9 -> 10
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1455
9999 mem: incrementing refcount of 1000: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1456
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1455 is 1000
9999 mem: location 1456 is 1158
9999 mem: location 1158 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1163
9999 mem: incrementing refcount of 1000: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1164
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1462
9999 mem: storing 1462 in location 1165
9999 mem: incrementing refcount of 1462: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1000
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1462
9999 mem: skipping refcount at 1462
9999 mem: location 1165 is 1462
9999 mem: skipping refcount at 1462
9999 mem: storing 1000 in location 1463
9999 mem: storing 0 in location 1464
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1462
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1462
9999 mem: location 1456 is 1158
9999 mem: storing 1462 in location 1158
9999 mem: incrementing refcount of 1462: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1457
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1457 is 1159
9999 mem: storing 0 in location 1159
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1454 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 9 -> 10
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1147
9999 mem: location 1340 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 72 -> 71
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 71 -> 72
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1320
9999 mem: incrementing refcount of 1147: 9 -> 10
9999 mem: storing 0 in location 1330
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1321
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1322
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1318 is 1012
9999 mem: location 1321 is 1
9999 mem: location 1322 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 72 -> 73
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1016
9999 mem: storing 1 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 73 -> 72
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 72 -> 73
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1319 is 1312
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1262
9999 mem: incrementing refcount of 1312: 2 -> 3
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1262 is 1312
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 1
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1263
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 1
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1314
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1314 is 1290
9999 mem: storing 1290 in location 1264
9999 mem: incrementing refcount of 1290: 2 -> 3
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 5 in location 1265
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 1
9999 mem: location 1265 is 5
9999 mem: storing 0 in location 1266
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 1
9998 run: address to copy is 1296
9998 run: its type is event
9999 mem: location 1296 is 0
9999 mem: location 1297 is 98
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: storing 0 in location 1268
9999 mem: storing 98 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 1
9999 mem: location 1263 is 1313
9999 mem: storing 2 in location 1313
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1268 is 0
9999 mem: location 1269 is 98
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1262 is 1312
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1312
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1323
9999 mem: storing 98 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: decrementing refcount of 1312: 3 -> 2
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 2 -> 3
9999 mem: storing 1 in location 1327
9999 mem: storing 0 in location 1328
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1323 is 0
9999 mem: location 1324 is 98
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1329
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 mem: location 1323 is 0
9999 mem: location 1324 is 98
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1331
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 73 -> 74
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 10 -> 11
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
9999 mem: storing 98 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1335 is 1147
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 74 -> 75
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 105 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 75 -> 76
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1342
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1343
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1344
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1345
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1346
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1347
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1348
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1349
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 98
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 1337 in location 1350
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1350 is 1337
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1351
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1362
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1367
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1383
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1384
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1389
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1390
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1391
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1392
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1396
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 0 in location 1400
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: storing 1 in location 1403
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1403 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1385
9999 mem: incrementing refcount of 1166: 13 -> 14
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1458
9999 mem: storing 1458 in location 1397
9999 mem: incrementing refcount of 1458: 7 -> 8
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1335 is 1147
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 98
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1418
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1421
9999 mem: incrementing refcount of 1147: 11 -> 12
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1422
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1423
9999 mem: incrementing refcount of 1012: 76 -> 77
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1458
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1424
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1422 is 98
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1451
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1454
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1455
9999 mem: incrementing refcount of 1458: 8 -> 9
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1465
9999 mem: storing 1465 in location 1456
9999 mem: incrementing refcount of 1465: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1456 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 0
9999 mem: location 1467 is 0
9999 mem: location 1468 is 0
9999 mem: location 1454 is 98
9999 mem: location 1456 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy to is 1466
9999 mem: storing 98 in location 1466
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1455 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 0
9999 mem: location 1461 is 1166
9999 mem: location 1455 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 0
9999 mem: storing 0 in location 1457
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 0
9999 mem: location 1461 is 1166
9999 mem: location 1456 is 1465
9999 mem: location 1455 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy to is 1460
9999 mem: storing 1465 in location 1460
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 0
9999 mem: location 1468 is 0
9999 mem: location 1455 is 1458
9999 mem: location 1456 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy to is 1468
9999 mem: storing 1458 in location 1468
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1458
9999 mem: location 1457 is 0
9999 mem: location 1456 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy to is 1467
9999 mem: storing 0 in location 1467
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1457 is 0
9998 run: jump-if fell through
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1455 is 1458
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 1465
9999 mem: storing 1465 in location 1214
9999 mem: incrementing refcount of 1465: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1465
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1465
9999 mem: location 1424 is 1151
9999 mem: decrementing refcount of 1458: 10 -> 9
9999 mem: storing 1465 in location 1151
9999 mem: incrementing refcount of 1465: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1425
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1426
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1427
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1428
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1425 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1429
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1430
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 77 -> 78
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 106 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1431
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 106 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1432
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1428 is 9
9999 mem: storing 8 in location 1433
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1433 is 8
9999 mem: storing 0 in location 1434
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1434 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1426 is 1156
9999 mem: storing 2 in location 1156
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1441
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1441 is 0
9999 mem: storing 1 in location 1442
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1442 is 1
9998 run: jump-unless fell through
 105 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1432 is 5
9999 mem: storing 4 in location 1443
 105 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1429 is 1
9999 mem: location 1443 is 4
9999 mem: storing 0 in location 1444
 105 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1430 is 1
9999 mem: location 1428 is 9
9999 mem: storing 0 in location 1445
9990 schedule: insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 105 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1446
 105 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jump-if fell through
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1423 is 1012
9999 mem: location 1429 is 1
9999 mem: location 1430 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 79 -> 80
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 1
9999 mem: location 1222 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1423 is 1012
9999 mem: location 1422 is 98
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 98
  90 print-character: 98 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 11
9999 mem: storing 1042 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 98
9999 mem: location 1255 is 1042
9999 mem: storing 98 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1440
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1421 is 1147
9999 mem: location 1423 is 1012
9999 mem: location 1440 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 12 -> 11
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 11 -> 12
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 80 -> 81
9999 mem: storing 0 in location 1340
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1387
9999 mem: incrementing refcount of 1166: 14 -> 15
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1354
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1462
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1462
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1462 in location 1213
9999 mem: incrementing refcount of 1462: 2 -> 3
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1213 is 1462
9999 mem: skipping refcount at 1462
9999 mem: location 1463 is 1000
9999 mem: location 1464 is 0
9999 mem: location 1213 is 1462
9999 mem: skipping refcount at 1462
9998 run: address to copy is 1463
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1463 is 1000
9999 mem: storing 1000 in location 1214
9999 mem: incrementing refcount of 1000: 3 -> 4
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1214 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1353
9999 mem: incrementing refcount of 1000: 4 -> 5
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1360
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1360 is 1002
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1377
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1398
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1465
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1214
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1398 is 1009
9999 mem: storing 0 in location 1009
 104 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1379
 104 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1379 is 1005
9999 mem: storing 1 in location 1005
 104 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 1
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1380
 104 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1380 is 1006
9999 mem: storing 2 in location 1006
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1381
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: location 1381 is 1007
9999 mem: decrementing refcount of 1166: 15 -> 14
9999 mem: storing 1166 in location 1007
9999 mem: incrementing refcount of 1166: 14 -> 15
 104 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1147
9999 mem: location 1340 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 81 -> 80
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 80 -> 81
9999 mem: decrementing refcount of 1147: 12 -> 11
9999 mem: storing 1147 in location 1320
9999 mem: incrementing refcount of 1147: 11 -> 12
9999 mem: storing 0 in location 1330
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1321
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1322
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1318 is 1012
9999 mem: location 1321 is 1
9999 mem: location 1322 is 2
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 81 -> 82
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1220
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1222 is 1016
9999 mem: storing 2 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 81 -> 82
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1319 is 1312
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1262
9999 mem: incrementing refcount of 1312: 3 -> 4
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1262 is 1312
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 2
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1263
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 2
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1314
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1314 is 1290
9999 mem: storing 1290 in location 1264
9999 mem: incrementing refcount of 1290: 3 -> 4
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 5 in location 1265
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 2
9999 mem: location 1265 is 5
9999 mem: storing 0 in location 1266
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 2
9998 run: address to copy is 1300
9998 run: its type is event
9999 mem: location 1300 is 0
9999 mem: location 1301 is 99
9999 mem: location 1302 is 0
9999 mem: location 1303 is 0
9999 mem: storing 0 in location 1268
9999 mem: storing 99 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 2
9999 mem: location 1263 is 1313
9999 mem: storing 3 in location 1313
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1268 is 0
9999 mem: location 1269 is 99
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1262 is 1312
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1312
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1323
9999 mem: storing 99 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: decrementing refcount of 1312: 4 -> 3
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 3 -> 4
9999 mem: storing 1 in location 1327
9999 mem: storing 0 in location 1328
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1323 is 0
9999 mem: location 1324 is 99
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1329
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 mem: location 1323 is 0
9999 mem: location 1324 is 99
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1331
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 12 -> 13
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
9999 mem: storing 99 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1335 is 1147
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 83 -> 84
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 105 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1342
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1343
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1344
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1345
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1346
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1347
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1348
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1349
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 99
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 1337 in location 1350
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1350 is 1337
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1351
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1362
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1367
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1383
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1384
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1389
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1390
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1391
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1391 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1392
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1392 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1396
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 0 in location 1400
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: storing 1 in location 1403
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1403 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1385
9999 mem: incrementing refcount of 1166: 15 -> 16
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1465
9999 mem: storing 1465 in location 1397
9999 mem: incrementing refcount of 1465: 5 -> 6
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1335 is 1147
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 99
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1418
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1421
9999 mem: incrementing refcount of 1147: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1422
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1423
9999 mem: incrementing refcount of 1012: 85 -> 86
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1465
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1424
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1422 is 99
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1451
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1454
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1455
9999 mem: incrementing refcount of 1465: 6 -> 7
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1469
9999 mem: storing 1469 in location 1456
9999 mem: incrementing refcount of 1469: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 0
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1454 is 99
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy to is 1470
9999 mem: storing 99 in location 1470
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1455 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1458
9999 mem: location 1455 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 0
9999 mem: storing 0 in location 1457
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1458
9999 mem: location 1456 is 1469
9999 mem: location 1455 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy to is 1467
9999 mem: storing 1469 in location 1467
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1455 is 1465
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy to is 1472
9999 mem: storing 1465 in location 1472
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1457 is 0
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy to is 1471
9999 mem: storing 0 in location 1471
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1457 is 0
9998 run: jump-if fell through
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1455 is 1465
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 1469
9999 mem: storing 1469 in location 1214
9999 mem: incrementing refcount of 1469: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: location 1424 is 1151
9999 mem: decrementing refcount of 1465: 8 -> 7
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1425
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1426
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1427
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1421 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1428
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1425 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1429
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1430
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 86 -> 87
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 106 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1431
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1423 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 87 -> 88
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 106 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1432
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1428 is 9
9999 mem: storing 8 in location 1433
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1433 is 8
9999 mem: storing 0 in location 1434
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1434 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1426 is 1156
9999 mem: location 1156 is 2
9999 mem: location 1426 is 1156
9999 mem: storing 3 in location 1156
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1424 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1471
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1441
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1441 is 0
9999 mem: storing 1 in location 1442
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1442 is 1
9998 run: jump-unless fell through
 105 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1432 is 5
9999 mem: storing 4 in location 1443
 105 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1429 is 1
9999 mem: location 1443 is 4
9999 mem: storing 0 in location 1444
 105 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1430 is 2
9999 mem: location 1428 is 9
9999 mem: storing 0 in location 1445
 105 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1444 is 0
9999 mem: location 1445 is 0
9999 mem: storing 0 in location 1446
 105 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jump-if fell through
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1423 is 1012
9999 mem: location 1429 is 1
9999 mem: location 1430 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 88 -> 89
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 2
9999 mem: location 1222 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1423 is 1012
9999 mem: location 1422 is 99
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 89 -> 90
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1237
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 99
  90 print-character: 99 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 12
9999 mem: storing 1044 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 99
9999 mem: location 1255 is 1044
9999 mem: storing 99 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1440
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1421 is 1147
9999 mem: location 1423 is 1012
9999 mem: location 1440 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 89 -> 90
9999 mem: storing 0 in location 1340
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1387
9999 mem: incrementing refcount of 1166: 16 -> 17
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1354
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1462
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1462
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1462 in location 1213
9999 mem: incrementing refcount of 1462: 3 -> 4
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1213 is 1462
9999 mem: skipping refcount at 1462
9999 mem: location 1463 is 1000
9999 mem: location 1464 is 0
9999 mem: location 1213 is 1462
9999 mem: skipping refcount at 1462
9998 run: address to copy is 1463
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1463 is 1000
9999 mem: storing 1000 in location 1214
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1214 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1353
9999 mem: incrementing refcount of 1000: 6 -> 7
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 0
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1011 is 0
9999 mem: location 1353 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1360
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1360 is 1002
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 1
9999 mem: storing 1 in location 1377
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1377 is 1
9998 run: jump-unless fell through
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1009
9999 mem: storing 1009 in location 1398
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1471
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1214
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1398 is 1009
9999 mem: storing 0 in location 1009
 104 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1005
9999 mem: storing 1005 in location 1379
 104 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1379 is 1005
9999 mem: storing 1 in location 1005
 104 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 2
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1006
9999 mem: storing 1006 in location 1380
 104 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 3
9999 mem: location 1380 is 1006
9999 mem: storing 3 in location 1006
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1360 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1166
9999 mem: location 1005 is 1
9999 mem: location 1006 is 3
9999 mem: location 1007 is 1166
9999 mem: location 1008 is 1458
9999 mem: location 1009 is 0
9999 mem: location 1010 is 1
9999 mem: location 1360 is 1002
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1381
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: location 1381 is 1007
9999 mem: decrementing refcount of 1166: 17 -> 16
9999 mem: storing 1166 in location 1007
9999 mem: incrementing refcount of 1166: 16 -> 17
 104 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1147
9999 mem: location 1340 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 90 -> 89
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 89 -> 90
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1320
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: storing 0 in location 1330
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1321
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1322
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1318 is 1012
9999 mem: location 1321 is 1
9999 mem: location 1322 is 3
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 90 -> 91
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1220
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1222 is 1016
9999 mem: storing 3 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 91 -> 90
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 90 -> 91
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1319 is 1312
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1262
9999 mem: incrementing refcount of 1312: 4 -> 5
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1262 is 1312
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 3
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1263
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 3
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1314
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1314 is 1290
9999 mem: storing 1290 in location 1264
9999 mem: incrementing refcount of 1290: 4 -> 5
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 5 in location 1265
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 3
9999 mem: location 1265 is 5
9999 mem: storing 0 in location 1266
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 3
9998 run: address to copy is 1304
9998 run: its type is event
9999 mem: location 1304 is 0
9999 mem: location 1305 is 21
9999 mem: location 1306 is 0
9999 mem: location 1307 is 0
9999 mem: storing 0 in location 1268
9999 mem: storing 21 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 3
9999 mem: location 1263 is 1313
9999 mem: storing 4 in location 1313
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1268 is 0
9999 mem: location 1269 is 21
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1262 is 1312
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 21, 0, 0]
9998 run: result 1 is 1312
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1323
9999 mem: storing 21 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: decrementing refcount of 1312: 5 -> 4
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 4 -> 5
9999 mem: storing 1 in location 1327
9999 mem: storing 0 in location 1328
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1323 is 0
9999 mem: location 1324 is 21
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1329
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 mem: location 1323 is 0
9999 mem: location 1324 is 21
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1331
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 91 -> 92
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 14 -> 15
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
9999 mem: storing 21 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1335 is 1147
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 92 -> 93
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 105 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 93 -> 94
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1342
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1343
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1344
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1345
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1346
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1347
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1348
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1349
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 21
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 1337 in location 1350
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1350 is 1337
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 21
9999 mem: storing 0 in location 1351
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 21
9999 mem: storing 0 in location 1362
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 21
9999 mem: storing 0 in location 1367
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 21
9999 mem: storing 0 in location 1383
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 21
9999 mem: storing 0 in location 1384
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 21
9999 mem: storing 1 in location 1389
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1389 is 1
9998 run: jump-unless fell through
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1385
9999 mem: incrementing refcount of 1166: 17 -> 18
 104 run: {deleted-cells: ("address" "shared" "duplex-list" "character")} <- delete-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1335 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1262
9999 mem: incrementing refcount of 1147: 15 -> 16
 105 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1166
9999 mem: storing 1166 in location 1263
9999 mem: incrementing refcount of 1166: 18 -> 19
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1264
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1264 is 1151
9999 mem: location 1151 is 1469
9999 mem: storing 1469 in location 1265
9999 mem: incrementing refcount of 1469: 5 -> 6
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1264 is 1151
9999 mem: location 1151 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1471
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1266
9990 schedule: delete-to-start-of-line/handle-keyboard-event/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 105 run: {at-start-of-text?: "boolean"} <- equal {start: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1469
9999 mem: location 1263 is 1166
9999 mem: storing 0 in location 1267
 105 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 105 run: {curr: "character"} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1265 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1265 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is "character"
9999 mem: location 1470 is 99
9999 mem: storing 99 in location 1268
 105 run: {at-start-of-line?: "boolean"} <- equal {curr: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1268 is 99
9999 mem: storing 0 in location 1269
 105 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- prev_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1472
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1472 is 1465
9999 mem: storing 1465 in location 1214
9999 mem: incrementing refcount of 1465: 7 -> 8
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1214 is 1465
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1465
9999 mem: decrementing refcount of 1469: 8 -> 7
9999 mem: storing 1465 in location 1265
9999 mem: incrementing refcount of 1465: 8 -> 9
 105 run: assert {start: ("address" "shared" "duplex-list" "character")}, {"delete-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1265 is 1465
 105 run: jump {: "offset"}
9998 run: jumping to instruction 7
 105 run: {at-start-of-text?: "boolean"} <- equal {start: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1465
9999 mem: location 1263 is 1166
9999 mem: storing 0 in location 1267
 105 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 105 run: {curr: "character"} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1265 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1265 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1466
9998 run: its type is "character"
9999 mem: location 1466 is 98
9999 mem: storing 98 in location 1268
 105 run: {at-start-of-line?: "boolean"} <- equal {curr: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1268 is 98
9999 mem: storing 0 in location 1269
 105 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- prev_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1458
9999 mem: storing 1458 in location 1214
9999 mem: incrementing refcount of 1458: 9 -> 10
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1214 is 1458
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1458
9999 mem: decrementing refcount of 1465: 10 -> 9
9999 mem: storing 1458 in location 1265
9999 mem: incrementing refcount of 1458: 10 -> 11
 105 run: assert {start: ("address" "shared" "duplex-list" "character")}, {"delete-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1265 is 1458
 105 run: jump {: "offset"}
9998 run: jumping to instruction 7
 105 run: {at-start-of-text?: "boolean"} <- equal {start: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1458
9999 mem: location 1263 is 1166
9999 mem: storing 0 in location 1267
 105 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 105 run: {curr: "character"} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1265 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1265 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1459
9998 run: its type is "character"
9999 mem: location 1459 is 97
9999 mem: storing 97 in location 1268
 105 run: {at-start-of-line?: "boolean"} <- equal {curr: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1268 is 97
9999 mem: storing 0 in location 1269
 105 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- prev_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1461
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1461 is 1166
9999 mem: storing 1166 in location 1214
9999 mem: incrementing refcount of 1166: 19 -> 20
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1214 is 1166
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1166
9999 mem: decrementing refcount of 1458: 12 -> 11
9999 mem: storing 1166 in location 1265
9999 mem: incrementing refcount of 1166: 20 -> 21
 105 run: assert {start: ("address" "shared" "duplex-list" "character")}, {"delete-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1265 is 1166
 105 run: jump {: "offset"}
9998 run: jumping to instruction 7
 105 run: {at-start-of-text?: "boolean"} <- equal {start: ("address" "shared" "duplex-list" "character")}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1166
9999 mem: location 1263 is 1166
9999 mem: storing 1 in location 1267
 105 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 15
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- next_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 21 -> 22
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1458
9999 mem: storing 1458 in location 1214
9999 mem: incrementing refcount of 1458: 11 -> 12
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1458
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1458
9999 mem: storing 1458 in location 1270
9999 mem: incrementing refcount of 1458: 12 -> 13
 105 run: remove-between_2 {start: ("address" "shared" "duplex-list" "character")}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1166
9999 mem: location 1266 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1218
9999 mem: incrementing refcount of 1166: 22 -> 23
 106 run: {end: ("address" "shared" "duplex-list" "character"), "contained-in": "start"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1219
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1218 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1218 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1458
9999 mem: storing 1458 in location 1220
9999 mem: incrementing refcount of 1458: 13 -> 14
 106 run: {nothing-to-delete?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1220 is 1458
9999 mem: location 1219 is 0
9999 mem: storing 0 in location 1221
 106 run: jump-unless {nothing-to-delete?: "boolean"}, {1: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 7
 106 run: assert {next: ("address" "shared" "duplex-list" "character")}, {"malformed duplex list": "literal-string"}
9999 mem: location 1220 is 1458
 106 run: {next: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1220 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1220 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy to is 1461
9999 mem: storing 0 in location 1461
 106 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1218 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1219 is 0
9999 mem: location 1218 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy to is 1168
9999 mem: storing 0 in location 1168
 106 run: jump-if {end: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: reply {start: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1166
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1265 is 1166
9999 mem: location 1264 is 1151
9999 mem: decrementing refcount of 1469: 7 -> 6
9999 mem: storing 1166 in location 1151
9999 mem: incrementing refcount of 1166: 23 -> 24
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1271
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1262 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1272
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1271 is 0
9999 mem: location 1272 is 1156
9999 mem: storing 0 in location 1156
 105 run: reply {result: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1458
9999 mem: location 1262 is 1147
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1458
9999 mem: storing 1458 in location 1386
9999 mem: incrementing refcount of 1458: 14 -> 15
 104 run: jump-unless {deleted-cells: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1386 is 1458
9998 run: jump-unless fell through
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1387
9999 mem: incrementing refcount of 1166: 24 -> 25
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1354
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: storing 1120 in location 1353
9999 mem: incrementing refcount of 1120: 0 -> 1
 104 run: {deleted-until: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1166
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 25 -> 26
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1214
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1388
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {2: "literal", "delete-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {deleted-cells: ("address" "shared" "duplex-list" "character"), "deleted": ()}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "delete-from": (), "lookup": ()}, {deleted-until: ("address" "shared" "duplex-list" "character")}, {0: "literal", "never-coalesce": ()}
9999 mem: location 1348 is 1
9999 mem: location 1349 is 3
9999 mem: location 1385 is 1166
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1387 is 1166
9999 mem: location 1386 is 1458
9999 mem: location 1345 is 1151
9999 mem: location 1151 is 1166
9999 mem: location 1388 is 0
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 2 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 3 in location 1123
9999 mem: storing 1166 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1166 in location 1127
9999 mem: storing 1458 in location 1128
9999 mem: storing 1166 in location 1129
9999 mem: storing 0 in location 1130
9999 mem: storing 0 in location 1131
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1335 is 1147
9999 mem: location 1353 is 1120
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1451
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1454
9999 mem: incrementing refcount of 1147: 16 -> 17
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1455
9999 mem: incrementing refcount of 1120: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1456
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1455 is 1120
9999 mem: location 1456 is 1158
9999 mem: location 1158 is 1462
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1163
9999 mem: incrementing refcount of 1120: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1462 in location 1164
9999 mem: incrementing refcount of 1462: 4 -> 5
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1473
9999 mem: storing 1473 in location 1165
9999 mem: incrementing refcount of 1473: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1120
9999 mem: location 1164 is 1462
9999 mem: location 1165 is 1473
9999 mem: skipping refcount at 1473
9999 mem: location 1165 is 1473
9999 mem: skipping refcount at 1473
9999 mem: storing 1120 in location 1474
9999 mem: storing 1462 in location 1475
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1473
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1473
9999 mem: location 1456 is 1158
9999 mem: decrementing refcount of 1462: 5 -> 4
9999 mem: storing 1473 in location 1158
9999 mem: incrementing refcount of 1473: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1454 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1457
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1457 is 1159
9999 mem: storing 0 in location 1159
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1454 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 17 -> 16
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 16 -> 17
 104 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1340
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1147
9999 mem: location 1340 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 94 -> 93
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 93 -> 94
9999 mem: decrementing refcount of 1147: 17 -> 16
9999 mem: storing 1147 in location 1320
9999 mem: incrementing refcount of 1147: 16 -> 17
9999 mem: storing 1 in location 1330
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 103 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1223
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 94 -> 95
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1227
9999 mem: incrementing refcount of 1147: 17 -> 18
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1228
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1229
 104 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1180
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 95 -> 96
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1184
9999 mem: incrementing refcount of 1147: 18 -> 19
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1184 is 1147
9998 run: jumping to instruction 5
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1185
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1183 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 96 -> 97
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 106 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1186
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1187
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1188
9999 mem: incrementing refcount of 1166: 26 -> 27
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 mem: storing 1166 in location 1189
9999 mem: incrementing refcount of 1166: 27 -> 28
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 28 -> 29
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1166: 29 -> 28
9999 mem: storing 0 in location 1188
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1190
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1191
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1192
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1193
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1194
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1195
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 97 -> 98
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 98 -> 97
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 97 -> 98
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 0
9998 run: jumping to instruction 68
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 0
9999 mem: location 1204 is 1150
9999 mem: storing 0 in location 1150
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 1 in location 1205
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1197 is 1
9999 mem: location 1205 is 1
9999 mem: storing 1 in location 1206
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1207
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1206 is 1
9999 mem: location 1207 is 0
9999 mem: storing 1 in location 1208
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: storing 1 in location 1155
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: storing 0 in location 1156
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1166
9999 mem: location 1195 is 1151
9999 mem: decrementing refcount of 1166: 28 -> 27
9999 mem: storing 1166 in location 1151
9999 mem: incrementing refcount of 1166: 27 -> 28
 105 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1209
 105 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1209 is 1154
9999 mem: storing 1 in location 1154
 105 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 mem: location 1183 is 1012
9999 mem: location 1184 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9998 run: result 1 is 0
9999 mem: storing 1 in location 1230
9999 mem: storing 0 in location 1231
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1226 is 1012
9999 mem: location 1231 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 98 -> 99
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 99 -> 100
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 45 -> 46
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 10
9999 mem: storing 1040 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1040
9999 mem: storing 32 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 100 -> 99
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 99 -> 100
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 100 -> 101
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 46 -> 47
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 11
9999 mem: storing 1042 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 101 -> 100
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 100 -> 101
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 101 -> 102
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 47 -> 48
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 12
9999 mem: storing 1044 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1044
9999 mem: storing 32 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 102 -> 101
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 101 -> 102
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 102 -> 103
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 48 -> 49
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 13
9999 mem: storing 1046 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1254 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1046
9999 mem: storing 32 in location 1046
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1254 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1047
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 103 -> 102
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 102 -> 103
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 103 -> 104
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 49 -> 50
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 14
9999 mem: storing 1048 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1254 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1048
9999 mem: storing 32 in location 1048
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1254 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1049
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 104 -> 103
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 103 -> 104
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 104 -> 105
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 50 -> 51
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 15
9999 mem: storing 1050 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1254 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1050
9999 mem: storing 32 in location 1050
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1254 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1051
9999 mem: storing 7 in location 1051
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 105 -> 104
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 104 -> 105
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 105 -> 106
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 51 -> 52
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 16
9999 mem: storing 1052 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1254 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1052
9999 mem: storing 32 in location 1052
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1254 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1053
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 106 -> 105
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 105 -> 106
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 106 -> 107
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 52 -> 53
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 17
9999 mem: storing 1054 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1254 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1054
9999 mem: storing 32 in location 1054
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1254 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1055
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 107 -> 106
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 106 -> 107
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 107 -> 108
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 53 -> 54
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 18
9999 mem: storing 1056 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1254 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1056
9999 mem: storing 32 in location 1056
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1254 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1057
9999 mem: storing 7 in location 1057
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 108 -> 107
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 107 -> 108
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 108 -> 109
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 54 -> 55
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 19
9999 mem: storing 1058 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1254 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1058
9999 mem: storing 32 in location 1058
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1254 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1059
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 109 -> 108
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 108 -> 109
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 104 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1226 is 1012
9999 mem: location 1230 is 2
9999 mem: location 1228 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
9999 mem: incrementing refcount of 1012: 109 -> 110
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 105 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1265
 105 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 9
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1268
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1270
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1263 is 2
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 110 -> 111
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 1015
9999 mem: storing 2 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 111 -> 110
9999 mem: storing 1012 in location 1262
9999 mem: incrementing refcount of 1012: 110 -> 111
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 0
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 111 -> 112
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 55 -> 56
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 20
9999 mem: storing 1060 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1254 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1060
9999 mem: storing 9480 in location 1060
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1254 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1061
9999 mem: storing 245 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 0
9999 mem: storing 1 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 1
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 112 -> 113
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 56 -> 57
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 21
9999 mem: storing 1062 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1254 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1062
9999 mem: storing 9480 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1254 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1063
9999 mem: storing 245 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 1
9999 mem: storing 2 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 2
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 113 -> 114
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 57 -> 58
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 22
9999 mem: storing 1064 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1254 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1064
9999 mem: storing 9480 in location 1064
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1254 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1065
9999 mem: storing 245 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 2
9999 mem: storing 3 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 3
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 114 -> 115
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 58 -> 59
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 23
9999 mem: storing 1066 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1254 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1066
9999 mem: storing 9480 in location 1066
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1254 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1067
9999 mem: storing 245 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 3
9999 mem: storing 4 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 4
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 115 -> 116
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 59 -> 60
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 24
9999 mem: storing 1068 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1254 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1068
9999 mem: storing 9480 in location 1068
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1254 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1069
9999 mem: storing 245 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 4
9999 mem: storing 5 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 5
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 116 -> 117
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 60 -> 61
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 25
9999 mem: storing 1070 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1254 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1070
9999 mem: storing 9480 in location 1070
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1254 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1071
9999 mem: storing 245 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 5
9999 mem: storing 6 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 6
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 117 -> 118
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 61 -> 62
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 26
9999 mem: storing 1072 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1254 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1072
9999 mem: storing 9480 in location 1072
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1254 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1073
9999 mem: storing 245 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 6
9999 mem: storing 7 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 7
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 118 -> 119
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 62 -> 63
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 27
9999 mem: storing 1074 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1254 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1074
9999 mem: storing 9480 in location 1074
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1254 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1075
9999 mem: storing 245 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 7
9999 mem: storing 8 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 8
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 119 -> 120
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 63 -> 64
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 28
9999 mem: storing 1076 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1254 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1076
9999 mem: storing 9480 in location 1076
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1254 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1077
9999 mem: storing 245 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 8
9999 mem: storing 9 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 9
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 120 -> 121
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 64 -> 65
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 29
9999 mem: storing 1078 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1254 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1078
9999 mem: storing 9480 in location 1078
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1254 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1079
9999 mem: storing 245 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 9
9999 mem: storing 10 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 10
9999 mem: location 1265 is 9
9999 mem: storing 0 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 27
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 104 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1226 is 1012
9999 mem: location 1230 is 3
9999 mem: location 1228 is 0
9999 mem: location 1228 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 121 -> 122
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1219
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1221
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1222
 105 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jumping to instruction 10
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1219 is 3
9999 mem: location 1220 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 122 -> 123
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 123 -> 122
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 122 -> 123
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1220 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 123 -> 124
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 124 -> 125
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 30
9999 mem: storing 1080 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1254 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1080
9999 mem: storing 32 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1254 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 125 -> 124
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 124 -> 125
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 125 -> 126
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 31
9999 mem: storing 1082 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1254 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1082
9999 mem: storing 32 in location 1082
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1254 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1083
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 126 -> 125
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 125 -> 126
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 126 -> 127
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 67 -> 68
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 32
9999 mem: storing 1084 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1254 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1084
9999 mem: storing 32 in location 1084
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1254 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1085
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 127 -> 126
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 126 -> 127
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 127 -> 128
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 33
9999 mem: storing 1086 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1254 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1086
9999 mem: storing 32 in location 1086
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1254 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1087
9999 mem: storing 7 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 128 -> 127
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 127 -> 128
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 128 -> 129
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 69 -> 70
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 34
9999 mem: storing 1088 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1254 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1088
9999 mem: storing 32 in location 1088
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1254 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1089
9999 mem: storing 7 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 129 -> 128
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 128 -> 129
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 129 -> 130
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 70 -> 71
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 35
9999 mem: storing 1090 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1254 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1090
9999 mem: storing 32 in location 1090
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1254 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1091
9999 mem: storing 7 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 130 -> 129
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 129 -> 130
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 130 -> 131
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 71 -> 72
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 36
9999 mem: storing 1092 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1254 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1092
9999 mem: storing 32 in location 1092
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1254 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1093
9999 mem: storing 7 in location 1093
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 131 -> 130
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 130 -> 131
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 131 -> 132
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 72 -> 73
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 37
9999 mem: storing 1094 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1254 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1094
9999 mem: storing 32 in location 1094
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1254 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1095
9999 mem: storing 7 in location 1095
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 132 -> 131
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 131 -> 132
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 132 -> 133
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 73 -> 74
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 38
9999 mem: storing 1096 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1254 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1096
9999 mem: storing 32 in location 1096
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1254 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1097
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 133 -> 132
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 132 -> 133
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 133 -> 134
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 74 -> 75
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 39
9999 mem: storing 1098 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1254 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1098
9999 mem: storing 32 in location 1098
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1254 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1099
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 134 -> 133
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 133 -> 134
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1219 is 3
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1281
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 134 -> 135
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1285
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1286
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1287
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1285 is 4
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 135 -> 136
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 136 -> 135
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 135 -> 136
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1284 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 136 -> 137
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 107 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1288
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1288 is 5
9999 mem: storing 0 in location 1289
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1285 is 4
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 137 -> 138
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 138 -> 137
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 137 -> 138
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1286 is 0
9999 mem: location 1287 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 138 -> 139
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 139 -> 140
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 40
9999 mem: storing 1100 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1254 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1100
9999 mem: storing 32 in location 1100
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1254 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1101
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 140 -> 139
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 139 -> 140
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 140 -> 141
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 41
9999 mem: storing 1102 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1254 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1102
9999 mem: storing 32 in location 1102
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1254 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1103
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 141 -> 140
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 140 -> 141
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 141 -> 142
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 42
9999 mem: storing 1104 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1254 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1104
9999 mem: storing 32 in location 1104
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1254 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1105
9999 mem: storing 7 in location 1105
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 142 -> 141
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 141 -> 142
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 142 -> 143
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 78 -> 79
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 43
9999 mem: storing 1106 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1254 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1106
9999 mem: storing 32 in location 1106
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1254 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1107
9999 mem: storing 7 in location 1107
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 143 -> 142
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 142 -> 143
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 143 -> 144
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 79 -> 80
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 44
9999 mem: storing 1108 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1254 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1108
9999 mem: storing 32 in location 1108
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1254 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1109
9999 mem: storing 7 in location 1109
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 144 -> 143
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 143 -> 144
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 144 -> 145
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 80 -> 81
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 45
9999 mem: storing 1110 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1254 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1110
9999 mem: storing 32 in location 1110
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1254 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1111
9999 mem: storing 7 in location 1111
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 145 -> 144
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 144 -> 145
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 145 -> 146
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 81 -> 82
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 46
9999 mem: storing 1112 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1254 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1112
9999 mem: storing 32 in location 1112
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1254 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1113
9999 mem: storing 7 in location 1113
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 146 -> 145
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 145 -> 146
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 146 -> 147
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 82 -> 83
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 47
9999 mem: storing 1114 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1254 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1114
9999 mem: storing 32 in location 1114
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1254 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1115
9999 mem: storing 7 in location 1115
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 147 -> 146
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 146 -> 147
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 147 -> 148
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 83 -> 84
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 48
9999 mem: storing 1116 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1254 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1116
9999 mem: storing 32 in location 1116
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1254 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1117
9999 mem: storing 7 in location 1117
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 148 -> 147
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 147 -> 148
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 148 -> 149
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 84 -> 85
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 49
9999 mem: storing 1118 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1254 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1118
9999 mem: storing 32 in location 1118
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1254 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1256
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1119
9999 mem: storing 7 in location 1119
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 149 -> 148
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 148 -> 149
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 106 run: jump {: "offset"}
9998 run: jumping to instruction 9
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1288 is 5
9999 mem: storing 1 in location 1289
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 1
9998 run: jumping to instruction 15
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 149 -> 148
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 148 -> 149
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1321
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1322
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1318 is 1012
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 149 -> 150
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 150 -> 149
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 149 -> 150
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1319 is 1312
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1262
9999 mem: incrementing refcount of 1312: 5 -> 6
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1262 is 1312
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 4
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1263
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 4
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1314
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1314 is 1290
9999 mem: storing 1290 in location 1264
9999 mem: incrementing refcount of 1290: 5 -> 6
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 5 in location 1265
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 4
9999 mem: location 1265 is 5
9999 mem: storing 0 in location 1266
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9998 run: base address is 1291
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 4
9998 run: address to copy is 1308
9998 run: its type is event
9999 mem: location 1308 is 0
9999 mem: location 1309 is 26
9999 mem: location 1310 is 0
9999 mem: location 1311 is 0
9999 mem: storing 0 in location 1268
9999 mem: storing 26 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 4
9999 mem: location 1263 is 1313
9999 mem: storing 5 in location 1313
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1268 is 0
9999 mem: location 1269 is 26
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: location 1262 is 1312
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1312
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1323
9999 mem: storing 26 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: decrementing refcount of 1312: 6 -> 5
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 5 -> 6
9999 mem: storing 1 in location 1327
9999 mem: storing 0 in location 1328
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1323 is 0
9999 mem: location 1324 is 26
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 mem: storing 0 in location 1329
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1329 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 mem: location 1323 is 0
9999 mem: location 1324 is 26
9999 mem: location 1325 is 0
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1331
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1334
9999 mem: incrementing refcount of 1012: 150 -> 151
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1335
9999 mem: incrementing refcount of 1147: 19 -> 20
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1336
9999 mem: storing 26 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1340
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1335 is 1147
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 151 -> 152
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1214
 105 run: return {width: "number"}
9999 mem: location 1214 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1341
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1334 is 1012
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 152 -> 153
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 105 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1342
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1343
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1344
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1345
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1346
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1347
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1346 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1348
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1347 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1349
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1336 is 0
9999 mem: location 1337 is 26
9999 mem: location 1338 is 0
9999 mem: location 1339 is 0
9999 mem: storing 1337 in location 1350
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1350 is 1337
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 26
9999 mem: storing 0 in location 1351
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1350 is 1337
9999 mem: location 1337 is 26
9999 mem: storing 1 in location 1362
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1362 is 1
9998 run: jump-unless fell through
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1473
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1354
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1473
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1473
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1473 in location 1213
9999 mem: incrementing refcount of 1473: 2 -> 3
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1213 is 1473
9999 mem: skipping refcount at 1473
9999 mem: location 1474 is 1120
9999 mem: location 1475 is 1462
9999 mem: location 1213 is 1473
9999 mem: skipping refcount at 1473
9998 run: address to copy is 1474
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1474 is 1120
9999 mem: storing 1120 in location 1214
9999 mem: incrementing refcount of 1120: 3 -> 4
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1214 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1353
9999 mem: incrementing refcount of 1120: 4 -> 5
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1354 is 1158
9999 mem: location 1158 is 1473
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1473 in location 1213
9999 mem: incrementing refcount of 1473: 3 -> 4
 105 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1473
9999 mem: skipping refcount at 1473
9999 mem: location 1474 is 1120
9999 mem: location 1475 is 1462
9999 mem: location 1213 is 1473
9999 mem: skipping refcount at 1473
9998 run: address to copy is 1475
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1475 is 1462
9999 mem: storing 1462 in location 1214
9999 mem: incrementing refcount of 1462: 4 -> 5
 105 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1214 is 1462
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1462
9999 mem: location 1354 is 1158
9999 mem: decrementing refcount of 1473: 4 -> 3
9999 mem: storing 1462 in location 1158
9999 mem: incrementing refcount of 1462: 5 -> 6
 104 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 0
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1352
 104 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1353 is 1120
9999 mem: location 1352 is 1159
9999 mem: location 1159 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 105 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1163
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1164
 105 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1476
9999 mem: storing 1476 in location 1165
9999 mem: incrementing refcount of 1476: 0 -> 1
 105 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1120
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1476
9999 mem: skipping refcount at 1476
9999 mem: location 1165 is 1476
9999 mem: skipping refcount at 1476
9999 mem: storing 1120 in location 1477
9999 mem: storing 0 in location 1478
 105 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1476
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1476
9999 mem: location 1352 is 1159
9999 mem: storing 1476 in location 1159
9999 mem: incrementing refcount of 1476: 1 -> 2
 104 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1355
 104 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1355 is 1122
9998 run: jump-unless fell through
 104 run: {start2: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1363
 104 run: {anchor: ("address" "shared" "duplex-list" "character")} <- get {deletion: ("address" "delete-operation"), "lookup": ()}, {delete-from: "offset"}
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1355 is 1122
9998 run: address to copy is 1129
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1129 is 1166
9999 mem: storing 1166 in location 1364
9999 mem: incrementing refcount of 1166: 28 -> 29
 104 run: jump-unless {anchor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1364 is 1166
9998 run: jump-unless fell through
 104 run: {deleted: ("address" "shared" "duplex-list" "character")} <- get {deletion: ("address" "delete-operation"), "lookup": ()}, {deleted-text: "offset"}
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1355 is 1122
9998 run: address to copy is 1128
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1128 is 1458
9999 mem: storing 1458 in location 1365
9999 mem: incrementing refcount of 1458: 15 -> 16
 104 run: {old-cursor: ("address" "shared" "duplex-list" "character")} <- last_2 {deleted: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1365 is 1458
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1163
9999 mem: incrementing refcount of 1458: 16 -> 17
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1163 is 1458
9999 mem: storing 1458 in location 1164
9999 mem: incrementing refcount of 1458: 17 -> 18
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1164 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 0
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 1465
9999 mem: storing 1465 in location 1214
9999 mem: incrementing refcount of 1465: 9 -> 10
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1465
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1465
9999 mem: storing 1465 in location 1165
9999 mem: incrementing refcount of 1465: 10 -> 11
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1165 is 1465
9998 run: jump-unless fell through
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1165 is 1465
9999 mem: decrementing refcount of 1458: 19 -> 18
9999 mem: storing 1465 in location 1164
9999 mem: incrementing refcount of 1465: 11 -> 12
 105 run: jump {: "offset"}
9998 run: jumping to instruction 4
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1164 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 12 -> 13
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 1469
9999 mem: storing 1469 in location 1214
9999 mem: incrementing refcount of 1469: 6 -> 7
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1465: 13 -> 12
9999 mem: storing 1469 in location 1165
9999 mem: incrementing refcount of 1469: 7 -> 8
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1165 is 1469
9998 run: jump-unless fell through
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1165 is 1469
9999 mem: decrementing refcount of 1465: 12 -> 11
9999 mem: storing 1469 in location 1164
9999 mem: incrementing refcount of 1469: 8 -> 9
 105 run: jump {: "offset"}
9998 run: jumping to instruction 4
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1164 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1471
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1469: 10 -> 9
9999 mem: storing 0 in location 1165
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1165 is 0
9998 run: jumping to instruction 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1164 is 1469
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1469
9999 mem: storing 1469 in location 1366
9999 mem: incrementing refcount of 1469: 9 -> 10
 104 run: insert-range_2 {anchor: ("address" "shared" "duplex-list" "character")}, {deleted: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1364 is 1166
9999 mem: location 1365 is 1458
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1451
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1454
9999 mem: incrementing refcount of 1166: 29 -> 30
 105 run: {start: ("address" "shared" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1455
9999 mem: incrementing refcount of 1458: 18 -> 19
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1454 is 1166
9998 run: jumping to instruction 5
 105 run: jump-if {start: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1455 is 1458
9998 run: jumping to instruction 7
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1458
9999 mem: storing 1458 in location 1456
9999 mem: incrementing refcount of 1458: 19 -> 20
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1456 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 0
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 1465
9999 mem: storing 1465 in location 1214
9999 mem: incrementing refcount of 1465: 11 -> 12
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1465
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1465
9999 mem: storing 1465 in location 1457
9999 mem: incrementing refcount of 1465: 12 -> 13
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1457 is 1465
9998 run: jump-unless fell through
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1457 is 1465
9999 mem: decrementing refcount of 1458: 21 -> 20
9999 mem: storing 1465 in location 1456
9999 mem: incrementing refcount of 1465: 13 -> 14
 105 run: jump {: "offset"}
9998 run: jumping to instruction 9
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1456 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 1469
9999 mem: storing 1469 in location 1214
9999 mem: incrementing refcount of 1469: 10 -> 11
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1465: 15 -> 14
9999 mem: storing 1469 in location 1457
9999 mem: incrementing refcount of 1469: 11 -> 12
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1457 is 1469
9998 run: jump-unless fell through
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1457 is 1469
9999 mem: decrementing refcount of 1465: 14 -> 13
9999 mem: storing 1469 in location 1456
9999 mem: incrementing refcount of 1469: 12 -> 13
 105 run: jump {: "offset"}
9998 run: jumping to instruction 9
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1456 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1471
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1469: 14 -> 13
9999 mem: storing 0 in location 1457
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1457 is 0
9998 run: jumping to instruction 13
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1454 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 30 -> 31
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1457
 105 run: {end: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1457 is 0
9999 mem: location 1456 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy to is 1471
9999 mem: storing 0 in location 1471
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1457 is 0
9998 run: jumping to instruction 19
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1454 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1455 is 1458
9999 mem: location 1454 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy to is 1168
9999 mem: storing 1458 in location 1168
 105 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1455 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 0
9999 mem: location 1454 is 1166
9999 mem: location 1455 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy to is 1461
9999 mem: storing 1166 in location 1461
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1454 is 1166
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {old-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1366 is 1469
9999 mem: location 1345 is 1151
9999 mem: decrementing refcount of 1166: 31 -> 30
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 13 -> 14
 104 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {deletion: ("address" "delete-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1355 is 1122
9998 run: address to copy is 1122
9998 run: its type is "number"
9999 mem: location 1122 is 1
9999 mem: location 1346 is 1155
9999 mem: storing 1 in location 1155
 104 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {deletion: ("address" "delete-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1355 is 1122
9998 run: address to copy is 1123
9998 run: its type is "number"
9999 mem: location 1123 is 3
9999 mem: location 1347 is 1156
9999 mem: storing 3 in location 1156
 104 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1335 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1358
 104 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {deletion: ("address" "delete-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1355 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1355 is 1122
9998 run: address to copy is 1124
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1124 is 1166
9999 mem: location 1358 is 1149
9999 mem: decrementing refcount of 1166: 30 -> 29
9999 mem: storing 1166 in location 1149
9999 mem: incrementing refcount of 1166: 29 -> 30
 104 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1359
 104 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 94
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 3
9999 mem: location 1124 is 1166
9999 mem: location 1125 is 1
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1166
9999 mem: location 1128 is 1458
9999 mem: location 1129 is 1166
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1353 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1360
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 106
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1334 is 1012
9999 mem: location 1335 is 1147
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9998 run: result 1 is 1147
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1012: 153 -> 152
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 152 -> 153
9999 mem: decrementing refcount of 1147: 20 -> 19
9999 mem: storing 1147 in location 1320
9999 mem: incrementing refcount of 1147: 19 -> 20
9999 mem: storing 1 in location 1330
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 103 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1318 is 1012
9999 mem: location 1320 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1223
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1226
9999 mem: incrementing refcount of 1012: 153 -> 154
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1227
9999 mem: incrementing refcount of 1147: 20 -> 21
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1228
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1227 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1229
 104 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1180
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 154 -> 155
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1184
9999 mem: incrementing refcount of 1147: 21 -> 22
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1184 is 1147
9998 run: jumping to instruction 5
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1185
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1183 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 155 -> 156
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 106 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1186
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1187
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1188
9999 mem: incrementing refcount of 1166: 30 -> 31
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 mem: storing 1166 in location 1189
9999 mem: incrementing refcount of 1166: 31 -> 32
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 32 -> 33
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1458
9999 mem: storing 1458 in location 1214
9999 mem: incrementing refcount of 1458: 20 -> 21
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1458
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1458
9999 mem: decrementing refcount of 1166: 33 -> 32
9999 mem: storing 1458 in location 1188
9999 mem: incrementing refcount of 1458: 21 -> 22
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1190
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1191
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1192
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1193
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1194
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1195
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1191 is 1
9999 mem: location 1192 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 156 -> 157
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 157 -> 156
9999 mem: storing 1012 in location 1183
9999 mem: incrementing refcount of 1012: 156 -> 157
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 1458
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1196
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1196 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 0
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1198
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1188 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1188 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1459
9998 run: its type is "character"
9999 mem: location 1459 is 97
9999 mem: storing 97 in location 1199
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1190 is 7
9999 mem: location 1199 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1479
9999 mem: storing 10 in location 1480
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1482
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1483
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1482 is 7
9999 mem: storing 1 in location 1484
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1483 is 97
9999 mem: storing 0 in location 1485
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1482 is 7
9999 mem: storing 0 in location 1486
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1486 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1483 is 97
9999 mem: storing 0 in location 1488
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1482 is 7
9999 mem: storing 0 in location 1489
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1482 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1190
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1199 is 97
9999 mem: storing 0 in location 1200
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1200 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1192 is 0
9999 mem: location 1187 is 9
9999 mem: storing 0 in location 1202
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1199 is 97
9999 mem: location 1190 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 157 -> 158
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 10 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 85 -> 86
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 10
9999 mem: storing 1040 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 97
9999 mem: location 1255 is 1040
9999 mem: storing 97 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1040
9999 mem: location 1040 is 97
9999 mem: location 1041 is 7
9999 mem: location 1254 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 22 -> 23
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 1465
9999 mem: storing 1465 in location 1214
9999 mem: incrementing refcount of 1465: 13 -> 14
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1465
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1465
9999 mem: decrementing refcount of 1458: 23 -> 22
9999 mem: storing 1465 in location 1188
9999 mem: incrementing refcount of 1465: 14 -> 15
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1166
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1213
9999 mem: incrementing refcount of 1166: 32 -> 33
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1166
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1458
9999 mem: location 1169 is 0
9999 mem: location 1213 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1458
9999 mem: storing 1458 in location 1214
9999 mem: incrementing refcount of 1458: 22 -> 23
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1458
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1458
9999 mem: decrementing refcount of 1166: 33 -> 32
9999 mem: storing 1458 in location 1189
9999 mem: incrementing refcount of 1458: 23 -> 24
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1192 is 0
9999 mem: storing 1 in location 1192
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 1465
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1196
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1196 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 1
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1198
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1188 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1188 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1466
9998 run: its type is "character"
9999 mem: location 1466 is 98
9999 mem: storing 98 in location 1199
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1190 is 7
9999 mem: location 1199 is 98
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1479
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1482
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1483
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1482 is 7
9999 mem: storing 1 in location 1484
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1483 is 98
9999 mem: storing 0 in location 1485
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1482 is 7
9999 mem: storing 0 in location 1486
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1486 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1483 is 98
9999 mem: storing 0 in location 1488
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1482 is 7
9999 mem: storing 0 in location 1489
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1482 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1190
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1199 is 98
9999 mem: storing 0 in location 1200
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1200 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1192 is 1
9999 mem: location 1187 is 9
9999 mem: storing 0 in location 1202
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1199 is 98
9999 mem: location 1190 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 158 -> 159
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 98
  90 print-character: 98 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 11 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 86 -> 87
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 98
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 11
9999 mem: storing 1042 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 98
9999 mem: location 1255 is 1042
9999 mem: storing 98 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1042
9999 mem: location 1042 is 98
9999 mem: location 1043 is 7
9999 mem: location 1254 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 15 -> 16
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 1469
9999 mem: storing 1469 in location 1214
9999 mem: incrementing refcount of 1469: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1465: 16 -> 15
9999 mem: storing 1469 in location 1188
9999 mem: incrementing refcount of 1469: 15 -> 16
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1458
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1458 in location 1213
9999 mem: incrementing refcount of 1458: 24 -> 25
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1458
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9999 mem: location 1459 is 97
9999 mem: location 1460 is 1465
9999 mem: location 1461 is 1166
9999 mem: location 1213 is 1458
9999 mem: skipping refcount at 1458
9998 run: address to copy is 1460
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1460 is 1465
9999 mem: storing 1465 in location 1214
9999 mem: incrementing refcount of 1465: 15 -> 16
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1465
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1465
9999 mem: decrementing refcount of 1458: 25 -> 24
9999 mem: storing 1465 in location 1189
9999 mem: incrementing refcount of 1465: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1192 is 1
9999 mem: storing 2 in location 1192
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 1469
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1186 is 5
9999 mem: storing 0 in location 1196
9990 schedule: render/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1196 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 2
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1198
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1198 is 0
9998 run: jumping to instruction 30
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1188 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1188 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is "character"
9999 mem: location 1470 is 99
9999 mem: storing 99 in location 1199
 105 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1190 is 7
9999 mem: location 1199 is 99
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1479
 106 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1482
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1483
 106 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1482 is 7
9999 mem: storing 1 in location 1484
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 106 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1483 is 99
9999 mem: storing 0 in location 1485
 106 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1485 is 0
9998 run: jumping to instruction 11
 106 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1482 is 7
9999 mem: storing 0 in location 1486
 106 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1486 is 0
9998 run: jumping to instruction 20
 106 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1484 is 1
9998 run: jump-unless fell through
 106 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1483 is 99
9999 mem: storing 0 in location 1488
 106 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 27
 106 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1482 is 7
9999 mem: storing 0 in location 1489
 106 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jumping to instruction 35
 106 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1482 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 7
9999 mem: storing 7 in location 1190
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1199 is 99
9999 mem: storing 0 in location 1200
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1200 is 0
9998 run: jumping to instruction 52
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1192 is 2
9999 mem: location 1187 is 9
9999 mem: storing 0 in location 1202
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1202 is 0
9998 run: jumping to instruction 62
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1183 is 1012
9999 mem: location 1199 is 99
9999 mem: location 1190 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 159 -> 160
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1239
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 99
  90 print-character: 99 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 12 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 87 -> 88
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 99
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 12
9999 mem: storing 1044 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 99
9999 mem: location 1255 is 1044
9999 mem: storing 99 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1044
9999 mem: location 1044 is 99
9999 mem: location 1045 is 7
9999 mem: location 1254 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1213
9999 mem: incrementing refcount of 1469: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1469
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 99
9999 mem: location 1471 is 0
9999 mem: location 1472 is 1465
9999 mem: location 1213 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1471
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1214
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1469: 17 -> 16
9999 mem: storing 0 in location 1188
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1465
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1465 in location 1213
9999 mem: incrementing refcount of 1465: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1213 is 1465
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9999 mem: location 1466 is 98
9999 mem: location 1467 is 1469
9999 mem: location 1468 is 1458
9999 mem: location 1213 is 1465
9999 mem: skipping refcount at 1465
9998 run: address to copy is 1467
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1467 is 1469
9999 mem: storing 1469 in location 1214
9999 mem: incrementing refcount of 1469: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1214 is 1469
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1469
9999 mem: decrementing refcount of 1465: 18 -> 17
9999 mem: storing 1469 in location 1189
9999 mem: incrementing refcount of 1469: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1192 is 2
9999 mem: storing 3 in location 1192
 105 run: jump {: "offset"}
9998 run: jumping to instruction 20
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1188 is 0
9998 run: jumping to instruction 68
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1204
 105 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 0
9999 mem: location 1204 is 1150
9999 mem: storing 0 in location 1150
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1197
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 1 in location 1205
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1197 is 1
9999 mem: location 1205 is 1
9999 mem: storing 1 in location 1206
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 0 in location 1207
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1206 is 1
9999 mem: location 1207 is 0
9999 mem: storing 1 in location 1208
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1193 is 1155
9999 mem: storing 1 in location 1155
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1192 is 3
9999 mem: location 1194 is 1156
9999 mem: storing 3 in location 1156
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1469
9999 mem: location 1195 is 1151
9999 mem: decrementing refcount of 1469: 18 -> 17
9999 mem: storing 1469 in location 1151
9999 mem: incrementing refcount of 1469: 17 -> 18
 105 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1184 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1209
 105 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1191 is 1
9999 mem: location 1209 is 1154
9999 mem: storing 1 in location 1154
 105 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1191 is 1
9999 mem: location 1192 is 3
9999 mem: location 1183 is 1012
9999 mem: location 1184 is 1147
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1
9998 run: result 1 is 3
9999 mem: storing 1 in location 1230
9999 mem: storing 3 in location 1231
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1226 is 1012
9999 mem: location 1231 is 3
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 160 -> 161
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1174
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 161 -> 162
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 13 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 88 -> 89
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 13
9999 mem: storing 1046 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1254 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1046
9999 mem: storing 32 in location 1046
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1254 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1047
9999 mem: storing 7 in location 1047
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 162 -> 161
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 161 -> 162
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 162 -> 163
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 14 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 89 -> 90
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 14
9999 mem: storing 1048 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1254 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1048
9999 mem: storing 32 in location 1048
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1254 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1049
9999 mem: storing 7 in location 1049
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 163 -> 162
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 162 -> 163
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 163 -> 164
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 15 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 90 -> 91
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 15
9999 mem: storing 1050 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1254 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1050
9999 mem: storing 32 in location 1050
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1254 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1051
9999 mem: storing 7 in location 1051
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 164 -> 163
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 163 -> 164
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 164 -> 165
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 16 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 91 -> 92
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 16
9999 mem: storing 1052 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1254 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1052
9999 mem: storing 32 in location 1052
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1254 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1053
9999 mem: storing 7 in location 1053
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 165 -> 164
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 164 -> 165
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 165 -> 166
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 17 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 92 -> 93
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 17
9999 mem: storing 1054 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1254 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1054
9999 mem: storing 32 in location 1054
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1254 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1055
9999 mem: storing 7 in location 1055
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 166 -> 165
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 165 -> 166
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 166 -> 167
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 18 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 93 -> 94
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 18
9999 mem: storing 1056 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1254 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1056
9999 mem: storing 32 in location 1056
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1056
9999 mem: location 1056 is 32
9999 mem: location 1057 is 7
9999 mem: location 1254 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1057
9999 mem: storing 7 in location 1057
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 167 -> 166
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 166 -> 167
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 167 -> 168
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 1
9999 mem: location 1241 is 10
9999 mem: storing 10 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 10
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 19 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 94 -> 95
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 19
9999 mem: storing 1058 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1254 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1058
9999 mem: storing 32 in location 1058
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1058
9999 mem: location 1058 is 32
9999 mem: location 1059 is 7
9999 mem: location 1254 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1059
9999 mem: storing 7 in location 1059
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 168 -> 167
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 167 -> 168
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1230 is 1
9999 mem: storing 2 in location 1230
 104 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1226 is 1012
9999 mem: location 1230 is 2
9999 mem: location 1228 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
9999 mem: incrementing refcount of 1012: 168 -> 169
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 105 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1265
 105 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1266
9999 mem: storing 1 in location 1267
 105 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 1
9998 run: jumping to instruction 9
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1268
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1270
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1263 is 2
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 169 -> 170
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1219
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1221 is 1015
9999 mem: storing 2 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 0
9999 mem: location 1222 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 170 -> 169
9999 mem: storing 1012 in location 1262
9999 mem: incrementing refcount of 1012: 169 -> 170
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 0
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 170 -> 171
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 95 -> 96
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 20
9999 mem: storing 1060 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1254 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1060
9999 mem: storing 9480 in location 1060
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1254 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1061
9999 mem: storing 245 in location 1061
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 0
9999 mem: storing 1 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 1
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 171 -> 172
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 96 -> 97
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 21
9999 mem: storing 1062 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1254 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1062
9999 mem: storing 9480 in location 1062
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1254 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1063
9999 mem: storing 245 in location 1063
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 1
9999 mem: storing 2 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 2
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 172 -> 173
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 97 -> 98
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 22
9999 mem: storing 1064 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1254 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1064
9999 mem: storing 9480 in location 1064
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1254 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1065
9999 mem: storing 245 in location 1065
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 2
9999 mem: storing 3 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 3
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 173 -> 174
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 98 -> 99
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 23
9999 mem: storing 1066 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1254 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1066
9999 mem: storing 9480 in location 1066
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1254 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1067
9999 mem: storing 245 in location 1067
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 3
9999 mem: storing 4 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 4
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 174 -> 175
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 24 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 99 -> 100
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 24
9999 mem: storing 1068 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1254 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1068
9999 mem: storing 9480 in location 1068
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1254 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1069
9999 mem: storing 245 in location 1069
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 4
9999 mem: storing 5 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 5
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 175 -> 176
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 25 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 100 -> 101
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 25
9999 mem: storing 1070 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1254 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1070
9999 mem: storing 9480 in location 1070
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1254 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1071
9999 mem: storing 245 in location 1071
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 5
9999 mem: storing 6 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 6
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 176 -> 177
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 26 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 101 -> 102
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 26
9999 mem: storing 1072 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1254 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1072
9999 mem: storing 9480 in location 1072
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1254 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1073
9999 mem: storing 245 in location 1073
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 6
9999 mem: storing 7 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 7
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 177 -> 178
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 27 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 102 -> 103
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 27
9999 mem: storing 1074 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1254 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1074
9999 mem: storing 9480 in location 1074
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1254 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1075
9999 mem: storing 245 in location 1075
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 7
9999 mem: storing 8 in location 1264
9990 schedule: draw-horizontal/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 8
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 178 -> 179
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 28 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 103 -> 104
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 28
9999 mem: storing 1076 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1254 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1076
9999 mem: storing 9480 in location 1076
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1076
9999 mem: location 1076 is 9480
9999 mem: location 1077 is 245
9999 mem: location 1254 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1077
9999 mem: storing 245 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 8
9999 mem: storing 9 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 9
9999 mem: location 1265 is 9
9999 mem: storing 1 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 105 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1262 is 1012
9999 mem: location 1266 is 9480
9999 mem: location 1268 is 245
9999 mem: location 1270 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 179 -> 180
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1236
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1237
9999 mem: storing 1 in location 1238
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 9480
  90 print-character: 9480 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 106 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1246
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 106 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1241 is 10
9999 mem: storing 20 in location 1249
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 20
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 29 in location 1249
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 104 -> 105
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 9480
9999 mem: storing 0 in location 1252
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 29
9999 mem: storing 1078 in location 1254
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1254 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1255
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 9480
9999 mem: location 1255 is 1078
9999 mem: storing 9480 in location 1078
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1078
9999 mem: location 1078 is 9480
9999 mem: location 1079 is 245
9999 mem: location 1254 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1256
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 245
9999 mem: location 1256 is 1079
9999 mem: storing 245 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1264 is 9
9999 mem: storing 10 in location 1264
 105 run: jump {: "offset"}
9998 run: jumping to instruction 22
 105 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1264 is 10
9999 mem: location 1265 is 9
9999 mem: storing 0 in location 1272
 105 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 0
9998 run: jumping to instruction 27
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1230 is 2
9999 mem: storing 3 in location 1230
 104 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1226 is 1012
9999 mem: location 1230 is 3
9999 mem: location 1228 is 0
9999 mem: location 1228 is 0
9999 mem: location 1229 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 180 -> 181
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1219
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1220
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1221
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1222
 105 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jumping to instruction 10
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1219 is 3
9999 mem: location 1220 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 181 -> 182
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 182 -> 181
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 181 -> 182
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1220 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 182 -> 183
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 183 -> 184
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 30 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 105 -> 106
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 30
9999 mem: storing 1080 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1254 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1080
9999 mem: storing 32 in location 1080
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1254 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1081
9999 mem: storing 7 in location 1081
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 184 -> 183
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 183 -> 184
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 184 -> 185
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 31 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 106 -> 107
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 31
9999 mem: storing 1082 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1254 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1082
9999 mem: storing 32 in location 1082
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1254 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1083
9999 mem: storing 7 in location 1083
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 185 -> 184
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 184 -> 185
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 185 -> 186
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 32 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 107 -> 108
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 32
9999 mem: storing 1084 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1254 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1084
9999 mem: storing 32 in location 1084
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1254 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1085
9999 mem: storing 7 in location 1085
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 186 -> 185
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 185 -> 186
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 186 -> 187
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 33 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 108 -> 109
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 33
9999 mem: storing 1086 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1254 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1086
9999 mem: storing 32 in location 1086
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1254 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1087
9999 mem: storing 7 in location 1087
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 187 -> 186
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 186 -> 187
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 187 -> 188
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 34 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 109 -> 110
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 34
9999 mem: storing 1088 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1254 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1088
9999 mem: storing 32 in location 1088
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1254 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1089
9999 mem: storing 7 in location 1089
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 188 -> 187
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 187 -> 188
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 188 -> 189
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 35 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 110 -> 111
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 35
9999 mem: storing 1090 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1254 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1090
9999 mem: storing 32 in location 1090
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1254 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1091
9999 mem: storing 7 in location 1091
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 189 -> 188
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 188 -> 189
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 189 -> 190
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 36 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 111 -> 112
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 36
9999 mem: storing 1092 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1254 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1092
9999 mem: storing 32 in location 1092
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1254 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1093
9999 mem: storing 7 in location 1093
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 190 -> 189
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 189 -> 190
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 190 -> 191
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 37 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 112 -> 113
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 37
9999 mem: storing 1094 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1254 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1094
9999 mem: storing 32 in location 1094
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1254 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1095
9999 mem: storing 7 in location 1095
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 191 -> 190
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 190 -> 191
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 191 -> 192
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 38 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 113 -> 114
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 38
9999 mem: storing 1096 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1254 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1096
9999 mem: storing 32 in location 1096
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1254 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1097
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 192 -> 191
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 191 -> 192
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 192 -> 193
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 3
9999 mem: location 1241 is 10
9999 mem: storing 30 in location 1249
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 30
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 39 in location 1249
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 114 -> 115
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 39
9999 mem: storing 1098 in location 1254
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1254 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1255
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1098
9999 mem: storing 32 in location 1098
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1254 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1256
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1099
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 193 -> 192
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 192 -> 193
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1218 is 1012
9999 mem: location 1219 is 3
9999 mem: location 1221 is 0
9999 mem: location 1222 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1281
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 193 -> 194
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1285
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1286
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1287
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1285 is 3
9999 mem: storing 4 in location 1285
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1285 is 4
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 194 -> 195
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 195 -> 194
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 194 -> 195
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1284 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1213
9999 mem: incrementing refcount of 1012: 195 -> 196
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1213 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1213 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1214
 107 run: return {height: "number"}
9999 mem: location 1214 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1288
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1285 is 4
9999 mem: location 1288 is 5
9999 mem: storing 0 in location 1289
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1285 is 4
9999 mem: location 1286 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1273
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 196 -> 197
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1277 is 4
9999 mem: location 1279 is 1015
9999 mem: storing 4 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 197 -> 196
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 196 -> 197
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1284 is 1012
9999 mem: location 1286 is 0
9999 mem: location 1287 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 197 -> 198
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1174
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1175
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1176
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1177
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 198 -> 199
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 40 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 115 -> 116
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 40
9999 mem: storing 1100 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1254 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1100
9999 mem: storing 32 in location 1100
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1254 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1101
9999 mem: storing 7 in location 1101
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1245 is 1016
9999 mem: storing 1 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 199 -> 198
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 198 -> 199
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 1
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 199 -> 200
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 41 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 116 -> 117
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 41
9999 mem: storing 1102 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1254 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1102
9999 mem: storing 32 in location 1102
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1254 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1103
9999 mem: storing 7 in location 1103
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1245 is 1016
9999 mem: storing 2 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 200 -> 199
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 199 -> 200
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 1
9999 mem: storing 2 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 2
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 200 -> 201
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 42 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 117 -> 118
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 42
9999 mem: storing 1104 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1254 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1104
9999 mem: storing 32 in location 1104
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1254 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1105
9999 mem: storing 7 in location 1105
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1245 is 1016
9999 mem: storing 3 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 201 -> 200
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 200 -> 201
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 2
9999 mem: storing 3 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 3
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 201 -> 202
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 43 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 118 -> 119
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 43
9999 mem: storing 1106 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1254 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1106
9999 mem: storing 32 in location 1106
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1254 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1107
9999 mem: storing 7 in location 1107
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1245 is 1016
9999 mem: storing 4 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 202 -> 201
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 201 -> 202
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 3
9999 mem: storing 4 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 4
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 202 -> 203
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/scenario_editor-can-undo-and-redo-ctrl-u-2
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: storing 44 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 119 -> 120
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 44
9999 mem: storing 1108 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1254 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1108
9999 mem: storing 32 in location 1108
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1254 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1109
9999 mem: storing 7 in location 1109
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 4
9999 mem: location 1245 is 1016
9999 mem: storing 5 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 203 -> 202
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 202 -> 203
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 4
9999 mem: storing 5 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 5
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 203 -> 204
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: storing 45 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 5
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 120 -> 121
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 45
9999 mem: storing 1110 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1254 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1110
9999 mem: storing 32 in location 1110
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1254 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1111
9999 mem: storing 7 in location 1111
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 5
9999 mem: location 1245 is 1016
9999 mem: storing 6 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 204 -> 203
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 203 -> 204
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 5
9999 mem: storing 6 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 6
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 204 -> 205
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: storing 46 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 6
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 121 -> 122
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 46
9999 mem: storing 1112 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1254 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1112
9999 mem: storing 32 in location 1112
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1254 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1113
9999 mem: storing 7 in location 1113
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 6
9999 mem: location 1245 is 1016
9999 mem: storing 7 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 205 -> 204
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 204 -> 205
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 6
9999 mem: storing 7 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 7
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 205 -> 206
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: storing 47 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 7
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 122 -> 123
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 47
9999 mem: storing 1114 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1254 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1114
9999 mem: storing 32 in location 1114
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1254 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1115
9999 mem: storing 7 in location 1115
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 7
9999 mem: location 1245 is 1016
9999 mem: storing 8 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 206 -> 205
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 205 -> 206
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 7
9999 mem: storing 8 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 8
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 206 -> 207
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: storing 48 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 8
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 123 -> 124
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 48
9999 mem: storing 1116 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1254 is 1116
9998 run: address to copy is 1116
9999 mem: storing 1116 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1116
9999 mem: storing 32 in location 1116
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1116
9999 mem: location 1116 is 32
9999 mem: location 1117 is 7
9999 mem: location 1254 is 1116
9998 run: address to copy is 1117
9999 mem: storing 1117 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1117
9999 mem: storing 7 in location 1117
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1257 is 9
9999 mem: storing 0 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 8
9999 mem: location 1245 is 1016
9999 mem: storing 9 in location 1016
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 207 -> 206
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 206 -> 207
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 8
9999 mem: storing 9 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 9
9999 mem: location 1175 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1173 is 1012
9999 mem: location 1176 is 32
9999 mem: location 1177 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1232
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1235
9999 mem: incrementing refcount of 1012: 207 -> 208
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1236
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1237
9999 mem: storing 1 in location 1238
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1238 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1239
9999 mem: storing 1 in location 1240
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1240 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1236 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1235 is 1012
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1241
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1242
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1243
 108 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1242 is 5
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1245
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1241 is 10
9999 mem: storing 1 in location 1244
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1244 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1246
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 43
 108 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1243 is 1015
9999 mem: location 1015 is 4
9999 mem: location 1241 is 10
9999 mem: storing 40 in location 1249
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1249 is 40
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: storing 49 in location 1249
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1235 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1250
9999 mem: incrementing refcount of 1018: 124 -> 125
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1251
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1236 is 32
9999 mem: storing 0 in location 1252
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jumping to instruction 63
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1250 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1249 is 49
9999 mem: storing 1118 in location 1254
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1254 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1254 is 1118
9998 run: address to copy is 1118
9999 mem: storing 1118 in location 1255
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1236 is 32
9999 mem: location 1255 is 1118
9999 mem: storing 32 in location 1118
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1254 is 1118
9999 mem: location 1118 is 32
9999 mem: location 1119 is 7
9999 mem: location 1254 is 1118
9998 run: address to copy is 1119
9999 mem: storing 1119 in location 1256
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1237 is 7
9999 mem: location 1256 is 1119
9999 mem: storing 7 in location 1119
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1241 is 10
9999 mem: storing 9 in location 1257
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1245 is 1016
9999 mem: location 1016 is 9
9999 mem: location 1257 is 9
9999 mem: storing 1 in location 1258
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1258 is 1
9998 run: jumping to instruction 74
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1235 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 208 -> 207
9999 mem: storing 1012 in location 1173
9999 mem: incrementing refcount of 1012: 207 -> 208
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1174 is 9
9999 mem: storing 10 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1174 is 10
9999 mem: location 1175 is 9
9999 mem: storing 1 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1173 is 1012
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1285 is 4
9999 mem: storing 5 in location 1285
 106 run: jump {: "offset"}
9998 run: jumping to instruction 9
 106 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1285 is 5
9999 mem: location 1288 is 5
9999 mem: storing 1 in location 1289
 106 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 1
9998 run: jumping to instruction 15
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1226 is 1012
9999 mem: location 1227 is 1147
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 208 -> 207
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 207 -> 208
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1321
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1469
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 1
9999 mem: location 1155 is 1
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1462
9999 mem: location 1159 is 1476
9999 mem: location 1320 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1322
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1318 is 1012
9999 mem: location 1321 is 1
9999 mem: location 1322 is 3
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1215
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1218
9999 mem: incrementing refcount of 1012: 208 -> 209
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1219
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1220
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1218 is 1012
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 4
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1221
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1221 is 1015
9999 mem: storing 1 in location 1015
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 9
9999 mem: location 1017 is 1018
9999 mem: location 1218 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1222
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1220 is 3
9999 mem: location 1222 is 1016
9999 mem: storing 3 in location 1016
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1218 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 209 -> 208
9999 mem: storing 1012 in location 1318
9999 mem: incrementing refcount of 1012: 208 -> 209
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1319 is 1312
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1259
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1312 in location 1262
9999 mem: incrementing refcount of 1312: 6 -> 7
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1262 is 1312
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 5
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1313
9999 mem: storing 1313 in location 1263
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9999 mem: location 1313 is 5
9999 mem: location 1314 is 1290
9999 mem: location 1262 is 1312
9999 mem: skipping refcount at 1312
9998 run: address to copy is 1314
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1314 is 1290
9999 mem: storing 1290 in location 1264
9999 mem: incrementing refcount of 1290: 6 -> 7
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1264 is 1290
9999 mem: skipping refcount at 1290
9999 mem: storing 5 in location 1265
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1263 is 1313
9999 mem: location 1313 is 5
9999 mem: location 1265 is 5
9999 mem: storing 1 in location 1266
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1266 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1210
9999 mem: storing 1210 in location 1267
9999 mem: incrementing refcount of 1210: 0 -> 1
 104 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1267 is 1210
9999 mem: skipping refcount at 1210
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1262 is 1312
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1312
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: decrementing refcount of 1312: 7 -> 6
9999 mem: storing 1312 in location 1319
9999 mem: incrementing refcount of 1312: 6 -> 7
9999 mem: storing 1 in location 1327
9999 mem: storing 1 in location 1328
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1328 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1318 is 1012
9999 mem: location 1319 is 1312
9999 mem: location 1320 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
